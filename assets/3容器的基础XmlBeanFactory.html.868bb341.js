import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as e}from"./app.0a7c44f6.js";var t="/assets/1.f1a38bfb.png";const p={},c=e(`<p>\u672C\u6587\u6DF1\u5165\u5206\u6790\u8FD9\u6BB5\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BeanFactory</span> bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;beanFactoryTest.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+t+`" alt="" loading="lazy"></p><p>\u65F6\u5E8F\u56FE\u4ECEBeanFactoryTest\u6D4B\u8BD5\u7C7B\u5F00\u59CB\uFF0C\u901A\u8FC7\u65F6\u5E8F\u56FE\u6211\u4EEC\u53EF\u4EE5\u4E00\u76EE\u4E86\u7136\u5730\u770B\u5230\u6574\u4E2A\u903B\u8F91\u5904\u7406\u987A\u5E8F\u3002\u5728\u6D4B\u8BD5\u7684BeanFactoryTest\u7C7B\u4E2D\u9996\u5148\u8C03\u7528ClassPathResource\u7684\u6784\u9020\u51FD\u6570\u6765\u6784\u9020Resource \u8D44\u6E90\u6587\u4EF6\u7684\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u8FD9\u6837\u540E\u7EED\u7684\u8D44\u6E90\u5904\u7406\u5C31\u53EF\u4EE5\u7528Resource\u63D0\u4F9B\u7684\u5404\u79CD\u670D\u52A1\u6765\u64CD\u4F5C\u4E86\uFF0C\u5F53\u6211\u4EEC\u6709\u4E86Resource\u540E\u5C31\u53EF\u4EE5\u8FDB\u884CXmlBeanFactory\u7684\u521D\u59CB\u5316\u4E86.\u90A3\u4E48Rsource\u8D44\u6E90\u662F\u5982\u4F55\u5C01\u88C5\u7684\u5462\uFF1F</p><h2 id="\u914D\u7F6E\u6587\u4EF6\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u6587\u4EF6\u5C01\u88C5" aria-hidden="true">#</a> \u914D\u7F6E\u6587\u4EF6\u5C01\u88C5</h2><p>Spring\u7684\u914D\u7F6E\u6587\u4EF6\u8BFB\u53D6\u662F\u901A\u8FC7ClassPathResource\u8FDB\u884C\u5C01\u88C5\u7684\uFF0C\u5982newClassPathResource (&quot;beanFactoryTest.xml&quot;)\uFF0C\u90A3\u4E48ClassPathResource\u5B8C\u6210\u4E86\u4EC0\u4E48\u529F\u80FD\u5462\uFF1F</p><blockquote><p>\u5728Java\u4E2D\uFF0C\u5C06\u4E0D\u540C\u6765\u6E90\u7684\u8D44\u6E90\u62BD\u8C61\u6210URL\uFF0C\u901A\u8FC7\u6CE8\u518C\u4E0D\u540C\u7684handler\uFF08URLStreamHandler\uFF09\u6765\u5904\u7406\u4E0D\u540C\u6765\u6E90\u7684\u8D44\u6E90\u7684\u8BFB\u53D6\u903B\u8F91\uFF0C\u4E00\u822Chandler\u7684\u7C7B\u578B\u4F7F\u7528\u4E0D\u540C\u524D\u7F00\uFF08\u534F\u8BAE\uFF0CProtocol\uFF09\u6765\u8BC6\u522B\uFF0C\u5982\u201Cfile:\u201D\u3001\u201Chttp:\u201D\u3001\u201Cjar:\u201D\u7B49\uFF0C\u7136\u800CURL\u6CA1\u6709\u9ED8\u8BA4\u5B9A\u4E49\u76F8\u5BF9Classpath\u6216ServletContext\u7B49\u8D44\u6E90\u7684handler\uFF0C\u867D\u7136\u53EF\u4EE5\u6CE8\u518C\u81EA\u5DF1\u7684URLStreamHandler\u6765\u89E3\u6790\u7279\u5B9A\u7684URL\u524D\u7F00\uFF08\u534F\u8BAE\uFF09\uFF0C\u6BD4\u5982\u201Cclasspath:\u201D\uFF0C\u7136\u800C\u8FD9\u9700\u8981\u4E86\u89E3URL\u7684\u5B9E\u73B0\u673A\u5236\uFF0C\u800C\u4E14URL\u4E5F\u6CA1\u6709\u63D0\u4F9B\u4E00\u4E9B\u57FA\u672C\u7684\u65B9\u6CD5\uFF0C\u5982\u68C0\u67E5\u5F53\u524D\u8D44\u6E90\u662F\u5426\u5B58\u5728\u3001\u68C0\u67E5\u5F53\u524D\u8D44\u6E90\u662F\u5426\u53EF\u8BFB\u7B49\u65B9\u6CD5\u3002\u56E0\u800CSpring\u5BF9\u5176\u5185\u90E8\u4F7F\u7528\u5230\u7684\u8D44\u6E90\u5B9E\u73B0\u4E86\u81EA\u5DF1\u7684\u62BD\u8C61\u7ED3\u6784\uFF1AResource\u63A5\u53E3\u6765\u5C01\u88C5\u5E95\u5C42\u8D44\u6E90\u3002</p></blockquote><p>Spring\u5B9A\u4E49\u4E86\u4E00\u4E2A\u6700\u57FA\u672C\u7684\u63A5\u53E3InputStreamSource,InputStreamSource\u5C01\u88C5\u4EFB\u4F55\u80FD\u8FD4\u56DEInputStream\u7684\u7C7B\uFF0C\u6BD4\u5982File\u3001Classpath\u4E0B\u7684\u8D44\u6E90\u548CByte Array\u7B49\u3002\u5B83\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5\u5B9A\u4E49\uFF1AgetInputStream()\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684InputStream\u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">InputStreamSource</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * Return an <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">InputStream</span></span><span class="token punctuation">}</span> for the content of an underlying resource.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>It is expected that each call creates a <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>fresh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span> stream.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This requirement is particularly important when you consider an API such
	 * as JavaMail, which needs to be able to read the stream multiple times when
	 * creating mail attachments. For such a use case, it is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>required<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
	 * that each <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span> call returns a fresh stream.
	 * <span class="token keyword">@return</span> the input stream for the underlying resource (must not be <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>)
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span> if the underlying resource doesn&#39;t exist
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the content stream could not be opened
	 */</span>
	<span class="token class-name">InputStream</span> <span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5B9A\u4E49\u4E86Resource\u63A5\u53E3\u7EE7\u627F\u4E86InputStreamSource</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Interface for a resource descriptor that abstracts from the actual
 * type of underlying resource, such as a file or class path resource.
 *
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>An InputStream can be opened for every resource if it exists in
 * physical form, but a URL or File handle can just be returned for
 * certain resources. The actual behavior is implementation-specific.
 *
 * <span class="token keyword">@author</span> Juergen Hoeller
 * <span class="token keyword">@since</span> 28.12.2003
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">WritableResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ContextResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">UrlResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">FileUrlResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">FileSystemResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ClassPathResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ByteArrayResource</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">InputStreamResource</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Resource</span> <span class="token keyword">extends</span> <span class="token class-name">InputStreamSource</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/**
	 * \u786E\u5B9A\u6B64\u8D44\u6E90\u662F\u5426\u5B9E\u9645\u4EE5\u7269\u7406\u5F62\u5F0F\u5B58\u5728\u3002
	 * \u6B64\u65B9\u6CD5\u6267\u884C\u786E\u5B9A\u7684\u5B58\u5728\u6027\u68C0\u67E5\uFF0C\u800C<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">Resource</span></span></span><span class="token punctuation">}</span>\u53E5\u67C4\u7684\u5B58\u5728\u4EC5\u4FDD\u8BC1\u6709\u6548\u7684\u63CF\u8FF0\u7B26\u53E5\u67C4\u3002
	 */</span>
	<span class="token keyword">boolean</span> <span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * \u6307\u793A\u662F\u5426\u53EF\u4EE5\u901A\u8FC7<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getInputStream</span></span>\uFF08\uFF09<span class="token punctuation">}</span>\u8BFB\u53D6\u6B64\u8D44\u6E90\u7684\u975E\u7A7A\u5185\u5BB9\u3002
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u5BF9\u4E8E\u5B58\u5728\u7684\u5178\u578B\u8D44\u6E90\u63CF\u8FF0\u7B26\uFF0C\u5C06\u4E3A<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span>\uFF0C\u56E0\u4E3A\u4ECE5.1\u5F00\u59CB\uFF0C\u5B83\u4E25\u683C\u9690\u542B<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">exists</span></span>\uFF08\uFF09<span class="token punctuation">}</span>\u8BED\u4E49\u3002
	 * \u8BF7\u6CE8\u610F\uFF0C\u5C1D\u8BD5\u8FDB\u884C\u5B9E\u9645\u7684\u5185\u5BB9\u8BFB\u53D6\u4ECD\u53EF\u80FD\u4F1A\u5931\u8D25\u3002
	 * \u4F46\u662F\uFF0C\u503C<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>\u662F\u660E\u786E\u7684\u6307\u793A\u8D44\u6E90\u5185\u5BB9\u65E0\u6CD5\u8BFB\u53D6\u3002
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
	 */</span>
	<span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u6307\u793A\u6B64\u8D44\u6E90\u662F\u5426\u4EE3\u8868\u5177\u6709\u5F00\u653E\u6D41\u7684\u53E5\u67C4\u3002
	 * \u5982\u679C<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span>\uFF0C\u5219\u65E0\u6CD5\u591A\u6B21\u8BFB\u53D6InputStream\uFF0C
	 * \u5E76\u4E14\u5FC5\u987B\u5C06\u5176\u8BFB\u53D6\u5E76\u5173\u95ED\u4EE5\u907F\u514D\u8D44\u6E90\u6CC4\u6F0F\u3002
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\u5BF9\u4E8E\u5178\u578B\u7684\u8D44\u6E90\u63CF\u8FF0\u7B26\uFF0C\u5C06\u4E3A<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>\u3002
	 */</span>
	<span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u786E\u5B9A\u6B64\u8D44\u6E90\u662F\u5426\u4EE3\u8868\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u7684\u6587\u4EF6\u3002
	 * A value of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> strongly suggests (but does not guarantee)
	 * that a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span> call will succeed.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This is conservatively <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span> by default.
	 * <span class="token keyword">@since</span> 5.0
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
	 */</span>
	<span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Return a URL handle for this resource.
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the resource cannot be resolved as URL,
	 * i.e. if the resource is not available as descriptor
	 */</span>
	<span class="token class-name">URL</span> <span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Return a URI handle for this resource.
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the resource cannot be resolved as URI,
	 * i.e. if the resource is not available as descriptor
	 * <span class="token keyword">@since</span> 2.5
	 */</span>
	<span class="token class-name">URI</span> <span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Return a File handle for this resource.
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span> if the resource cannot be resolved as
	 * absolute file path, i.e. if the resource is not available in a file system
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> in case of general resolution/reading failures
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
	 */</span>
	<span class="token class-name">File</span> <span class="token function">getFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Return a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">ReadableByteChannel</span></span><span class="token punctuation">}</span>.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>It is expected that each call creates a <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>fresh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span> channel.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The default implementation returns <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Channels</span><span class="token punctuation">#</span><span class="token function">newChannel</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
	 * with the result of <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the byte channel for the underlying resource (must not be <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>)
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span> if the underlying resource doesn&#39;t exist
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the content channel could not be opened
	 * <span class="token keyword">@since</span> 5.0
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
	 */</span>
	<span class="token keyword">default</span> <span class="token class-name">ReadableByteChannel</span> <span class="token function">readableChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token class-name">Channels</span><span class="token punctuation">.</span><span class="token function">newChannel</span><span class="token punctuation">(</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Determine the content length for this resource.
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the resource cannot be resolved
	 * (in the file system or as some other known physical resource type)
	 */</span>
	<span class="token keyword">long</span> <span class="token function">contentLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Determine the last-modified timestamp for this resource.
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the resource cannot be resolved
	 * (in the file system or as some other known physical resource type)
	 */</span>
	<span class="token keyword">long</span> <span class="token function">lastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Create a resource relative to this resource.
	 * <span class="token keyword">@param</span> <span class="token parameter">relativePath</span> the relative path (relative to this resource)
	 * <span class="token keyword">@return</span> the resource handle for the relative resource
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if the relative resource cannot be determined
	 */</span>
	<span class="token class-name">Resource</span> <span class="token function">createRelative</span><span class="token punctuation">(</span><span class="token class-name">String</span> relativePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Determine a filename for this resource, i.e. typically the last
	 * part of the path: for example, &quot;myfile.txt&quot;.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if this type of resource does not
	 * have a filename.
	 */</span>
	<span class="token annotation punctuation">@Nullable</span>
	<span class="token class-name">String</span> <span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Return a description for this resource,
	 * to be used for error output when working with the resource.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Implementations are also encouraged to return this value
	 * from their <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toString</span></span><span class="token punctuation">}</span> method.
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Object</span><span class="token punctuation">#</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
	 */</span>
	<span class="token class-name">String</span> <span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>InputStreamSource\u5C01\u88C5\u4EFB\u4F55\u80FD\u8FD4\u56DEInputStream\u7684\u7C7B\uFF0C\u6BD4\u5982File\u3001Classpath\u4E0B\u7684\u8D44\u6E90\u548CByteArray\u7B49\u3002\u5B83\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5\u5B9A\u4E49\uFF1AgetInputStream()\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684InputStream\u5BF9\u8C61\u3002Resource\u63A5\u53E3\u62BD\u8C61\u4E86\u6240\u6709Spring\u5185\u90E8\u4F7F\u7528\u5230\u7684\u5E95\u5C42\u8D44\u6E90\uFF1AFile\u3001URL\u3001Classpath\u7B49\u3002\u9996\u5148\uFF0C\u5B83\u5B9A\u4E49\u4E863\u4E2A\u5224\u65AD\u5F53\u524D\u8D44\u6E90\u72B6\u6001\u7684\u65B9\u6CD5\uFF1A\u5B58\u5728\u6027\uFF08exists\uFF09\u3001\u53EF\u8BFB\u6027\uFF08isReadable\uFF09\u3001\u662F\u5426\u5904\u4E8E\u6253\u5F00\u72B6\u6001\uFF08isOpen\uFF09\u3002\u53E6\u5916\uFF0CResource\u63A5\u53E3\u8FD8\u63D0\u4F9B\u4E86\u4E0D\u540C\u8D44\u6E90\u5230URL\u3001URI\u3001File\u7C7B\u578B\u7684\u8F6C\u6362\uFF0C\u4EE5\u53CA\u83B7\u53D6lastModified\u5C5E\u6027\u3001\u6587\u4EF6\u540D\uFF08\u4E0D\u5E26\u8DEF\u5F84\u4FE1\u606F\u7684\u6587\u4EF6\u540D\uFF0CgetFilename()\uFF09\u7684\u65B9\u6CD5\u3002\u4E3A\u4E86\u4FBF\u4E8E\u64CD\u4F5C\uFF0CResource\u8FD8\u63D0\u4F9B\u4E86\u57FA\u4E8E\u5F53\u524D\u8D44\u6E90\u521B\u5EFA\u4E00\u4E2A\u76F8\u5BF9\u8D44\u6E90\u7684\u65B9\u6CD5\uFF1AcreateRelative()\u3002\u5728\u9519\u8BEF\u5904\u7406\u4E2D\u9700\u8981\u8BE6\u7EC6\u5730\u6253\u5370\u51FA\u9519\u7684\u8D44\u6E90\u6587\u4EF6\uFF0C\u56E0\u800CResource\u8FD8\u63D0\u4F9B\u4E86getDescription()\u65B9\u6CD5\u7528\u4E8E\u5728\u9519\u8BEF\u5904\u7406\u4E2D\u7684\u6253\u5370\u4FE1\u606F\u3002\u5BF9\u4E0D\u540C\u6765\u6E90\u7684\u8D44\u6E90\u6587\u4EF6\u90FD\u6709\u76F8\u5E94\u7684Resource\u5B9E\u73B0\uFF1A\u6587\u4EF6\uFF08FileSystemResource\uFF09\u3001Classpath\u8D44\u6E90\uFF08ClassPathResource\uFF09\u3001URL\u8D44\u6E90\uFF08UrlResource\uFF09\u3001InputStream\u8D44\u6E90\uFF08InputStreamResource\uFF09\u3001Byte\u6570\u7EC4\uFF08ByteArrayResource\uFF09\u7B49\u3002</p>`,12),o=[c];function l(i,u){return s(),a("div",null,o)}var d=n(p,[["render",l],["__file","3\u5BB9\u5668\u7684\u57FA\u7840XmlBeanFactory.html.vue"]]);export{d as default};
