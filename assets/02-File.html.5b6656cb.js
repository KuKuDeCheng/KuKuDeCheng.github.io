import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as c,c as o,a as n,b as t,e as s,d as l}from"./app.17aaeba5.js";const i={},u=s("\u8F6C\u81EA\uFF1A"),k={href:"http://blog.csdn.net/zhaoyanjun6/article/details/54581478",target:"_blank",rel:"noopener noreferrer"},r=s("http://blog.csdn.net/zhaoyanjun6/article/details/54581478"),d=n("br",null,null,-1),v=s(" \u672C\u6587\u51FA\u81EA"),m={href:"http://blog.csdn.net/zhaoyanjun6/",target:"_blank",rel:"noopener noreferrer"},b=s("\u3010\u8D75\u5F66\u519B\u7684\u535A\u5BA2\u3011"),g=l(`<p>Java File\u7C7B\u7684\u529F\u80FD\u975E\u5E38\u5F3A\u5927\uFF0C\u5229\u7528java\u57FA\u672C\u4E0A\u53EF\u4EE5\u5BF9\u6587\u4EF6\u8FDB\u884C\u6240\u6709\u64CD\u4F5C\u3002<br> \u9996\u5148\u6765\u770BFile\u7C7B\u7684\u6784\u9020\u51FD\u6570\u7684\u6E90\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * Internal constructor for already-normalized pathname strings.
     */</span>
  <span class="token keyword">private</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> prefixLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> pathname<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefixLength <span class="token operator">=</span> prefixLength<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Internal constructor for already-normalized pathname strings.
     * The parameter order is used to disambiguate this method from the
     * public(File, String) constructor.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> child<span class="token punctuation">,</span> <span class="token class-name">File</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">assert</span> parent<span class="token punctuation">.</span>path <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token operator">!</span>parent<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>path<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefixLength <span class="token operator">=</span> parent<span class="token punctuation">.</span>prefixLength<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Creates a new <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">File</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> instance by converting the given
     * pathname string into an abstract pathname.  If the given string is
     * the empty string, then the result is the empty abstract pathname.
     *
     * <span class="token keyword">@param</span>   <span class="token parameter">pathname</span>  A pathname string
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">NullPointerException</span></span>
     *          If the <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">pathname</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> argument is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> pathname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pathname <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefixLength <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">prefixLength</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


     <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>   <span class="token parameter">parent</span>  The parent pathname string
     * <span class="token keyword">@param</span>   <span class="token parameter">child</span>   The child pathname string
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">NullPointerException</span></span>
     *          If <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">child</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> parent<span class="token punctuation">,</span> <span class="token class-name">String</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>parent<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefixLength <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">prefixLength</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>   <span class="token parameter">parent</span>  The parent abstract pathname
     * <span class="token keyword">@param</span>   <span class="token parameter">child</span>   The child pathname string
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">NullPointerException</span></span>
     *          If <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">child</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">File</span> parent<span class="token punctuation">,</span> <span class="token class-name">String</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>child <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">getDefaultParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                       fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
                                       fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefixLength <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">prefixLength</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span>  <span class="token parameter">uri</span>
     *         An absolute, hierarchical URI with a scheme equal to
     *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token string">&quot;file&quot;</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>, a non-empty path component, and undefined
     *         authority, query, and fragment components
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">NullPointerException</span></span>
     *          If <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">uri</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>
     *
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span>
     *          If the preconditions on the parameter do not hold
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">URI</span> uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// Check our many preconditions</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>uri<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI is not absolute&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">isOpaque</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI is not hierarchical&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> scheme <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>scheme <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>scheme<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI scheme is not \\&quot;file\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI has an authority component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI has a fragment component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uri<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI has a query component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> p <span class="token operator">=</span> uri<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;URI path component is empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Okay, now initialize</span>
        p <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">fromURIPath</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span>separatorChar <span class="token operator">!=</span> <span class="token char">&#39;/&#39;</span><span class="token punctuation">)</span>
            p <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separatorChar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>prefixLength <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">prefixLength</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6E90\u7801\u53EF\u4EE5\u770B\u51FA<code>File</code>\u7C7B\u7684\u6784\u9020\u51FD\u6570\u67096\u4E2A\uFF0C\u7CBE\u7B80\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> pathname<span class="token punctuation">)</span>  <span class="token comment">//\u6587\u4EF6\u7684\u7EDD\u5BF9\u8DEF\u5F84</span>
<span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">URI</span> uri<span class="token punctuation">)</span>  <span class="token comment">//\u6587\u4EF6\u7684URI\u5730\u5740</span>

<span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> parent<span class="token punctuation">,</span> <span class="token class-name">String</span> child<span class="token punctuation">)</span>  <span class="token comment">//\u6307\u5B9A\u7236\u6587\u4EF6\u7EDD\u5BF9\u8DEF\u5F84\u3001\u5B50\u6587\u4EF6\u7EDD\u5BF9\u8DEF\u5F84</span>
<span class="token keyword">public</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">File</span> parent<span class="token punctuation">,</span> <span class="token class-name">String</span> child<span class="token punctuation">)</span>  <span class="token comment">//\u6307\u5B9A\u7236\u6587\u4EF6\u3001\u5B50\u6587\u4EF6\u76F8\u5BF9\u8DEF\u5F84</span>

<span class="token comment">//\u4E0B\u9762\u8FD9\u4E24\u4E2A\u662FFile\u7C7B\u4E2D\u79C1\u6709\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5916\u9762\u4E0D\u80FD\u8C03\u7528</span>
<span class="token keyword">private</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> child<span class="token punctuation">,</span> <span class="token class-name">File</span> parent<span class="token punctuation">)</span>  
<span class="token keyword">private</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token class-name">String</span> pathname<span class="token punctuation">,</span> <span class="token keyword">int</span> prefixLength<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u5C31\u770B\u7684\u6BD4\u8F83\u6E05\u695A\u4E86\uFF0C6\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u53EF\u4EE5\u5206\u4E3A2\u7C7B\u30024\u4E2A\u516C\u5171\u6784\u9020\u51FD\u6570\uFF0C2\u4E2A\u79C1\u6709\u6784\u9020\u51FD\u6570\u3002</p><p><strong>\u6784\u9020\u51FD\u65701\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u7535\u8111d\u76D8\u4E2D\u7684cat.png \u56FE\u7247\u7684\u8DEF\u5F84</span>
<span class="token class-name">String</span> filePath1 <span class="token operator">=</span> <span class="token string">&quot;D:/cat.png&quot;</span> <span class="token punctuation">;</span>
<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath1 <span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6784\u9020\u51FD\u65702\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> parentFilePath <span class="token operator">=</span> <span class="token string">&quot;E:/cat&quot;</span> <span class="token punctuation">;</span>

<span class="token class-name">String</span> childFilePath <span class="token operator">=</span> <span class="token string">&quot;small_cat.txt&quot;</span> <span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFAparentFile\u6587\u4EF6</span>
<span class="token class-name">File</span> parentFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> parentFilePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
parentFile<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token comment">//\u5982\u679CparentFile\u4E0D\u5B58\u5728\uFF0C\u5C31\u4F1A\u62A5\u5F02\u5E38</span>
<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> parentFilePath  <span class="token punctuation">,</span> childFilePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
	file<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6784\u9020\u51FD\u65703\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> parentFilePath <span class="token operator">=</span> <span class="token string">&quot;E:/cat&quot;</span> <span class="token punctuation">;</span>

<span class="token comment">//\u6784\u9020\u7236\u6587\u4EF6</span>
<span class="token class-name">File</span> parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> parentFilePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
parent<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">//\u5982\u679Cparent\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u5C31\u4F1A\u62A5\u5F02\u5E38</span>
<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> parent  <span class="token punctuation">,</span> <span class="token string">&quot;small_cat.txt&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
	file<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u521B\u5EFA\u76EE\u5F55</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span>  file<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u521B\u5EFA\u6210\u529F,\u8FD4\u56DE <code>true</code> , \u521B\u5EFA\u5931\u8D25\uFF0C\u8FD4\u56DE<code>false</code>\u3002\u5982\u679C\u8FD9\u4E2A\u6587\u4EF6\u5939\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE<code>false</code>.<br> \u53EA\u80FD\u521B\u5EFA\u4E00\u7EA7\u76EE\u5F55\uFF0C\u5982\u679C\u7236\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u8FD4\u56DE<code>false</code>.</p><ul><li>\u521B\u5EFA\u591A\u7EA7\u76EE\u5F55</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span>  file<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u521B\u5EFA\u591A\u7EA7\u76EE\u5F55\uFF0C\u521B\u5EFA\u6210\u529F\uFF0C\u8FD4\u56DE<code>true</code>,\u521B\u5EFA\u5931\u8D25\uFF0C\u8FD4\u56DE<code>false</code>\u3002\u5982\u679C\u7236\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u5C31\u521B\u5EFA\uFF0C\u5E76\u4E14\u8FD4\u56DE<code>true.</code></p><ul><li>\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u6587\u4EF6</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u6587\u4EF6\u4E0D\u5B58\u5728\u5C31\u521B\u5EFA\u8BE5\u6587\u4EF6\uFF0C\u521B\u5EFA\u6210\u529F,\u8FD4\u56DE <code>true</code> \uFF1B\u521B\u5EFA\u5931\u8D25\uFF0C\u8FD4\u56DE<code>false</code>\u3002\u5982\u679C\u8FD9\u4E2A\u6587\u4EF6\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5219\u8FD4\u56DE<code>false</code>.</p><ul><li>\u5224\u65AD\u65B9\u6CD5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u6587\u4EF6\u662F\u5426\u5B58\u5728</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u662F\u5426\u662F\u6587\u4EF6</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u662F\u5426\u662F\u76EE\u5F55</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//\u662F\u5426\u9690\u85CF\uFF08windows\u4E0A\u53EF\u4EE5\u8BBE\u7F6E\u67D0\u4E2A\u6587\u4EF6\u662F\u5426\u9690\u85CF\uFF09</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u662F\u5426\u4E3A\u7EDD\u5BF9\u8DEF\u5F84</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u662F\u5426\u53EF\u8BFB</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">canWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u662F\u5426\u53EF\u5199</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">canExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u662F\u5426\u53EF\u6267\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u6587\u4EF6\u7684\u4FE1\u606F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u6587\u4EF6\u7684\u540D\u5B57\uFF0C\u53EA\u662F\u540D\u5B57\uFF0C\u6CA1\u6709\u8DEF\u5F84</span>

<span class="token class-name">String</span> file<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u7236\u76EE\u5F55\u7684\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002\u5982\u679C\u6587\u4EF6\u6709\u7236\u76EE\u5F55\uFF0C\u90A3\u4E48\u8FD4\u56DE\u7236\u76EE\u5F55\u7684\u7EDD\u5BF9\u8DEF\u5F84\uFF0C(\u6BD4\u5982\uFF1A\`E:\\cat\`) , \u5982\u679C\u6587\u4EF6\u672C\u8EAB\u5C31\u5728\u78C1\u76D8\u7684\u6839\u76EE\u5F55\uFF0C\u90A3\u4E48\u8FD4\u56DE\u78C1\u76D8\u7684\u8DEF\u5F84\uFF0C(\u6BD4\u5982:\`E:\\\`)\u3002</span>

<span class="token class-name">File</span> file<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u7236\u6587\u4EF6\uFF0C\u8FD4\u56DE\u503C\u662F\u4E00\u4E2AFile\u5BF9\u8C61\u3002</span>

<span class="token keyword">long</span> time <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">lastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token comment">//\u8FD4\u56DE\u6587\u4EF6\u6700\u540E\u4E00\u6B21\u4FEE\u6539\u7684\u65F6\u95F4</span>
<span class="token class-name">Date</span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">boolean</span> <span class="token function">renameTo</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span> <span class="token comment">//\u6587\u4EF6\u547D\u540D</span>

<span class="token keyword">long</span> file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u8FD4\u56DE\u6587\u4EF6\u7684\u5927\u5C0F\uFF0C\u5355\u4F4D\u5B57\u8282</span>

<span class="token keyword">boolean</span> file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5220\u9664\u6587\u4EF6</span>

<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> file<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u8BE5\u76EE\u5F55\u4E0B\u7684\u6240\u6709\u7684\u6587\u4EF6\u7684\u540D\u5B57\u3002\u5982\u679C\`file\`\u4E3A\u6587\u4EF6\uFF0C\u8FD4\u56DE\u503C\u4E3A\`null\`,\u5728\u4F7F\u7528\u65F6\u8BB0\u5F97\u5224\u7A7A\uFF1B\u4F46\u662F\u5982\u679C\`file\`\u4E3A\u76EE\u5F55\uFF0C\u90A3\u4E48\u8FD4\u56DE\u8FD9\u4E2A\u76EE\u5F55\u4E0B\u6240\u6709\u6587\u4EF6\u7684\u540D\u5B57\uFF0C\u53EA\u662F\u540D\u5B57\uFF0C\u4E0D\u542B\u8DEF\u5F84\uFF1B\u5982\u679C\`file\`\u662F\u4E00\u4E2A\u7A7A\u76EE\u5F55\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u957F\u5EA6\u4E3A0\u7684\u6570\u7EC4\uFF1B\u4ECE\u4E0A\u9762\u7684\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF0C\`list()\` \u65B9\u6CD5\uFF0C\u53EA\u662F\u5BF9\`file\`\u4E3A\u76EE\u5F55\u65F6\u6709\u6548\uFF0C\u5F53\`file\`\u4E3A\u4E00\u4E2A\u6587\u4EF6\u7684\u65F6\u5019\uFF0C\u8BE5\u65B9\u6CD5\u6BEB\u65E0\u610F\u4E49\u3002</span>

<span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u8BE5\u76EE\u5F55\u4E0B\u7684\u6240\u6709\u7684\u6587\u4EF6\u3002\u5982\u679C\`file\`\u4E3A\u6587\u4EF6\uFF0C\u8FD4\u56DE\u503C\u4E3A\`null\`,\u5728\u4F7F\u7528\u65F6\u8BB0\u5F97\u5224\u7A7A\uFF1B\u4F46\u662F\u5982\u679C\`file\`\u4E3A\u76EE\u5F55\uFF0C\u90A3\u4E48\u8FD4\u56DE\u8FD9\u4E2A\u76EE\u5F55\u4E0B\u6240\u6709\u7684\u6587\u4EF6 \uFF1B\u5982\u679C\`file\`\u662F\u4E00\u4E2A\u7A7A\u76EE\u5F55\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u957F\u5EA6\u4E3A0\u7684\u6570\u7EC4\uFF1B\u4ECE\u4E0A\u9762\u7684\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF0C\`listFiles()\` \u65B9\u6CD5\uFF0C\u53EA\u662F\u5BF9\`file\`\u4E3A\u76EE\u5F55\u65F6\u6709\u6548\uFF0C\u5F53\`file\`\u4E3A\u4E00\u4E2A\u6587\u4EF6\u7684\u65F6\u5019\uFF0C\u8BE5\u65B9\u6CD5\u6BEB\u65E0\u610F\u4E49\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u6218\u7ECF\u9A8C1-file-list-file-listfiles" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u6218\u7ECF\u9A8C1-file-list-file-listfiles" aria-hidden="true">#</a> \u5B9E\u6218\u7ECF\u9A8C1\uFF1A file.list() \uFF0C file.listFiles()</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;E:/cat&quot;</span> <span class="token punctuation">;</span>
<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
file<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> names <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> names<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token string">&quot;names: &quot;</span> <span class="token operator">+</span>names<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token string">&quot;files: &quot;</span><span class="token operator">+</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u6218\u7ECF\u9A8C2-\u626B\u63CFf\u76D8\u6240\u6709\u7684\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u6218\u7ECF\u9A8C2-\u626B\u63CFf\u76D8\u6240\u6709\u7684\u6587\u4EF6" aria-hidden="true">#</a> \u5B9E\u6218\u7ECF\u9A8C2\uFF1A\u626B\u63CFF\u76D8\u6240\u6709\u7684\u6587\u4EF6</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A3</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

		<span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;F:/&quot;</span> <span class="token punctuation">;</span>
		<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token function">getFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getFile</span><span class="token punctuation">(</span> <span class="token class-name">File</span> file <span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token class-name">File</span> f <span class="token operator">:</span> files <span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span> f<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token keyword">continue</span> <span class="token punctuation">;</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token function">getFile</span><span class="token punctuation">(</span> f <span class="token punctuation">)</span><span class="token punctuation">;</span>				
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> f<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span> <span class="token operator">+</span> f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6548\u679C\u56FE\uFF1A</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwMTE3MjAwOTM1OTg3?x-oss-process=image/format,png" alt="\u8FD9\u91CC\u5199\u56FE\u7247\u63CF\u8FF0" loading="lazy"></p><p>\u5728\u4E0A\u9762\u7684\u5B9E\u6218\u6F14\u7EC3\u4E2D\u7528\u5230\u4E86\uFF0C<code>file.list()</code> , <code>file.listFiles()</code> \u3002\u8FD9\u662F\u4E24\u4E2A\u65E0\u53C2\u7684\u65B9\u6CD5\uFF0C\u5B9E\u9645\u4E0A\u8FD8\u6709\u4E24\u4E2A\u6709\u53C2\u7684\u65B9\u6CD5\uFF0C\u5206\u522B\u662F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>file<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">FilenameFilter</span> filter<span class="token punctuation">)</span> <span class="token punctuation">;</span>

file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span> <span class="token class-name">FilenameFilter</span> filter<span class="token punctuation">)</span> <span class="token punctuation">;</span>

file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token class-name">FileFilter</span> filter<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filefilter" tabindex="-1"><a class="header-anchor" href="#filefilter" aria-hidden="true">#</a> FileFilter</h2><p>FileFilter\u662Fio\u5305\u91CC\u9762\u7684\u4E00\u4E2A\u63A5\u53E3\uFF0C\u4ECE\u540D\u5B57\u4E0A\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u4E2A\u7C7B\u662F\u6587\u4EF6\u8FC7\u6EE4\u529F\u80FD\u7684\u3002<br> \u9700\u8981\u91CD\u5199<code>accept</code>\u65B9\u6CD5<br> \u6BD4\u5982\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyFileFilter</span> <span class="token keyword">implements</span> <span class="token class-name">FileFilter</span> <span class="token punctuation">{</span>

<span class="token class-name">MyFileFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>			
<span class="token punctuation">}</span>

<span class="token comment">//pathname\uFF1A\u6587\u4EF6\u7684\u7EDD\u5BF9\u8DEF\u5F84+ \u6587\u4EF6\u540D , \u6BD4\u5982\uFF1AF:\\\u5B89\u6765\u5B81 - \u96BE\u5F97.mp3  \uFF0C \u6216\u8005\uFF1A F:\\\u6587\u4EF6\u59391</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">File</span> pathname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u6218\uFF1A\u83B7\u53D6\u6307\u5B9A\u76EE\u5F55\u7684\u6240\u6709\u6587\u4EF6\u5939</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A3</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

		<span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;F:/&quot;</span> <span class="token punctuation">;</span>
		<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token function">getFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u83B7\u53D6\u6307\u5B9A\u76EE\u5F55\u7684\u6240\u6709\u6587\u4EF6\u5939
	 * <span class="token keyword">@param</span> <span class="token parameter">file</span>
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getFile</span><span class="token punctuation">(</span> <span class="token class-name">File</span> file <span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">MyFileFilter</span> myFileFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFileFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

		<span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span> myFileFilter <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token class-name">File</span> f <span class="token operator">:</span> files <span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span> f<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token keyword">continue</span> <span class="token punctuation">;</span>

			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> f<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyFileFilter</span> <span class="token keyword">implements</span> <span class="token class-name">FileFilter</span> <span class="token punctuation">{</span>

		<span class="token class-name">MyFileFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

		<span class="token punctuation">}</span>

		<span class="token comment">//pathname\uFF1A\u6587\u4EF6\u7684\u7EDD\u5BF9\u8DEF\u5F84+ \u6587\u4EF6\u540D , \u6BD4\u5982\uFF1AF:\\\u5B89\u6765\u5B81 - \u96BE\u5F97.mp3  \uFF0C \u6216\u8005\uFF1A F:\\\u6587\u4EF6\u59391</span>
		<span class="token annotation punctuation">@Override</span>
		<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">File</span> pathname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span> pathname<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filenamefilter" tabindex="-1"><a class="header-anchor" href="#filenamefilter" aria-hidden="true">#</a> FilenameFilter</h2><p>FileFilter\u662Fio\u5305\u91CC\u9762\u7684\u4E00\u4E2A\u63A5\u53E3\uFF0C\u4ECE\u540D\u5B57\u4E0A\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u4E2A\u7C7B\u662F\u6587\u4EF6\u540D\u5B57\u8FC7\u6EE4\u529F\u80FD\u7684\u3002<br> \u9700\u8981\u91CD\u5199\u91CC\u9762\u7684<code>accept</code>\u65B9\u6CD5\u3002<br> \u6BD4\u5982\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FilenameFilter</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFilenameFilter</span> <span class="token keyword">implements</span> <span class="token class-name">FilenameFilter</span> <span class="token punctuation">{</span>
	<span class="token comment">//type\u4E3A\u9700\u8981\u8FC7\u6EE4\u7684\u6761\u4EF6\uFF0C\u6BD4\u5982\u5982\u679Ctype=&quot;.jpg&quot;\uFF0C\u5219\u53EA\u80FD\u8FD4\u56DE\u540E\u7F00\u4E3Ajpg\u7684\u6587\u4EF6</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span>           
	<span class="token class-name">MyFilenameFilter</span><span class="token punctuation">(</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type <span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">File</span> dir<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//dir\u8868\u793A\u6587\u4EF6\u7684\u5F53\u524D\u76EE\u5F55\uFF0Cname\u8868\u793A\u6587\u4EF6\u540D\uFF1B</span>
		<span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span> type <span class="token punctuation">)</span> <span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u6218\uFF1A\u626B\u63CF\u51FA\u6307\u5B9A\u8DEF\u5F84\u7684\u6240\u6709\u56FE\u7247</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FilenameFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A3</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

		<span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;F:/&quot;</span> <span class="token punctuation">;</span>
		<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token function">getFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u626B\u63CF\u51FA\u6307\u5B9A\u8DEF\u5F84\u7684\u6240\u6709\u56FE\u7247
	 * <span class="token keyword">@param</span> <span class="token parameter">file</span>
	 */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getFile</span><span class="token punctuation">(</span> <span class="token class-name">File</span> file <span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">MyFilenameFilter</span> myFileFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFilenameFilter</span><span class="token punctuation">(</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>

		<span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span> myFileFilter <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token class-name">File</span> f <span class="token operator">:</span> files <span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span> f<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token keyword">continue</span> <span class="token punctuation">;</span>

			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> f<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyFilenameFilter</span> <span class="token keyword">implements</span> <span class="token class-name">FilenameFilter</span> <span class="token punctuation">{</span>
		<span class="token comment">//type\u4E3A\u9700\u8981\u8FC7\u6EE4\u7684\u6761\u4EF6\uFF0C\u6BD4\u5982\u5982\u679Ctype=&quot;.jpg&quot;\uFF0C\u5219\u53EA\u80FD\u8FD4\u56DE\u540E\u7F00\u4E3Ajpg\u7684\u6587\u4EF6</span>
		<span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span>           
		<span class="token class-name">MyFilenameFilter</span><span class="token punctuation">(</span> <span class="token class-name">String</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type <span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token annotation punctuation">@Override</span>
		<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">File</span> dir<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">//dir\u8868\u793A\u6587\u4EF6\u7684\u5F53\u524D\u76EE\u5F55\uFF0Cname\u8868\u793A\u6587\u4EF6\u540D\uFF1B</span>
			<span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span> type <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwMTE3MjAzMjI0MzIw?x-oss-process=image/format,png" alt="\u8FD9\u91CC\u5199\u56FE\u7247\u63CF\u8FF0" loading="lazy"></p>`,43);function f(y,w){const a=e("ExternalLinkIcon");return c(),o("div",null,[n("blockquote",null,[n("p",null,[u,n("a",k,[r,t(a)]),d,v,n("a",m,[b,t(a)])])]),g])}var j=p(i,[["render",f],["__file","02-File.html.vue"]]);export{j as default};
