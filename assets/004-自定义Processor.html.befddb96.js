import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{d as s}from"./app.5c332ac6.js";var a="/assets/6.671798b5.png",t="/assets/7.d245c981.png",p="/assets/8.bbcfc58f.png",o="/assets/9.6082b224.png",e="/assets/10.791f61d5.png",c="/assets/11.ec70088d.png",l="/assets/1.148bf1f5.png",i="/assets/12.e82ea120.png";const u={},r=s('<p>NIFI\u672C\u8EAB\u63D0\u4F9B\u4E86\u51E0\u767E\u4E2AProcessor\u7ED9\u6211\u4EEC\u4F7F\u7528\uFF0C\u4F46\u6709\u7684\u65F6\u5019\u6211\u4EEC\u9700\u8981\u81EA\u5B9A\u4E49\u4E00\u4E9B\u7EC4\u4EF6\u6765\u4F7F\u7528(\u8FD9\u79CD\u60C5\u51B5\u4E2A\u4EBA\u89C9\u5F97\u767E\u5206\u4E4B\u516B\u5341\u662F\u56E0\u4E3A\u60F3\u5B9E\u73B0\u4E00\u4E2A\u529F\u80FD\uFF0C\u800C\u4E14\u8FD9\u4E2A\u529F\u80FD\u9700\u6C42\u539F\u6846\u67B6\u5C31\u80FDcover\u4F4F\u7684\uFF0C\u53EA\u662F\u4E0D\u77E5\u9053\u5728\u54EA\u6216\u8005\u77E5\u9053\u5728\u54EA\u6216\u8005\u4E0D\u4F1A\u7528\uFF0C\u5E72\u8106\u5C31\u81EA\u5DF1\u5199\u4E86-&gt;\u8FD8\u80FD\u51FA\u6D3B-&gt;\u8001\u677F\u4F60\u770B\uFF01\u73B0\u5728\u7528\u7684\u90FD\u662F\u6211\u81EA\u5DF1\u5199\u7684\u7EC4\u4EF6-&gt;\u8001\u677F\uFF1A\u5389\u5BB3\uFF01\u52A0\u85AA\uFF01)</p><p>\u5E9F\u8BDD\u4E0D\u591A\u8BF4\uFF0C\u76F4\u63A5\u4E0A\u5E72\u8D27</p><h2 id="\u5728\u54EA\u5199" tabindex="-1"><a class="header-anchor" href="#\u5728\u54EA\u5199" aria-hidden="true">#</a> \u5728\u54EA\u5199\uFF1F</h2><p>\u73B0\u5728\u6211\u4EEC\u8981\u81EA\u5B9A\u4E49\u4E00\u4E2AProcessor\uFF0C\u5047\u8BBE\u5B83\u53EBMyProcessor.java\uFF0C\u90A3\u4E48\u8FD9\u4E2AJava\u6587\u4EF6\u5199\u5728\u54EA\u91CC\u5462\uFF1F</p><p>\u5982\u679C\u4F60\u8981\u81EA\u5B9A\u4E49\u4E00\u4E2AProcessor\uFF0C\u53EF\u4EE5\u5199\u5728\u4EE5\u4E0B\u8FD9\u4E24\u79CD\u5730\u65B9(\u65B9\u5F0F)</p><ol><li>\u5199\u5728<code>nifi-standard-processors</code>\u8FD9\u4E2A\u9879\u76EE\u91CC\uFF0C<code>nifi-standard-processors</code>\u8FD9\u4E2A\u9879\u76EE\u770B\u540D\u5B57\u5C31\u77E5\u9053\uFF0C\u5B83\u5B9A\u4E49\u4E86\u4E00\u7EC4NIFI\u6807\u51C6Processor\u7EC4\u4EF6\u3002\u5982\u4E0B\u56FE\u6240\u793A\uFF0C\u5199\u5728\u8FD9\u4E2A\u4F4D\u7F6E\u5373\u53EF\u3002</li></ol><p><img src="'+a+'" alt="" loading="lazy"></p><ol start="2"><li><p>\u81EA\u5B9A\u4E49\u4E00\u4E2A\u72EC\u7ACB\u7684\u5B50Moudle\uFF0C\u5B50Moudle\u91CC\u9762\u6709\u4E24\u4E2A\u5B50\u9879\u76EE:<code>processors</code>\u548C<code>processor-nar</code>\u5B50\u9879\u76EE\u3002\u4EE5NIFI\u6E90\u7801\u7684amqp\u4E3A\u4F8B <img src="'+t+'" alt="" loading="lazy"></p><p><code>processors</code>\u91CC\u9762\u5199MyProcessor.jav\uFF0C\u6253jar\u5305\uFF0C <img src="'+p+'" alt="" loading="lazy"></p><p>\u628A<code>processors</code>\u7684jar\u5305\u4F9D\u8D56\u653E\u5230<code>processor-nar</code>\u9879\u76EE\u91CC\uFF0C\u6253nar\u5305\uFF0C <img src="'+o+'" alt="" loading="lazy"></p><p>\u6700\u540E\u628A\u8FD9\u4E2Anar\u5305\u4F9D\u8D56\u653E\u5230<code>nifi-assembly</code>\u7684pom.xml\u91CC\u5373\u53EF <img src="'+e+'" alt="" loading="lazy"></p><p>\u5F53\u7136\uFF0C\u4E0A\u9762\u8BF4\u7684\u662F\u6700\u7B80\u5355\u7684\uFF0C\u4E0D\u6D89\u53CA\u5230nar\u5305\u4F9D\u8D56\u7684\u60C5\u51B5\u3002\u5982\u679C\u6D89\u53CA\u5230nar\u5305\u4F9D\u8D56(\u4EC0\u4E48\u662Fnar\u5305\u95F4\u7684\u4F9D\u8D56\uFF1F\u7B80\u5355\u6765\u8BF4\uFF0C\u4F60\u8981\u4F7F\u7528\u53E6\u4E00\u4E2Anar\u5305\u7684Java\u7C7B\uFF0C\u90A3\u4E48\u4F60\u5C31\u5F97\u786E\u4FDD\u4F60\u7684\u8FD9\u4E2Anar\u5305\u662F\u4F9D\u8D56\u90A3\u4E2A\u4F60\u9700\u8981\u7684Java\u7C7B\u6240\u5728\u7684nar\uFF0Cnar\u7684\u4F9D\u8D56\u662F\u4F20\u9012\u7684\uFF0C\u6BCF\u4E2Anar\u53EA\u80FD\u4F9D\u8D56\u4E00\u4E2A\u5176\u4ED6\u7684nar\u5305\u3002\u5982\u679C\u60F3\u7EE7\u7EED\u4E86\u89E3\u4E3A\u4EC0\u4E48\uFF0C\u770B\u6587\u6863<code>NIFI\u6E90\u7801\u7CFB\u5217</code>\u76EE\u5F55\u4E0B<code>NIFI nar\u5305\u52A0\u8F7D\u673A\u5236\u6E90\u7801\u89E3\u8BFB</code>)\uFF0C\u6BD4\u5982\u8BF4<code>nifi-amqp-nar</code>\u5C31\u4F9D\u8D56\u4E86<code>nifi-standard-services-api-nar</code><img src="'+c+'" alt="" loading="lazy"></p></li></ol><p>\u5176\u5B9ENIFI\u6E90\u7801\u91CC\u63D0\u4F9B\u4E86Processor\u7684maven archetype\uFF0C\u53EA\u8981create Moudle from archetype\uFF0C\u628A\u4E00\u4E9B\u53D8\u91CF\u586B\u4E0A\u5C31OK\u4E86\uFF0C\u8BE6\u7EC6\u7684\u770B<code>nifi-maven-archetypes</code>\u8FD9\u4E2AMoudle\u3002</p><p>\u6B63\u5E38\u6765\u8BB2\uFF0C\u5165\u95E8\u7EA7\u522B\u7684\u81EA\u5B9A\u4E49Processor\u91C7\u7528\u7B2C\u4E00\u79CD\u65B9\u5F0F\u5C31\u53EF\u4EE5\u4E86\uFF0C\u6BD4\u8F83\u7B80\u5355\u3002\u9AD8\u7EA7\u70B9\u7684\uFF0C\u8FD8\u662F\u5EFA\u8BAE\u4F7F\u7528\u81EA\u5B9A\u4E49Moudle\u7684\u65B9\u5F0F\uFF0C\u8FD9\u6837\u5BF9\u6E90\u7801\u7684\u4FB5\u5165\u6027\u8F83\u4F4E\uFF0C\u5229\u4E8E\u540E\u671F\u7684\u5347\u7EA7\u3002\u90A3\u4E48\u6709\u6CA1\u6709\u66F4\u9AD8\u7EA7\u7684\u65B9\u5F0F\u53BB\u505A\u81EA\u5B9A\u4E49\uFF0C\u6709\u7684\u3002\u5982\u679C\u4F60\u662F\u8981\u81EA\u5B9A\u4E49\u633A\u591A\u7684\u4E1C\u897F(\u4E0D\u4EC5\u4EC5Processor)\uFF0C\u53EF\u4EE5\u53C2\u8003\u6211\u5728github\u5F00\u6E90\u7684NIFI\u81EA\u5B9A\u4E49\u5F00\u53D1\u89C4\u8303\uFF0C\u91CC\u9762\u4EE5\u6700\u5C0F\u4FB5\u5165\u4EE3\u7801\u7684\u65B9\u5F0F\uFF0C\u5C06\u81EA\u5B9A\u4E49\u4EE3\u7801\u4E0E\u6E90\u7801\u5206\u79BB\uFF0C\u9879\u76EE\u7ED3\u6784\u6E05\u6670\u660E\u4E86\uFF0C\u6613\u5347\u7EA7\u3002\u5730\u5740\uFF1A(https://github.com/zhangchengk/custom-nar-bundles)[https://github.com/zhangchengk/custom-nar-bundles]</p><h2 id="\u600E\u4E48\u5199" tabindex="-1"><a class="header-anchor" href="#\u600E\u4E48\u5199" aria-hidden="true">#</a> \u600E\u4E48\u5199\uFF1F</h2><p>\u6211\u4EEC\u81EA\u5B9A\u4E49Processor\u65F6\u6700\u5E38\u7528\u7684\u662F\u7EE7\u627FAbstractProcessor\uFF0C\u9996\u5148\u770B\u4E00\u4E0BAbstractProcessor\u7684\u7EE7\u627F\u5173\u7CFB: <img src="'+l+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractSessionFactoryProcessor</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u63A7\u5236\u5668\u662F\u5148\u8C03\u7528\u7684AbstractProcessor\u5B9E\u73B0\u7684\u8FD9\u4E2AonTrigger\u65B9\u6CD5\uFF0C\u7136\u540E\u518D\u8C03\u7528\u7528\u6237\u81EA\u5B9A\u4E49\u5B9E\u73B0\u7684(\u4E0B\u9762\u7684)onTrigger</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ProcessSessionFactory</span> sessionFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ProcessSession</span> session <span class="token operator">=</span> sessionFactory<span class="token punctuation">.</span><span class="token function">createSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">onTrigger</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
            session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            session<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> t<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u8FD9\u4E2AonTrigger\u65B9\u6CD5\u5C31\u662F\u6211\u4EEC\u6700\u5E38\u89C1\u7684\u5728\u81EA\u5B9A\u4E49Processor\u91CC\u9700\u8981\u53BB\u5B9E\u73B0\u529F\u80FD\u903B\u8F91\u7684\u4E86</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ProcessSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u989D\u5916\u591A\u63D0\u4E00\u70B9\uFF1ANIFI\u7684\u4F1A\u8BDD(session)\u662F\u53EF\u4EE5\u652F\u6301\u4E8B\u52A1\u7684\uFF0CAbstractProcessor\u7684\u7B2C\u4E00\u4E2AonTrigger\u65B9\u6CD5\u4E2D\u6211\u4EEC\u5C31\u53EF\u4EE5\u770B\u5230\uFF0C\u5982\u679C\u8C03\u5EA6\u6267\u884C\u8FC7\u7A0B\u4E2D\u629B\u51FA\u5F02\u5E38\uFF0C\u90A3\u4E48\u5C31\u56DE\u6EDA\u4F1A\u8BDD\uFF0C\u5426\u5219\u5C31\u63D0\u4EA4\u4F1A\u8BDD\u3002\u5BF9\u4E8E\u652F\u6301\u4E8B\u52A1\u7684\u7EC4\u4EF6\u90FD\u6709\u54EA\u4E9B\u610F\u4E49\uFF0C\u5927\u5BB6\u5728\u6DF1\u5165NIFI\u7684\u4F7F\u7528\u548C\u9605\u8BFB\u6E90\u7801\u7684\u65F6\u5019\u6162\u6162\u4F53\u4F1A(\u6211\u4E5F\u5728\u6162\u6162\u4F53\u4F1A)\u3002</p><p>\u90A3\u4E48\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5728\u8FD9\u4E2AMyProcessor.java\u7C7B\u4E2D\u76F4\u63A5\u7EE7\u627FAbstractProcessor\u5C31\u53EF\u4EE5\u4E86\u3002\u4EE5\u4E0B\u4EE5\u6211\u4E4B\u524D\u5199\u7684\u4E00\u4E2A\u7EC4\u4EF6\u4E3A\u4F8B(\u88AB\u8981\u6C42\u5199\u7684\uFF0C\u7528JOLT\u7EC4\u4EF6\u5B8C\u5168hold\u4F4F\uFF0C\u53CD\u6B63\u6211\u89C9\u5F97\u8FD9\u4E48\u5199\u81EA\u5B9A\u4E49\u7EC4\u4EF6\u6CA1\u5565\u610F\u601D\uFF0C\u611F\u89C9\u5982\u679C\u7ED9\u793E\u533A\u63D0PR\u90FD\u4E0D\u5E26\u88AB\u642D\u7406\u7684)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u7ED9\u7B80\u5355\u7684\u4E8C\u7EA7\u7ED3\u6784\u7684json\u6570\u636E\u6DFB\u52A0\u5E38\u91CF\u503C
 *
 * <span class="token keyword">@author</span> \u9177\u9177\u7684\u8BDA
 * <span class="token keyword">@date</span> 2019-07-03 10:07
 */</span>
<span class="token annotation punctuation">@EventDriven</span>
<span class="token annotation punctuation">@SideEffectFree</span>
<span class="token annotation punctuation">@SupportsBatching</span>
<span class="token annotation punctuation">@InputRequirement</span><span class="token punctuation">(</span><span class="token class-name">Requirement</span><span class="token punctuation">.</span>INPUT_REQUIRED<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Tags</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;JSON&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Transform&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@CapabilityDescription</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u5165\u4E3Ajson\u6570\u7EC4\uFF0C\u4E3A\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u589E\u52A0\u5E38\u91CF&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonAddConstant</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractJsonCleaningProcessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">PropertyDescriptor</span> CONSTANT_KEY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PropertyDescriptor<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E38\u91CF\u5B57\u6BB5\u540D&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;\u589E\u91CF\u5E38\u91CF\u7684\u5B57\u6BB5\u540D\u79F0&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">expressionLanguageSupported</span><span class="token punctuation">(</span><span class="token class-name">ExpressionLanguageScope</span><span class="token punctuation">.</span>FLOWFILE_ATTRIBUTES<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">defaultValue</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addValidator</span><span class="token punctuation">(</span><span class="token class-name">StandardValidators</span><span class="token punctuation">.</span>NON_EMPTY_VALIDATOR<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">PropertyDescriptor</span> CONSTANT_VALUE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PropertyDescriptor<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E38\u91CF\u503C&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;\u589E\u91CF\u7684\u5E38\u91CF\u503C&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">expressionLanguageSupported</span><span class="token punctuation">(</span><span class="token class-name">ExpressionLanguageScope</span><span class="token punctuation">.</span>FLOWFILE_ATTRIBUTES<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">defaultValue</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addValidator</span><span class="token punctuation">(</span><span class="token class-name">StandardValidators</span><span class="token punctuation">.</span>NON_EMPTY_VALIDATOR<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessorInitializationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Relationship</span><span class="token punctuation">&gt;</span></span> relationships <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        relationships<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>REL_SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>relationships <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableSet</span><span class="token punctuation">(</span>relationships<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PropertyDescriptor</span><span class="token punctuation">&gt;</span></span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        properties<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>CONSTANT_KEY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>CONSTANT_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableList</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token class-name">ProcessSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
        <span class="token class-name">FlowFile</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> constantKey <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>CONSTANT_KEY<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">evaluateAttributeExpressions</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> constantValue <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>CONSTANT_VALUE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">evaluateAttributeExpressions</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ArrayNode</span> arrayNode <span class="token operator">=</span> <span class="token function">validateAndEstablishJsonArray</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> flowFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">JsonNode</span> jsonNode <span class="token operator">:</span> arrayNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ObjectNode</span><span class="token punctuation">)</span> jsonNode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>constantKey<span class="token punctuation">,</span> constantValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arrayNode<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// REL_SUCCESS</span>
            session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> out <span class="token operator">-&gt;</span> out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>arrayNode<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> REL_SUCCESS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> \u9177\u9177\u7684\u8BDA
 * <span class="token keyword">@date</span> 2019-06-20 13:59
 */</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractJsonCleaningProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Relationship</span><span class="token punctuation">&gt;</span></span> relationships<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PropertyDescriptor</span><span class="token punctuation">&gt;</span></span> properties<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Relationship</span> REL_SUCCESS <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Relationship<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;\u6E05\u6D17\u540E\u6570\u636E\u8DEF\u7531\u5230\u6B64\u5173\u7CFB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Relationship</span> REL_FAILURE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Relationship<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;failure&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;\u6E05\u6D17\u5931\u8D25\u7684\u6570\u636E\u8DEF\u7531\u5230\u6B64\u5173\u7CFB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * flowfile\u8F6Cjson node \u5E76\u9A8C\u8BC1
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">ArrayNode</span> <span class="token function">validateAndEstablishJsonArray</span><span class="token punctuation">(</span><span class="token class-name">ProcessSession</span> session<span class="token punctuation">,</span> <span class="token class-name">FlowFile</span> flowFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JsonNode</span><span class="token punctuation">&gt;</span></span> rootNodeRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            session<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> in <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">InputStream</span> bufferedIn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    rootNodeRef<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>mapper<span class="token punctuation">.</span><span class="token function">readTree</span><span class="token punctuation">(</span>bufferedIn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessException</span> pe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to parse {} as JSON due to {}; routing to failure&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>flowFile<span class="token punctuation">,</span> pe<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> pe<span class="token punctuation">)</span><span class="token punctuation">;</span>
            session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">final</span> <span class="token class-name">JsonNode</span> rootNode <span class="token operator">=</span> rootNodeRef<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">ArrayNode</span> dataJsonArray<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootNode<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dataJsonArray <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ArrayNode</span><span class="token punctuation">)</span> rootNode<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">JsonNodeFactory</span> nodeFactory <span class="token operator">=</span> <span class="token class-name">JsonNodeFactory</span><span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
            dataJsonArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayNode</span><span class="token punctuation">(</span>nodeFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            dataJsonArray<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rootNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> dataJsonArray<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token class-name">ProcessSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Relationship</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRelationships</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> relationships<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PropertyDescriptor</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSupportedPropertyDescriptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> properties<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5355\u8BF4\u4E00\u4E0B\uFF1A</p><ol><li>\u4E00\u4E2AProcessor\u7684\u5C5E\u6027\u5C31\u662F\u5BF9\u4E8E\u6211\u4EEC\u5B9A\u4E49\u7684<code>PropertyDescriptor</code>\uFF0C\u6BD4\u5982\u4E0A\u9762\u8FD9\u4E2A\u7EC4\u4EF6\u81EA\u5B9A\u4E49\u7684<code>\u5E38\u91CF\u5B57\u6BB5\u540D</code>\u548C<code>\u5E38\u91CF\u503C</code>\uFF0C\u7136\u540E\u5728<code>init</code>\u65B9\u6CD5\u91CC\u628A\u4ED6\u4EEC\u653E\u5230<code>List&lt;PropertyDescriptor&gt;</code>\uFF0C\u7136\u540E\u5728override\u7684<code>getSupportedPropertyDescriptors</code>\u65B9\u6CD5\u4E2D\u8FD4\u56DE\u8FD9\u4E2Alist\u5C31\u53EF\u4EE5\u4E86(\u6BD4\u5982<code>AbstractJsonCleaningProcessor</code>)\u3002</li><li>\u4E00\u4E2AProcessor\u7684\u8DEF\u7531(success\u3001failure\u7B49\u7B49)\u5C31\u5BF9\u5E94\u6211\u4EEC\u5B9A\u4E49\u7684<code>Relationship</code>\uFF0C\u6BD4\u5982\u4E0A\u9762\u6211\u4EEC\u5B9A\u4E49\u4E86success\u3001failure\uFF0C\u540C\u6837\u7684\uFF0C\u5728<code>init</code>\u65B9\u6CD5\u91CC\u628A\u4ED6\u4EEC\u653E\u5230<code>Set&lt;Relationship&gt;</code>\uFF0C\u7136\u540E\u5728override\u7684<code>getRelationships</code>\u65B9\u6CD5\u4E2D\u8FD4\u56DE\u8FD9\u4E2Aset\u5C31\u53EF\u4EE5\u4E86\u3002</li><li>\u4E00\u4E2AProcessor\u7684\u8C03\u5EA6\u65B9\u6CD5\u5BF9\u5E94\u7684\u5C31\u662FonTrigger\uFF0C\u5728\u8FD9\u91CC\u5B9E\u73B0\u5BF9\u6D41\u6587\u4EF6\u6570\u636E\u7684\u5904\u7406\u3002\u5E38\u89C1\u7684\u4E24\u4E2A\u53C2\u6570ProcessContext\u53EF\u4EE5\u62FF\u5230\u5F53\u524DProcessor\u7684\u5C5E\u6027\u914D\u7F6E\uFF0CProcessSession\u7528\u6765\u8BFB\u5199\u6D41\u6587\u4EF6\u5185\u5BB9\u3001\u6D41\u6587\u4EF6\u5C5E\u6027\u3002</li><li>\u5BF9\u4E8E<code>init</code> <code>onTrigger</code> <code>onScheduled</code>\u7B49\u7B49\u8FD9\u4E9B\u65B9\u6CD5\u60F3\u8981\u8FDB\u4E00\u6B65\u4E86\u89E3\u548C\u4F7F\u7528\u7684\uFF0C\u770B\u6587\u6863<code>NIFI\u6E90\u7801\u7CFB\u5217</code>\u76EE\u5F55\u4E0B<code>Processor\u7EC4\u4EF6\u7C7B\u7684\u4E00\u4E9B\u65B9\u6CD5</code> <code>nifi \u6CE8\u89E3</code>\u3002</li></ol><h2 id="\u600E\u4E48\u7528" tabindex="-1"><a class="header-anchor" href="#\u600E\u4E48\u7528" aria-hidden="true">#</a> \u600E\u4E48\u7528\uFF1F</h2><p>\u73B0\u5728\u6211\u4EEC\u7684\u81EA\u5B9A\u4E49Processor\u5DF2\u7ECF\u5199\u5B8C\u4E86\uFF0C\u600E\u4E48\u53D1\u5E03\u5230NIFI\u4E0A\u5462\u3002\u6BCF\u4E00\u4E2AProcessor\u7684Moudle\uFF0C\u5728resource\u4E0B\u90FD\u5B9A\u4E49\u4E86\u4E00\u4E2A<code>org.apache.nifi.processor.Processor</code>\u7684\u6587\u4EF6\uFF0C\u628A\u4F60\u81EA\u5B9A\u4E49Processor\u7684\u5168\u7C7B\u540D\u5199\u4E0A\u53BB\u5C31\u53EF\u4EE5\u7684\u3002\u5982\u4E0B\u56FE\uFF1A</p><p><img src="`+i+'" alt="" loading="lazy"></p><p>\u7136\u540E\u56DE\u987E\u6211\u4EEC\u524D\u9762\u7684<code>\u5728\u54EA\u5199\uFF1F</code>\uFF0C\u628A<code>custom-standard-processors</code>\u5BF9\u5E94\u7684jar\u5305\u4F9D\u8D56\u53D1\u5E03\u5230<code>custom-standard-nar</code>,\u518D\u628Anar\u5305\u4F9D\u8D56\u53D1\u5E03\u5230<code>nifi-assembly</code>\u91CC(\u6216\u8005\u4F60\u53EA\u662F\u60F3\u53D1\u5E03\u5230\u7EBF\u4E0A\u73AF\u5883\uFF0C\u90A3\u76F4\u63A5\u628A\u6253\u51FA\u7684nar\u5305\u4ECD\u5230\u4F60\u8FD0\u884C\u7684NIFI\u73AF\u5883\u7684lib\u76EE\u5F55\u91CD\u542FNIFI\uFF0C\u6216\u8005\u628Anar\u5305\u6254\u5230extensions\u76EE\u5F55\u4E0Bnifi\u4F1A\u81EA\u52A8\u52A0\u8F7D-&gt;\u5F53\u7136\u5982\u679C\u662F\u5220\u9664\u66FF\u6362\u8FD8\u662F\u9700\u8981\u91CD\u542F\u7684)\u3002</p>',23);function k(d,v){return r}var y=n(u,[["render",k],["__file","004-\u81EA\u5B9A\u4E49Processor.html.vue"]]);export{y as default};
