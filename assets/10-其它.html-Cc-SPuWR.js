import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as e,a as n}from"./app-CtKwaxkk.js";const a={},s=n(`<ol><li>【强制】在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>不要在方法体内定义：<code>Pattern pattern = Pattern.compile(“规则”);</code></p></div><ol start="2"><li>【强制】避免用<code>Apache Beanutils</code>进行属性的 copy。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p><code>Apache BeanUtils </code>性能较差，可以使用其他方案比如<code> Spring BeanUtils</code>,<code> Cglib BeanCopier</code>，注意均是浅拷贝。 3. 【强制】 velocity 调用 POJO 类的属性时，直接使用属性名取值即可，模板引擎会自动按规范调用 POJO 的 getXxx()，如果是 boolean 基本数据类型变量（boolean 命名不需要加 is 前缀），会自动调用 isXxx()方法。</p><div class="hint-container warning"><p class="hint-container-title">说明</p><p>注意如果是 Boolean 包装类对象，优先调用 getXxx()的方法。</p></div></div><ol start="4"><li>【强制】后台输送给页面的变量必须加<code>$!{var}</code>——中间的感叹号。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>如果 var 等于 null 或者不存在，那么<code>\${var}</code>会直接显示在页面上。</p></div><ol start="5"><li><p>【强制】 注意Math.random()这个方法返回是double类型， 注意取值的范围 <code>0 ≤x&lt; 1</code>（能够取到零值，注意除零异常），如果想获取整数类型的随机数，不要将 x 放大 10 的若干倍然后取整，直接使用 Random 对象的 nextInt 或者 nextLong 方法。</p></li><li><p>【推荐】不要在视图模板中加入任何复杂的逻辑。</p></li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>根据 MVC 理论，视图的职责是展示，不要抢模型和控制器的活。</p></div><ol start="7"><li>【推荐】任何数据结构的构造或初始化，都应指定大小，避免数据结构无限增长吃光内存。</li><li>【推荐】及时清理不再使用的代码段或配置信息。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>对于垃圾代码或过时配置，坚决清理干净，避免程序过度臃肿，代码冗余。</p></div><div class="hint-container tip"><p class="hint-container-title">正例</p><p>对于暂时被注释掉，后续可能恢复使用的代码片断，在注释代码上方，统一规定使用三个斜杠(<code>///</code>)来说明注释掉代码的理由。如：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> hello</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/// 业务方通知活动暂停</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// Business business = new Business();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// business.active();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;it&#39;s finished&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,11),l=[s];function o(p,c){return e(),t("div",null,l)}const d=i(a,[["render",o],["__file","10-其它.html.vue"]]),k=JSON.parse('{"path":"/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/10-%E5%85%B6%E5%AE%83.html","title":"其它","lang":"zh-CN","frontmatter":{"title":"其它","date":"2021-02-14T00:00:00.000Z","category":"阿里Java开发手册","description":"【强制】在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。 说明 不要在方法体内定义：Pattern pattern = Pattern.compile(“规则”); 【强制】避免用Apache Beanutils进行属性的 copy。 说明 Apache BeanUtils 性能较差，可以使用其他方案比如 Spring BeanUti...","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/10-%E5%85%B6%E5%AE%83.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"其它"}],["meta",{"property":"og:description","content":"【强制】在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。 说明 不要在方法体内定义：Pattern pattern = Pattern.compile(“规则”); 【强制】避免用Apache Beanutils进行属性的 copy。 说明 Apache BeanUtils 性能较差，可以使用其他方案比如 Spring BeanUti..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T11:40:02.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:published_time","content":"2021-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T11:40:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"其它\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T11:40:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[],"git":{"createdTime":1719488402000,"updatedTime":1719488402000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":1}]},"readingTime":{"minutes":1.81,"words":543},"filePathRelative":"阿里Java开发手册/10-其它.md","localizedDate":"2021年2月14日","excerpt":"<ol>\\n<li>【强制】在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。</li>\\n</ol>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">说明</p>\\n<p>不要在方法体内定义：<code>Pattern pattern = Pattern.compile(“规则”);</code></p>\\n</div>\\n<ol start=\\"2\\">\\n<li>【强制】避免用<code>Apache Beanutils</code>进行属性的 copy。</li>\\n</ol>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">说明</p>\\n<p><code>Apache BeanUtils </code>性能较差，可以使用其他方案比如<code> Spring BeanUtils</code>,<code> Cglib BeanCopier</code>，注意均是浅拷贝。\\n3. 【强制】 velocity 调用 POJO 类的属性时，直接使用属性名取值即可，模板引擎会自动按规范调用 POJO 的 getXxx()，如果是 boolean 基本数据类型变量（boolean 命名不需要加 is 前缀），会自动调用 isXxx()方法。</p>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">说明</p>\\n<p>注意如果是 Boolean 包装类对象，优先调用 getXxx()的方法。</p>\\n</div>\\n</div>","autoDesc":true}');export{d as comp,k as data};
