import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.cd174add.js";var t="/assets/1.affb4901.png",e="/assets/2.6afd7fab.png",o="/assets/3.76294fa8.png",c="/assets/4.522660e5.png",l="/assets/5.13e7451c.png",u="/assets/6.09838cb6.png",i="/assets/7.5a90f8ed.png",k="/assets/8.b8eb57d5.png",r="/assets/9.979bcda6.png",d="/assets/10.2f7a1434.png",v="/assets/16.d2e565eb.png",m="/assets/17.33ce5b58.png",b="/assets/18.055b2392.png",y="/assets/19.837145a9.png";const f={},w=p('<p>\u6709\u968F\u673A\u6570\u8282\u70B9\u7EC4\u6210\u7684\u4E8C\u53C9\u6811\u7684\u5E73\u5747\u9AD8\u5EA6\u4E3Alogn\uFF0C\u6240\u4EE5\u6B63\u5E38\u60C5\u51B5\u4E0B\u4E8C\u53C9\u6811\u67E5\u627E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(logn)\u3002\u4F46\u662F\uFF0C\u6839\u636E\u4E8C\u53C9\u6811\u7684\u7279\u6027\uFF0C\u5728\u6700\u574F\u7684\u60C5\u51B5\u4E0B\uFF0C\u6BD4\u5982\u5B58\u50A8\u7684\u662F\u4E00\u4E2A\u6709\u5E8F\u7684\u6570\u636E\u7684\u8BDD\uFF0C\u90A3\u4E48\u6240\u4EE5\u7684\u6570\u636E\u90FD\u4F1A\u5F62\u6210\u4E00\u6761\u94FE\uFF0C\u6B64\u65F6\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6\u4E3An\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)\u3002\u7EA2\u9ED1\u6811\u5C31\u662F\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684\uFF0C\u5B83\u80FD\u591F\u4FDD\u8BC1\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\u6811\u7684\u6DF1\u5EA6\u90FD\u4FDD\u6301\u5728log(n)\u5DE6\u53F3\u3002</p><p>\u7EA2\u9ED1\u6811\u901A\u8FC7\u4E00\u4E0B\u7EA6\u675F\u6765\u5B8C\u6210\u8FD9\u4E2A\u7279\u6027\uFF1A</p><ol><li><p>\u6BCF\u4E2A\u8282\u70B9\u4E0D\u662F\u7EA2\u8272\u5C31\u662F\u9ED1\u8272\u3002</p></li><li><p>\u6839\u8282\u70B9\u4E3A\u9ED1\u8272\u3002</p></li><li><p>\u6BCF\u4E2A\u53F6\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\u7684\u3002</p></li><li><p>\u6BCF\u4E2A\u7EA2\u8272\u8282\u70B9\u7684\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\u3002</p></li><li><p>\u4EFB\u610F\u8282\u70B9\uFF0C\u5230\u5176\u4EFB\u610F\u53F6\u8282\u70B9\u7684\u6240\u6709\u8DEF\u5F84\u90FD\u5305\u542B\u76F8\u540C\u7684\u9ED1\u8272\u8282\u70B9\u3002</p></li></ol><p>\u5173\u4E8E\u5B83\u7684\u7279\u6027\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF1A \u7B2C\u4E00\uFF0C\u7279\u60273\u4E2D\u7684\u53F6\u5B50\u8282\u70B9\uFF0C\u662F\u53EA\u4E3A\u7A7A(NIL\u6216null)\u7684\u8282\u70B9\u3002 \u7B2C\u4E8C\uFF0C\u7279\u60275\uFF0C\u786E\u4FDD\u6CA1\u6709\u4E00\u6761\u8DEF\u5F84\u4F1A\u6BD4\u5176\u4ED6\u8DEF\u5F84\u957F\u51FA\u4FE9\u500D\u3002\u56E0\u800C\uFF0C\u7EA2\u9ED1\u6811\u662F\u76F8\u5BF9\u662F\u63A5\u8FD1\u5E73\u8861\u7684\u4E8C\u53C9\u6811\u3002</p><p>\u7ED3\u6784\u5982\u4E0B\u56FE\uFF1A <img src="'+t+'" alt="" loading="lazy"></p><p>\u7EA2\u9ED1\u6811\u7684\u57FA\u672C\u64CD\u4F5C\u5305\u62EC\u5220\u9664\u548C\u6DFB\u52A0\u3002\u5728\u5220\u9664\u6216\u8005\u6DFB\u52A0\u4E00\u4E2A\u8282\u70B9\u7684\u65F6\u5019\u5C31\u6709\u53EF\u80FD\u6253\u7834\u539F\u6709\u7684\u7EA2\u9ED1\u6811\u7EF4\u6301\u7684\u5E73\u8861\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u901A\u8FC7\u7740\u8272\u548C\u65CB\u8F6C\u7684\u65B9\u5F0F\u6765\u4F7F\u7EA2\u9ED1\u6811\u91CD\u65B0\u8FBE\u5230\u5E73\u8861\u3002\u7740\u8272\u662F\u975E\u5E38\u7B80\u5355\u7684\uFF0C\u76F4\u63A5\u5C06\u8282\u70B9\u7684\u989C\u8272\u6539\u53D8\u5C31\u53EF\u4EE5\u4E86\uFF0C\u591A\u4EE5\u8981\u7406\u89E3\u7EA2\u9ED1\u6811\uFF0C\u5C31\u5FC5\u987B\u9700\u8981\u61C2\u5F97\u5982\u4F55\u8FDB\u884C\u65CB\u8F6C\uFF0C\u65CB\u8F6C\u53C8\u5206\u4E3A\u5DE6\u65CB\u548C\u53F3\u8F6C\uFF0C\u4E24\u4E2A\u64CD\u4F5C\u76F8\u53CD\u7684\uFF0C\u6240\u4EE5\u7406\u89E3\u4E86\u4E00\u4E2A\u65CB\u8F6C\u7684\u64CD\u4F5C\u5C31\u5F88\u5BB9\u6613\u7406\u89E3\u53E6\u4E00\u4E2A\u65CB\u8F6C\u4E86\u3002</p><p>\u5DE6\u65CB\uFF1A <img src="'+e+`" alt="" loading="lazy"></p><p>\u5982\u56FE\u6240\u793A\uFF0C\u7EA2\u8272\u8282\u70B9\u4E3A\u65CB\u8F6C\u652F\u70B9\uFF0C\u652F\u70B9\u5F80\u5DE6\u5B50\u6811\u79FB\u52A8\u5373\u4E3A\u5DE6\u65CB\u3002\u5DE6\u65CB\u4E4B\u540E\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u539F\u652F\u70B9\u7684\u4F4D\u7F6E\u88AB\u539F\u652F\u70B9\u7684\u53F3\u5B50\u8282\u70B9\u4EE3\u66FF\uFF0C\u65B0\u652F\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u53D8\u4E3A\u4E86\u539F\u6765\u4E3A\u7236\u8282\u70B9\u7684\u539F\u652F\u70B9\uFF0C\u65B0\u652F\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u53D8\u4E3A\u539F\u652F\u70B9\u7684\u53F3\u5B50\u8282\u70B9\uFF0C\u56E0\u6B64\u5DE6\u65CB\u64CD\u4F5C\u603B\u5171\u53F33\u4E2A\u8282\u70B9\uFF0C\u4EE5\u4E3A\u65CB\u8F6C\u524D\u7684\u7ED3\u6784\u4E3E\u4F8B\uFF0C\u5206\u522B\u4E3A\u7EA2\u8272\u8282\u70B9\uFF08\u539F\u652F\u70B9\uFF09\uFF0C\u9EC4\u8272\u8282\u70B9\uFF08\u65B0\u652F\u70B9\uFF09\u548CL\u8282\u70B9\u3002Java\u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u5DE6\u65CB
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> \u652F\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">leftRotate</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u652F\u70B9\u7684\u53F3\u5B50\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right <span class="token operator">=</span> e<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token comment">//\u652F\u70B9\u53F3\u5B50\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> rightOfLeft <span class="token operator">=</span> right<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token comment">//\u65B0\u65E7\u652F\u70B9\u7684\u66FF\u6362</span>
        right<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            root <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> right<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5C06\u539F\u652F\u70B9\u53D8\u4E3A\u65B0\u652F\u70B9\u7684\u5DE6\u8282\u70B9</span>
        right<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">;</span>
        e<span class="token punctuation">.</span>parent <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token comment">//\u5C06\u65B0\u652F\u70B9\u7684\u5DE6\u8282\u70B9\u53D8\u4E3A\u5C31\u652F\u70B9\u7684\u53F3\u8282\u70B9</span>
        e<span class="token punctuation">.</span>right <span class="token operator">=</span> rightOfLeft<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rightOfLeft <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            rightOfLeft<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u5728\u7EA2\u9ED1\u6811\u4E2D\u6BCF\u4E2A\u8282\u70B9\u90FD\u6709\u4E00\u4E2A\u6307\u9488\u6307\u5411\u81EA\u5DF1\u7684\u7236\u8282\u70B9\uFF0C\u7236\u8282\u70B9\u4E5F\u6709\u6307\u9488\u6307\u5411\u5B50\u8282\u70B9\uFF0C\u56E0\u4E3A\u5728\u6539\u52A8\u4E00\u4E2A\u8282\u70B9\u7684\u65F6\u5019\u90FD\u9700\u8981\u5206\u522B\u6539\u52A8\u5F53\u524D\u8282\u70B9\u548C\u7236\u8282\u70B9\u7684\u6307\u5411\uFF0C\u7ED3\u5408\u5DE6\u65CB\u7684\u793A\u610F\u56FE\uFF0C\u7528Java\u4EE3\u7801\u5B9E\u73B0\u8D77\u6765\u5C31\u4E0D\u4F1A\u5F88\u56F0\u96BE\u4E86\u3002</p><p>\u53F3\u65CB: <img src="`+o+`" alt="" loading="lazy"></p><p>\u53F3\u65CB\u64CD\u4F5C\u548C\u5DE6\u65CB\u76F8\u53CD\u7684\uFF0C\u4E24\u8005\u4E92\u53CD\u3002\u4F9D\u7136\u662F\u7EA2\u8272\u4F5C\u4E3A\u65CB\u8F6C\u652F\u70B9\uFF0C\u53F3\u65CB\u540E\u9EC4\u8272\u8282\u70B9\u4EE3\u66FF\u4E86\u7EA2\u8272\u8282\u70B9\u539F\u6765\u7684\u4F4D\u7F6E\uFF0C\u9EC4\u8272\u8282\u70B9\u7684\u53F3\u8282\u70B9\u65CB\u8F6C\u540E\u53D8\u4E3A\u7EA2\u8272\u8282\u70B9\u7684\u5DE6\u8282\u70B9\u3002Java \u4EE3\u7801\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * \u53F3\u65CB
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> \u65CB\u8F6C\u652F\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">rightRotate</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u539F\u652F\u70B9\u7684\u5DE6\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left <span class="token operator">=</span> e<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token comment">//\u539F\u652F\u70B9\u7684\u5DE6\u8282\u70B9\u7684\u53F3\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> leftOfRight <span class="token operator">=</span> left<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token comment">//\u65B0\u65E7\u652F\u70B9\u7684\u66FF\u6362</span>
        left<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u652F\u70B9\u7684\u7236\u8282\u70B9\u4E3A\u6839\u8282\u70B9\u7684\u60C5\u51B5</span>
            root <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u975E\u8DDF\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> left<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5C06\u539F\u652F\u70B9\u53D8\u4E3A\u65B0\u652F\u70B9\u7684\u53F3\u8282\u70B9</span>
        left<span class="token punctuation">.</span>right <span class="token operator">=</span> e<span class="token punctuation">;</span>
        e<span class="token punctuation">.</span>parent <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token comment">//\u5C06\u65B0\u652F\u70B9\u672A\u65CB\u8F6C\u524D\u7684\u53F3\u8282\u70B9\u53D8\u4E3A\u8F6C\u6362\u540E\u7684\u539F\u652F\u70B9\u7684\u5DE6\u8282\u70B9</span>
        e<span class="token punctuation">.</span>left <span class="token operator">=</span> leftOfRight<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>leftOfRight <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            leftOfRight<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EA2\u9ED1\u6811\u63D2\u5165\u8282\u70B9\u4E0E\u4E8C\u53C9\u6811\u662F\u4E00\u81F4\u7684\uFF0C\u6240\u4EE5\u6BCF\u6B21\u6DFB\u52A0\u8282\u70B9\u80AF\u5B9A\u662F\u6DFB\u52A0\u5230\u53F6\u5B50\u8282\u70B9\u4E0A\uFF0C\u5177\u4F53\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><p>\u7B2C\u4E00\u6B65\uFF1A\u5C06\u65B0\u8282\u70B9\u63D2\u5165\u5230\u7EA2\u9ED1\u6811\u4E2D\u3002\u7EA2\u9ED1\u6811\u672C\u8EAB\u5C31\u662F\u4E00\u9897\u4E8C\u53C9\u67E5\u627E\u6811\uFF0C\u5C06\u8282\u70B9\u63D2\u5165\u540E\uFF0C\u8BE5\u6811\u4ECD\u7136\u662F\u4E00\u9897\u4E8C\u53C9\u67E5\u627E\u6811\u3002\u4E5F\u5C31\u610F\u5473\u7740\uFF0C\u6811\u7684\u952E\u503C\u4ECD\u7136\u662F\u6709\u5E8F\u7684\u3002\u6B64\u5916\uFF0C\u65E0\u8BBA\u662F\u5DE6\u65CB\u8FD8\u662F\u53F3\u65CB\uFF0C\u82E5\u65CB\u8F6C\u4E4B\u524D\u8FD9\u68F5\u6811\u662F\u4E8C\u53C9\u67E5\u627E\u6811\uFF0C\u65CB\u8F6C\u4E4B\u540E\u5B83\u4E00\u5B9A\u8FD8\u662F\u4E8C\u53C9\u67E5\u627E\u6811\u3002\u8FD9\u4E5F\u5C31\u610F\u5473\u7740\uFF0C\u4EFB\u4F55\u7684\u65CB\u8F6C\u548C\u91CD\u65B0\u7740\u8272\u64CD\u4F5C\uFF0C\u90FD\u4E0D\u4F1A\u6539\u53D8\u5B83\u4ECD\u7136\u662F\u4E00\u9897\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u4E8B\u5B9E\u3002</p><p>\u7B2C\u4E8C\u6B65\uFF1A\u5C06\u65B0\u8282\u70B9\u8BBE\u7F6E\u4E3A\u7EA2\u8272\u3002\u8FD9\u91CC\u4E3A\u4EC0\u4E48\u9700\u8981\u8BBE\u7F6E\u6210\u7EA2\u8272\u5462\uFF1F\u4E3B\u8981\u662F\u4E3A\u4E86\u6EE1\u8DB3\u7279\u60275\uFF0C\u8FD9\u6837\u5728\u63D2\u5165\u8282\u70B9\u540E\u5C31\u5C11\u89E3\u51B3\u4E86\u4E00\u4E2A\u51B2\u7A81\uFF0C\u4E5F\u5C31\u5C11\u4E00\u70B9\u9EBB\u70E6\u3002\u63D2\u5165\u5B8C\u6210\u540E\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u8FD8\u6709\u90A3\u4E9B\u7279\u6027\u662F\u6709\u53EF\u80FD\u53D1\u751F\u51B2\u7A81\u7684\uFF0C\u7279\u60271\u6BCF\u4E2A\u8282\u70B9\u4E0D\u662F\u7EA2\u8272\u5C31\u662F\u9ED1\u8272\u7684\uFF0C\u8FD9\u660E\u663E\u6CA1\u6709\u51B2\u7A81\uFF0C\u7279\u60272\u6839\u8282\u70B9\u4E3A\u9ED1\u8272\uFF0C\u5F53\u63D2\u5165\u8282\u70B9\u4E3A\u6839\u8282\u70B9\u7684\u65F6\u5019\u5C31\u4F1A\u6709\u51B2\u7A81\u4E86\uFF0C\u8FD9\u79CD\u5C31\u5F88\u7B80\u5355\u4E86\uFF0C\u76F4\u63A5\u5C06\u6839\u8282\u70B9\u7740\u8272\u4E3A\u9ED1\u8272\u5373\u53EF\u3002\u7279\u60273\u6BCF\u4E2A\u53F6\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\uFF0C\u8FD9\u4E2A\u660E\u663E\u6CA1\u6709\u51B2\u7A81\u3002\u7279\u60274\u6BCF\u4E2A\u7EA2\u8272\u8282\u70B9\u7684\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\u7684\uFF0C\u8FD9\u4E2A\u7279\u6027\u5C31\u6709\u53EF\u80FD\u4F1A\u51B2\u7A81\uFF0C\u56E0\u4E3A\u5728\u63D2\u5165\u65B0\u8282\u70B9\u7684\u65F6\u5019\u6211\u4EEC\u65E0\u6CD5\u786E\u5B9A\u65B0\u8282\u70B9\u7684\u7236\u8282\u70B9\u7684\u989C\u8272\u662F\u9ED1\u8272\u7684\u8FD8\u662F\u7EA2\u8272\uFF0C\u5982\u679C\u65B0\u8282\u70B9\u7684\u7236\u8282\u4E3A\u9ED1\u8272\uFF0C\u90A3\u4E48\u5C31\u4E0D\u4F1A\u6709\u51B2\u7A81\uFF0C\u5426\u5219\u5C31\u4F1A\u8FDD\u80CC\u4E86\u7279\u60274\u3002\u7279\u60275\u4EFB\u610F\u8282\u70B9\uFF0C\u5230\u5176\u4EFB\u610F\u5B50\u8282\u70B9\u7684\u6240\u6709\u8DEF\u5F84\u90FD\u5305\u542B\u76F8\u540C\u7684\u9ED1\u8272\u8282\u70B9\uFF0C\u56E0\u4E3A\u6211\u4EEC\u63D2\u5165\u7684\u65B0\u8282\u70B9\u88AB\u7740\u8272\u4E3A\u7EA2\u8272\uFF0C\u6240\u4EE5\u5E76\u4E0D\u4F1A\u5F71\u54CD\u5230\u6BCF\u4E2A\u8DEF\u5F84\u7684\u9ED1\u8272\u8282\u70B9\u7684\u6570\u91CF\uFF0C\u56E0\u6B64\u4E5F\u4E0D\u4F1A\u6709\u51B2\u7A81\u3002\u7EFC\u4E0A\u6240\u8BC9\uFF0C\u90A3\u4E48\u5728\u63D2\u5165\u65B0\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u53EA\u6709\u7279\u60274\u6709\u53EF\u80FD\u53D1\u751F\u51B2\u7A81\u3002</p><p>\u7B2C\u4E09\u6B65\uFF1A\u5E73\u8861\u7EA2\u9ED1\u6811\uFF0C\u4F7F\u4E4B\u6210\u4E3A\u65B0\u7684\u7EA2\u9ED1\u6811\u3002</p><p>\u6839\u636E\u7B2C\u4E8C\u6B65\u5F97\u5230\u7684\u7ED3\u8BBA\uFF0C\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\u53EA\u6709\u4E00\u79CD\u60C5\u51B5\u662F\u9700\u8981\u89E3\u51B3\u51B2\u7A81\u7684\uFF0C\u90A3\u5C31\u662F\u65B0\u8282\u70B9\u7684\u7236\u8282\u70B9\u4E3A\u7EA2\u8272\u7684\u65F6\u5019\u8FDD\u80CC\u4E86\u7279\u60274\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u5C06\u8981\u8BA8\u8BBA\u8FD9\u4E2A\u95EE\u9898\uFF0C\u56E0\u4E3A\u5728\u65B0\u63D2\u5165\u4E00\u4E2A\u8282\u70B9\u4E4B\u524D\u662F\u4E00\u9897\u5DF2\u7ECF\u5E73\u8861\u4E86\u7684\u7EA2\u9ED1\u6811\uFF0C\u56E0\u6B64\u6839\u636E\u7279\u65B04\uFF0C\u65B0\u8282\u70B9\u7684\u7236\u8282\u70B9\u4E3A\u7EA2\u8272\u7684\u65F6\u5019\uFF0C\u65B0\u8282\u70B9\u7684\u7956\u7236\u8282\u70B9\u5FC5\u5B9A\u4E3A\u9ED1\u8272\u3002\u6839\u636E\u8FD9\u79CD\u60C5\u51B5\uFF0C\u6211\u4EEC\u53C8\u53EF\u4EE5\u5206\u4E3A\u4EE5\u4E0B\u56DB\u79CD\u60C5\u51B5\uFF1A</p><p>\u60C5\u51B51\uFF1A\u65B0\u8282\u70B9\u4E3A\u5DE6\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u7EA2\u8272\uFF1B</p><p>\u60C5\u51B52\uFF1A\u65B0\u8282\u70B9\u4E3A\u5DE6\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u9ED1\u8272\uFF1B</p><p>\u60C5\u51B53\uFF1A\u65B0\u8282\u70B9\u4E3A\u53F3\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u7EA2\u8272\uFF1B</p><p>\u60C5\u51B54\uFF1A\u65B0\u8282\u70B9\u4E3A\u53F3\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u9ED1\u8272\uFF1B</p><p><img src="`+c+'" alt="" loading="lazy"></p><p>\u60C5\u51B51\u548C\u60C5\u51B53\u7684\u60C5\u51B5\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u9700\u8981\u53D8\u8272(\u5C06\u7236\u8282\u70B9\u548C\u53D4\u53D4\u8282\u70B9\u53D8\u8272\u4E3A\u9ED1\u8272\uFF0C\u5C06\u7956\u7236\u8282\u70B9\u53D8\u8272\u4E3A\u7EA2\u8272)\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5C06\u8FD9\u4E24\u79CD\u60C5\u51B5\u770B\u4F5C\u662F\u4E00\u79CD\u60C5\u51B5\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5F52\u7ED3\u4E3A3\u79CD\u60C5\u51B5\uFF1A</p><p>\u60C5\u51B51\uFF1A\u53D4\u53D4\u8282\u70B9\u662F\u7EA2\u8272\u8282\u70B9\uFF1B</p><p>\u60C5\u51B52\uFF1A\u53D4\u53D4\u8282\u70B9\u662F\u9ED1\u8272\u8282\u70B9\uFF0C\u65B0\u8282\u70B9\u4E3A\u53F3\u8282\u70B9\uFF1B</p><p>\u60C5\u51B53\uFF1A\u53D4\u53D4\u8282\u70B9\u662F\u9ED1\u8272\u8282\u70B9\uFF0C\u65B0\u8282\u70B9\u4E3A\u5DE6\u8282\u70B9\uFF1B</p><p>\u60C5\u51B51\u8FD9\u79CD\u60C5\u51B5\u5904\u7406\u8D77\u6765\u6BD4\u8F83\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u5C06\u7956\u7236\u8282\u70B9\u53D8\u4E3A\u7EA2\u8272\u8282\u70B9\uFF0C\u7236\u8282\u70B9\u548C\u53D4\u53D4\u8282\u70B9\u53D8\u4E3A\u9ED1\u8272\u5373\u53EF\uFF0C\u8FD9\u4EC5\u4EC5\u53EA\u662F\u5F53\u6574\u4E2A\u7EA2\u9ED1\u6811\u53EA\u6709\u8FD9\u51E0\u4E2A\u8282\u70B9\u7684\u65F6\u5019\u662F\u53EF\u4EE5\u4E86\uFF0C\u4F46\u4E8B\u5B9E\u5E76\u975E\u5982\u6B64\uFF0C\u8FD9\u4EC5\u4EC5\u53EA\u662F\u8FBE\u5230\u4E86\u5C40\u90E8\u5E73\u8861\u3002</p><p><img src="'+l+'" alt="" loading="lazy"></p><p>\u4E0A\u56FE\uFF0C\u6211\u4EEC\u770B\u5230\u5DF2\u7ECF\u8FBE\u5230\u4E86\u5C40\u90E8\u7684\u5E73\u8861\uFF0C\u4F46\u662F\uFF0C\u6211\u4EEC\u8FD8\u4F1A\u6709\u5176\u4ED6\u7684\u60C5\u51B5\uFF0C\u90A3\u5C31\u662F\u7956\u7236\u8282\u70B9\u6709\u53EF\u80FD\u4E5F\u4F1A\u6709\u7236\u8282\u70B9\u3002\u90A3\u4E48\u53C8\u4F1A\u6709\u4E24\u79CD\u60C5\u51B5\uFF0C1\u662F\u7956\u7236\u8282\u70B9\u7684\u7236\u8282\u70B9\u53EF\u80FD\u662F\u9ED1\u8272\u7684\uFF0C2\u662F\u53EF\u80FD\u662F\u7EA2\u8272\u7684\uFF0C\u5982\u679C\u9ED1\u8272\u90A3\u4E48\u6574\u4E2A\u7EA2\u9ED1\u6811\u5C31\u8FBE\u5230\u5E73\u8861\u4E86\u3002\u4E0D\u77E5\u9053\u5927\u5BB6\u611F\u89C9\u5230\u4E86\u6CA1\u6709\uFF0C\u8FD9\u4E24\u79CD\u60C5\u51B5\u662F\u4E0D\u662F\u8DDF\u65B0\u63D2\u5165\u4E00\u4E2A\u8282\u70B9\u7684\u60C5\u51B5\u662F\u4E00\u81F4\u7684\uFF0C\u662F\u4E0D\u662F\u53C8\u56DE\u5230\u4E86\u63D2\u5165\u65B0\u8282\u70B9\u7684\u95EE\u9898\u4E86(\u9012\u5F52\u601D\u60F3\u554A)\uFF1F\u4E8E\u662F\u6211\u5C06\u5C40\u90E8\u6536\u5230\u5F71\u54CD\u7684\u90E8\u5206\u753B\u51FA\u6765\uFF0C\u5982\u56FE\uFF1A <img src="'+u+`" alt="" loading="lazy"></p><p>\u56FEa\u5C31\u662F\u5C06\u60C5\u51B51\u4ECE\u65B0\u7740\u8272\u540E\u7684\u90E8\u5206\u53D7\u5F71\u54CD\u7684\u8282\u70B9\uFF0C\u5F53\u7136\u53EA\u662F\u5176\u4E2D\u7684\u4E00\u79CD\u60C5\u51B5\uFF0C\u6B64\u65F6\u6211\u4EEC\u5C06\u5DF2\u7ECF\u5E73\u8861\u7684\u90E8\u5206\u53BB\u6389\u5C31\u53D8\u6210\u7684\u56FEb\u7684\u60C5\u51B5\uFF0C\u8FD9\u79CD\u60C5\u51B5\u662F\u4E0D\u662F\u5F88\u719F\u6089\u5462\uFF1F\u6211\u4EEC\u7684\u7956\u7236\u8282\u70B9\u5F53\u6210\u65B0\u8282\u70B9\uFF0C\u662F\u4E0D\u662F\u76F8\u5F53\u4E8E\u4E0A\u9762\u8BA8\u8BBA\u7684\u60C5\u51B51\u5462\uFF1F\u4E0D\u8FC7\u4E0E\u4E0A\u9762\u8BA8\u8BBA\u7684\u60C5\u51B5\u4E0D\u540C\u7684\u662F\uFF0C\u8FD9\u91CC3\u4E2D\u53EF\u80FD\u60C5\u51B5\u90FD\u53EF\u80FD\u51FA\u73B0\uFF0C\u56E0\u4E3A\u53D4\u53D4\u8282\u70B9\u6709\u53EF\u80FD\u4E3A\u7EA2\u8272\u6216\u9ED1\u8272\u3002\u6240\u4EE5\u8FD9\u65F6\u5019\u624D\u6709\u53EF\u80FD\u51FA\u73B0\u771F\u6B63\u7684\u4E09\u79CD\u60C5\u51B5\uFF1A</p><p>\u60C5\u51B51\uFF1A\u53D4\u53D4\u8282\u70B9\u662F\u7EA2\u8272\u8282\u70B9\uFF1B</p><p>\u60C5\u51B52\uFF1A\u53D4\u53D4\u8282\u70B9\u662F\u9ED1\u8272\u8282\u70B9\uFF0C\u65B0\u8282\u70B9\u4E3A\u53F3\u8282\u70B9\uFF1B</p><p>\u60C5\u51B53\uFF1A\u53D4\u53D4\u8282\u70B9\u662F\u9ED1\u8272\u8282\u70B9\uFF0C\u65B0\u8282\u70B9\u4E3A\u5DE6\u8282\u70B9\uFF1B</p><p>\u5982\u679C\u4E3A\u60C5\u51B51\u7684\u8BDD\uFF0C\u6211\u4EEC\u4E00\u5C42\u4E00\u5C42\u7684\u5F80\u4E0A\u5E73\u8861\u5C31\u53EF\u4EE5\u4E86\uFF0C\u5F53\u7956\u7236\u8282\u70B9\u4E3A\u6839\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u76F4\u63A5\u5C06\u6839\u8282\u70B9\u7740\u8272\u4E3A\u9ED1\u8272\u5373\u53EF\uFF0C\u56E0\u4E3A\u7956\u7236\u8282\u70B9\u7684\u4E24\u4E2A\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\u7684\uFF0C\u6240\u4EE5\u53D8\u4E3A\u9ED1\u8272\u540E\u4ECD\u7136\u662F\u5E73\u8861\u7684\u3002</p><pre><code>\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u8BA8\u8BBA\u4E0B\u60C5\u51B52\u548C3\u3002
</code></pre><p><img src="`+i+`" alt="" loading="lazy"></p><pre><code>\u60C5\u51B52\u4EE5\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u5DE6\u65CB\uFF0C\u7136\u540E\u5C06\u7236\u8282\u70B9\u548C\u65B0\u8282\u70B9\u4E92\u6362\u53EF\u4EE5\u5F97\u5230\u60C5\u51B53\uFF1A
</code></pre><p><img src="`+k+'" alt="" loading="lazy"></p><p>\u60C5\u51B53\u8FDB\u884C\u7684\u64CD\u4F5C\u662F\uFF0C\u9996\u5148\u5C06\u7236\u8282\u70B9\u7740\u8272\u4E3A\u9ED1\u8272\uFF0C\u7956\u7236\u8282\u70B9\u7740\u8272\u4E3A\u7EA2\u8272\uFF0C\u6B64\u65F6\u7834\u574F\u4E86\u7279\u60275\uFF0C\u7236\u4EB2\u8FD9\u4E2A\u5206\u652F\u9ED1\u8272\u8282\u70B9\u603B\u6570\u6CA1\u53D8\uFF0C\u53D4\u53D4\u90A3\u4E2A\u5206\u652F\u56E0\u4E3A\u7956\u7236\u7531\u9ED1\u53D8\u7EA2\uFF0C\u5C11\u4E86\u4E00\u4E2A\u9ED1\u8272\u8282\u70B9\uFF0C\u6240\u4EE5\u5E0C\u671B\u901A\u8FC7\u65CB\u8F6C\u628A\u7236\u8282\u70B9\u79FB\u5230\u7956\u7236\u7684\u4F4D\u7F6E\uFF0C\u6765\u5E73\u8861\u4E24\u4E2A\u5206\u652F\u7684\u9ED1\u8272\u8282\u70B9\u7684\u6570\u91CF\u3002\u7136\u540E\u4EE5\u7956\u7236\u4E3A\u652F\u70B9\u8FDB\u884C\u53F3\u65CB <img src="'+r+'" alt="" loading="lazy"></p><p>\u60C5\u51B53\u65CB\u8F6C\u7ED3\u675F\u540E\u6574\u68F5\u7EA2\u9ED1\u4E5F\u5DF2\u7ECF\u91CD\u65B0\u6062\u590D\u5E73\u8861\u4E86\u3002\u5355\u4ECE\u90E8\u5206\u5176\u5B9E\u5E76\u770B\u4E0D\u51FA\u5DF2\u7ECF\u5E73\u8861\u4E86\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u4E09\u4E2A\u60C5\u51B5\u8FDE\u8D77\u6765\u5C31\u53EF\u4EE5\u770B\u5230\u4E86\uFF0C\u5982\u4E0B\u56FE\uFF1A <img src="'+d+`" alt="" loading="lazy"></p><p>\u4E0A\u56FE\u4E2D\u90FD\u662F\u4EE5n\u8282\u70B9\u4E3A\u53C2\u8003\u70B9\u7684\uFF0C\u5176\u4F59\u65E0\u5173\u7684\u8282\u70B9\u5C31\u4E0D\u6807\u51FA\u6765\u4E86\u3002n\u8282\u70B9\u5373\u4E3A\u63D2\u5165\u8282\u70B9\uFF0C\u4F46\u662F\u9664\u4E86\u7B2C\u4E00\u6B21\u64CD\u4F5Cn\u8282\u70B9\u4E3A\u771F\u6B63\u7684\u65B0\u8282\u70B9\uFF0C\u6B64\u540E\u7684\u64CD\u4F5C\u6240\u6307\u7684n\u8282\u70B9\u53EA\u662F\u6709\u52A9\u4E8E\u6211\u4EEC\u7684\u7406\u89E3\u628A\u4ED6\u5F53\u6210\u65B0\u8282\u70B9\u3002\u5F53\u7136\uFF0C\u8FD9\u53EA\u662F\u5176\u4E2D\u7684\u4E00\u79CD\u60C5\u51B5\uFF0C\u5176\u4ED6\u5176\u4ED6\u7684\u60C5\u51B5\u53EF\u4EE5\u901A\u8FC7\u4E0D\u65AD\u5411\u4E0A\u65CB\u8F6C\u6216\u7740\u8272\uFF0C\u6700\u7EC8\u4E5F\u4F1A\u8FBE\u5230\u8FD9\u79CD\u60C5\u51B5\u6216\u8005\u9876\u90E8\u662Fp\u8282\u70B9\u4E3A\u6839\u8282\u70B9\u7684\u65F6\u5019\uFF0C\u7B2C\u4E8C\u79CD\u60C5\u51B5\u76F4\u63A5\u5C06\u6839\u8282\u70B9\u7740\u8272\u4E3A\u9ED1\u8272\u5373\u53EF\u3002</p><p>\u4E0A\u9762\u662F\u8BA8\u8BBA\u5DE6\u5B50\u6811\u7684\u95EE\u9898\uFF0C\u56E0\u4E3A\u7EA2\u9ED1\u8272\u5177\u6709\u5806\u6210\u6027\uFF0C\u56E0\u6B64\u5728\u5904\u7406\u53F3\u5B50\u6811\u7684\u65F6\u5019\u4E0E\u5904\u7406\u5DE6\u5B50\u6811\u76F8\u53CD\u5373\u53EF\u3002Java\u4EE3\u7801\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * \u63D2\u5165\u65B0\u8282\u70B9\u540E\u5E73\u8861\u7EA2\u9ED1\u6811
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> \u65B0\u8282\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fixAfterInsertion</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5C06\u65B0\u63D2\u5165\u8282\u70B9\u8BBE\u7F6E\u4E3A\u7EA2\u8272</span>
        <span class="token function">setRed</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">,</span>g<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u548C\u7956\u7236\u8282\u70B9\u548C\u53D4\u53D4\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> e<span class="token punctuation">;</span><span class="token comment">//\u65B0\u8282\u70B9</span>
        <span class="token doc-comment comment">/**
         * \u8FD9\u91CC\u901A\u8FC7\u5FAA\u73AF\u4E0D\u65AD\u5411\u4E0A\u5E73\u8861
         */</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            g <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> g<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
                u <span class="token operator">=</span> g<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token comment">//\u60C5\u51B51\uFF1A\u53D4\u53D4\u8282\u70B9\u4E3A\u7EA2\u8272</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u53D4\u53D4\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272</span>
                    current <span class="token operator">=</span> g<span class="token punctuation">;</span><span class="token comment">//\u628A\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u5F53\u524D\u8282\u70B9</span>
                    <span class="token comment">//\u7EE7\u7EED\u5411\u4E0A\u5E73\u8861</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u60C5\u51B52\uFF1A\u5F53\u524D\u8282\u70B9\u4E3A\u53F3\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u9ED1\u8272</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">leftRotate</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u5DE6\u65CB</span>
                    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> p<span class="token punctuation">;</span>
                    p <span class="token operator">=</span> current<span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u548C\u5F53\u524D\u8282\u70B9\u4E92\u6362</span>
                    current <span class="token operator">=</span> tmp<span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u8BBE\u4E3A\u5F53\u524D\u8282\u70B9</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u60C5\u51B53\uFF1A\u5F53\u524D\u8282\u70B9\u4E3A\u5DE6\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u9ED1\u8272</span>
                <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</span>
                <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272</span>
                <span class="token function">rightRotate</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u53F3\u65CB</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u76F8\u53CD\u7684\u64CD\u4F5C</span>
                u <span class="token operator">=</span> g<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    current <span class="token operator">=</span> g<span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">rightRotate</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> p<span class="token punctuation">;</span>
                    p <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    current <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">leftRotate</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6700\u540E\u5C06\u6839\u8282\u70B9\u8BBE\u7F6E\u4E3A\u7EA2\u8272</span>
        <span class="token function">setBlack</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5220\u9664\u8282\u70B9</p><p>\u5728\u4E8C\u53C9\u6811\u4E2D\u5220\u9664\u4E00\u4E2A\u8282\u70B9\u7684\u65F6\u5019\u67093\u4E2D\u60C5\u51B5\uFF1A</p><p>1\u3001\u5220\u9664\u8282\u70B9\u6CA1\u6709\u5B50\u8282\u70B9</p><p>2\u3001\u5220\u9664\u8282\u70B9\u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9</p><p>3\u3001\u5220\u9664\u8282\u70B9\u6709\u4E24\u4E2A\u5B50\u8282\u70B9</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u9010\u4E2A\u6765\u5206\u6790\u6BCF\u79CD\u60C5\u51B5\u5220\u9664\u8282\u70B9\u540E\u5BF9\u6574\u9897\u7EA2\u9ED1\u6811\u7684\u5E73\u8861\u6027\u7684\u5F71\u54CD\u3002\u5728\u5220\u9664\u8282\u70B9\u65F6\u5019\u7EA2\u9ED1\u6811\u7684\u7279\u60271\uFF0C2\uFF0C3\u80AF\u5B9A\u4E0D\u4F1A\u8FDD\u80CC\uFF0C\u6240\u4EE5\u53EA\u9700\u8981\u8003\u8651\u7279\u60274\uFF0C5\u5373\u53EF\u3002</p><p>\u5BF9\u4E8E\u60C5\u51B51\uFF0C\u80AF\u5B9A\u4E0D\u4F1A\u8FDD\u80CC\u7279\u60274\uFF0C\u5982\u679C\u5220\u9664\u8282\u70B9\u4E3A\u7EA2\u8272\uFF0C\u90A3\u4E48\u5BF9\u6574\u9897\u7EA2\u9ED1\u6811\u7684\u5E73\u8861\u6027\u90FD\u4E0D\u4F1A\u5F71\u54CD\uFF0C\u5982\u679C\u662F\u9ED1\u8272\u5219\u8FDD\u80CC\u4E86\u7279\u60275\uFF0C\u6211\u4EEC\u5148\u5C06\u8FD9\u79CD\u60C5\u51B5\u8BB0\u5F55\u4E0B\u6765\uFF0C\u7A0D\u540E\u518D\u8FDB\u4E00\u6B65\u8BA8\u8BBA\u3002</p><p>\u5BF9\u4E8E\u60C5\u51B52\uFF0C\u6709\u53EF\u80FD\u5220\u9664\u7684\u662F\u5DE6\u5B50\u6811\u6216\u53F3\u5B50\u6811\uFF0C\u6682\u4E14\u4E0D\u8BA8\u8BBA\u3002\u5982\u679C\u5220\u9664\u7684\u8282\u70B9\u4E3A\u7EA2\u8272\uFF0C\u4E0D\u5F71\u54CD\u5E73\u8861\u6027\uFF0C\u5982\u679C\u5220\u9664\u7684\u662F\u9ED1\u8272\uFF0C\u90A3\u4E48\u80AF\u5B9A\u4F1A\u548C\u7279\u60275\u6709\u51B2\u7A81\uFF0C\u5F53\u5220\u9664\u8282\u70B9\u7684\u7236\u8282\u70B9\u4E3A\u7EA2\u8272\uFF0C\u5B50\u8282\u70B9\u4E3A\u7EA2\u8272\u662F\u4E5F\u548C\u7279\u60274\u6709\u51B2\u7A81\u3002</p><p>\u5BF9\u4E8E\u60C5\u51B53\uFF0C\u5176\u5B9E\u6700\u540E\u5220\u9664\u7684\u662F\u5B83\u7684\u66FF\u4EE3\u8282\u70B9\uFF0C\u6839\u636E\u66FF\u4EE3\u8282\u70B9\u7684\u7279\u70B9\uFF0C\u6700\u7EC8\u5176\u5B9E\u662F\u56DE\u5230\u4E861\u8FD9\u79CD\u60C5\u51B5\u6216\u8005\u60C5\u51B52\u3002</p><p>\u603B\u7ED3\u4E0A\u9762\u76843\u79CD\u60C5\u51B5\u53EF\u5F97\u5230\u4E00\u4E2A\u7ED3\u8BBA\uFF0C\u53EA\u6709\u5220\u9664\u8282\u70B9\u4E3A\u9ED1\u8272\u65F6\u624D\u4F1A\u7834\u574F\u7EA2\u9ED1\u6811\u539F\u6765\u7684\u5E73\u8861\uFF0C\u56E0\u5728\u5220\u9664\u8282\u70B9\u4E4B\u524D\u7EA2\u9ED1\u6811\u662F\u51FA\u4E8E\u5E73\u8861\u72B6\u6001\u7684\uFF0C\u5220\u9664\u4E4B\u540E\u5F88\u660E\u663E\u7684\u5176\u5144\u5F1F\u8282\u70B9\u5206\u652F\u5FC5\u7136\u6BD4\u5220\u9664\u8282\u70B9\u7684\u5206\u652F\u591A\u4E86\u4E00\u4E2A\u9ED1\u8272\u7684\u8282\u70B9\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EA\u9700\u8981\u6539\u53D8\u5144\u5F1F\u8282\u70B9\u7684\u989C\u8272\u5373\u53EF\uFF0C\u6211\u4EEC\u53EA\u8BA8\u8BBA\u5DE6\u8282\u70B9\uFF0C\u53F3\u8282\u70B9\u5BF9\u79F0\u3002</p><p>\u4E00\u3001\u5220\u9664\u8282\u70B9\u7684\u5144\u5F1F\u8282\u70B9\u662F\u7EA2\u8272</p><p>\u5C06\u5144\u5F1F\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272\uFF0C\u7236\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272\uFF0C\u4EE5\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u5DE6\u65CB\u8F6C\uFF0C\u7136\u540E\u5C06\u7236\u8282\u70B9\u7684\u53F3\u8282\u70B9\u653E\u5230\u5144\u5F1F\u8282\u70B9\u4E0A\uFF1A <img src="`+v+'" alt="" loading="lazy"></p><p>\u4E8C\u3001\u5144\u5F1F\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u5144\u5F1F\u7684\u4E24\u4E2A\u5B50\u8282\u70B9\u4E5F\u90FD\u662F\u9ED1\u8272\u7684</p><p>\u5144\u5F1F\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272\uFF0C\u628A\u7236\u8282\u70B9\u8BBE\u7F6E\u4E3A\u65B0\u7684\u5220\u9664\u8282\u70B9\uFF1A <img src="'+m+'" alt="" loading="lazy"></p><p>\u4E09\u3001\u5144\u5F1F\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u4E14\u5144\u5F1F\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u53F3\u5B50\u8282\u70B9\u662F\u9ED1\u8272</p><p>\u5C06\u5144\u5F1F\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272\uFF0C\u5144\u5F1F\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272\uFF0C\u4EE5\u5144\u5F1F\u8282\u70B9\u4E3A\u652F\u70B9\u53F3\u65CB\uFF0C\u628A\u7236\u8282\u70B9\u7684\u53F3\u8282\u70B9\u8BBE\u7F6E\u4E3A\u5144\u5F1F\u8282\u70B9 <img src="'+b+'" alt="" loading="lazy"></p><p>\u56DB\u3001\u5144\u5F1F\u8282\u70B9\u662F\u9ED1\u8272\u7684\uFF0C\u4E14\u5144\u5F1F\u8282\u70B9\u7684\u53F3\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u5DE6\u5B50\u8282\u70B9\u4EFB\u610F\u989C\u8272</p><p>\u628A\u5144\u5F1F\u8282\u70B9\u7684\u8BBE\u4E3A\u7236\u8282\u70B9\u7684\u989C\u8272\uFF0C\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272\uFF0C\u7236\u8282\u70B9\u7684\u53F3\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272\uFF0C\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u5DE6\u65CB <img src="'+y+`" alt="" loading="lazy"></p><p>\u5220\u9664\u7684Java\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> delEntry<span class="token punctuation">;</span>
        delEntry <span class="token operator">=</span> <span class="token function">getEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        size<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> delEntry<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                root <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>left <span class="token operator">==</span> delEntry<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u53EA\u6709\u5DE6\u8282\u70B9</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lc <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lc<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                root <span class="token operator">=</span> lc<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry <span class="token operator">==</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>left <span class="token operator">=</span> lc<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>right <span class="token operator">=</span> lc<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                lc<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u53EA\u6709\u53F3\u8282\u70B9</span>
                <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> rc <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rc<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                root <span class="token operator">=</span> rc<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry <span class="token operator">==</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                    p<span class="token punctuation">.</span>left <span class="token operator">=</span> rc<span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    p<span class="token punctuation">.</span>right <span class="token operator">=</span> rc<span class="token punctuation">;</span>
                rc<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u6709\u4E24\u4E2A\u8282\u70B9,\u627E\u5230\u540E\u7EE7\u8282\u70B9\uFF0C\u5C06\u503C\u8D4B\u7ED9\u5220\u9664\u8282\u70B9\uFF0C\u7136\u540E\u5C06\u540E\u7EE7\u8282\u70B9\u5220\u9664\u6389\u5373\u53EF</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> successor <span class="token operator">=</span> <span class="token function">successor</span><span class="token punctuation">(</span>delEntry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u83B7\u53D6\u5230\u540E\u7EE7\u8282\u70B9</span>
            <span class="token keyword">boolean</span> color <span class="token operator">=</span> successor<span class="token punctuation">.</span>color<span class="token punctuation">;</span>
            <span class="token class-name">V</span> old <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            delEntry<span class="token punctuation">.</span>value <span class="token operator">=</span> successor<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            delEntry<span class="token punctuation">.</span>key <span class="token operator">=</span> successor<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">==</span> successor<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u540E\u7EE7\u8282\u70B9\u4E3A\u53F3\u5B50\u8282\u70B9\uFF0C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>successor<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u53F3\u5B50\u8282\u70B9\u6709\u53F3\u5B50\u8282\u70B9</span>
                    delEntry<span class="token punctuation">.</span>right <span class="token operator">=</span> successor<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    successor<span class="token punctuation">.</span>right<span class="token punctuation">.</span>parent <span class="token operator">=</span> delEntry<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u53F3\u5B50\u8282\u70B9\u6CA1\u6709\u5B50\u8282\u70B9</span>
                    delEntry<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                successor<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>color <span class="token operator">==</span> BLACK<span class="token punctuation">)</span>
                <span class="token comment">//fixUpAfterRemove(child,parent);</span>
            <span class="token keyword">return</span> old<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">V</span> old <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>color <span class="token operator">==</span> BLACK<span class="token punctuation">)</span><span class="token comment">//\u5220\u9664\u4E3A\u9ED1\u8272\u65F6\uFF0C\u9700\u8981\u91CD\u65B0\u5E73\u8861\u6811</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">//\u5220\u9664\u8282\u70B9\u7684\u5B50\u8282\u70B9\u53EA\u6709\u53F3\u8282\u70B9</span>
                <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right<span class="token punctuation">,</span>delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">//\u5220\u9664\u8282\u70B9\u53EA\u6709\u5DE6\u8282\u70B9</span>
                <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>left<span class="token punctuation">,</span>delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        delEntry<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        delEntry<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        delEntry<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> old<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getEntry</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> delEntry <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> root<span class="token punctuation">;</span>
        <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>comparator <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> key<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                ret <span class="token operator">=</span> k<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token keyword">else</span><span class="token punctuation">{</span>
                    delEntry <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                ret <span class="token operator">=</span> comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">K</span><span class="token punctuation">)</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token keyword">else</span><span class="token punctuation">{</span>
                    delEntry <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> delEntry<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//node\u8868\u793A\u5F85\u4FEE\u6B63\u7684\u8282\u70B9\uFF0C\u5373\u540E\u7EE7\u8282\u70B9\u7684\u5B50\u8282\u70B9\uFF08\u56E0\u4E3A\u540E\u7EE7\u8282\u70B9\u88AB\u632A\u5230\u5220\u9664\u8282\u70B9\u7684\u4F4D\u7F6E\u53BB\u4E86\uFF09</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node<span class="token punctuation">,</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>left <span class="token operator">==</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//node\u662F\u5DE6\u5B50\u8282\u70B9\uFF0C\u4E0B\u9762else\u4E0E\u8FD9\u91CC\u7684\u521A\u597D\u76F8\u53CD</span>
                other <span class="token operator">=</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">;</span> <span class="token comment">//node\u7684\u5144\u5F1F\u8282\u70B9</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//case1: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u7EA2\u8272\u7684</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">leftRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    other <span class="token operator">=</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//case2: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u9ED1\u8272\u7684\uFF0C\u4E14other\u7684\u4E24\u4E2A\u5B50\u8282\u70B9\u4E5F\u90FD\u662F\u9ED1\u8272\u7684</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span>other<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> parent<span class="token punctuation">;</span>
                    parent <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">//case3: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u9ED1\u8272\u7684\uFF0C\u4E14other\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u53F3\u5B50\u8282\u70B9\u662F\u9ED1\u8272</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">rightRotate</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        other <span class="token operator">=</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">//case4: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u9ED1\u8272\u7684\uFF0C\u4E14other\u7684\u53F3\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u5DE6\u5B50\u8282\u70B9\u4EFB\u610F\u989C\u8272</span>
                    <span class="token function">setColor</span><span class="token punctuation">(</span>other<span class="token punctuation">,</span> <span class="token function">colorOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">leftRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//\u4E0E\u4E0A\u9762\u7684\u5BF9\u79F0</span>
                other <span class="token operator">=</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Case 1: node\u7684\u5144\u5F1Fother\u662F\u7EA2\u8272\u7684</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">rightRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    other <span class="token operator">=</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Case 2: node\u7684\u5144\u5F1Fother\u662F\u9ED1\u8272\uFF0C\u4E14other\u7684\u4FE9\u4E2A\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\u7684</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> parent<span class="token punctuation">;</span>
                    parent <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// Case 3: node\u7684\u5144\u5F1Fother\u662F\u9ED1\u8272\u7684\uFF0C\u5E76\u4E14other\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u53F3\u5B50\u8282\u70B9\u4E3A\u9ED1\u8272\u3002</span>
                        <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">leftRotate</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        other <span class="token operator">=</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// Case 4: node\u7684\u5144\u5F1Fother\u662F\u9ED1\u8272\u7684\uFF1B\u5E76\u4E14other\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u53F3\u5B50\u8282\u70B9\u4EFB\u610F\u989C\u8272</span>
                    <span class="token function">setColor</span><span class="token punctuation">(</span>other<span class="token punctuation">,</span> <span class="token function">colorOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">rightRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">setBlack</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">successor</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> delEntry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> r <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>right<span class="token punctuation">;</span><span class="token comment">//assert r != null;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            r <span class="token operator">=</span> r<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> r<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B8C\u6574\u7684\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> BLACK <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> RED <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> comparator<span class="token punctuation">;</span>
    <span class="token class-name">MyTreeMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        comparator <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">MyTreeMap</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span> comparator<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>comparator <span class="token operator">=</span> comparator<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span><span class="token class-name">V</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            size<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> root<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>comparator <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span>  <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;key = null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> key<span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    p <span class="token operator">=</span>current<span class="token punctuation">;</span>
                    ret <span class="token operator">=</span> k<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        current<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                        <span class="token keyword">return</span> current<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">do</span> <span class="token punctuation">{</span>
                    p <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    ret <span class="token operator">=</span> comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>current<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        current<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                        <span class="token keyword">return</span> value<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                p<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                p<span class="token punctuation">.</span>right <span class="token operator">=</span> e<span class="token punctuation">;</span>
            size<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token function">fixAfterInsertion</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u63D2\u5165\u65B0\u8282\u70B9\u540E\u5E73\u8861\u7EA2\u9ED1\u6811
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> \u65B0\u8282\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fixAfterInsertion</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5C06\u65B0\u63D2\u5165\u8282\u70B9\u8BBE\u7F6E\u4E3A\u7EA2\u8272</span>
        <span class="token function">setRed</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">,</span>g<span class="token punctuation">,</span>u<span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u548C\u7956\u7236\u8282\u70B9\u548C\u53D4\u53D4\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> e<span class="token punctuation">;</span><span class="token comment">//\u65B0\u8282\u70B9</span>
        <span class="token doc-comment comment">/**
         * \u8FD9\u91CC\u901A\u8FC7\u5FAA\u73AF\u4E0D\u65AD\u5411\u4E0A\u5E73\u8861
         */</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            g <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> g<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
                u <span class="token operator">=</span> g<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token comment">//\u60C5\u51B51\uFF1A\u53D4\u53D4\u8282\u70B9\u4E3A\u7EA2\u8272</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u53D4\u53D4\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272</span>
                    current <span class="token operator">=</span> g<span class="token punctuation">;</span><span class="token comment">//\u628A\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u5F53\u524D\u8282\u70B9</span>
                    <span class="token comment">//\u7EE7\u7EED\u5411\u4E0A\u5E73\u8861</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u60C5\u51B52\uFF1A\u5F53\u524D\u8282\u70B9\u4E3A\u53F3\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u9ED1\u8272</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">leftRotate</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u5DE6\u65CB</span>
                    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> p<span class="token punctuation">;</span>
                    p <span class="token operator">=</span> current<span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u548C\u5F53\u524D\u8282\u70B9\u4E92\u6362</span>
                    current <span class="token operator">=</span> tmp<span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u8BBE\u4E3A\u5F53\u524D\u8282\u70B9</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u60C5\u51B53\uFF1A\u5F53\u524D\u8282\u70B9\u4E3A\u5DE6\u8282\u70B9\uFF0C\u53D4\u53D4\u8282\u70B9\u4E3A\u9ED1\u8272</span>
                <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7236\u8282\u70B9\u8BBE\u4E3A\u9ED1\u8272</span>
                <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9\u8BBE\u4E3A\u7EA2\u8272</span>
                <span class="token function">rightRotate</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7956\u7236\u8282\u70B9\u4E3A\u652F\u70B9\u53F3\u65CB</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u76F8\u53CD\u7684\u64CD\u4F5C</span>
                u <span class="token operator">=</span> g<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isRed</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    current <span class="token operator">=</span> g<span class="token punctuation">;</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token function">rightRotate</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tmp <span class="token operator">=</span> p<span class="token punctuation">;</span>
                    p <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    current <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">setBlack</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">setRed</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">leftRotate</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6700\u540E\u5C06\u6839\u8282\u70B9\u8BBE\u7F6E\u4E3A\u7EA2\u8272</span>
        <span class="token function">setBlack</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">entries</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">entries</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">,</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">entries</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>left<span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">entries</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>right<span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">containsValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">=</span> <span class="token function">getEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> entry <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">,</span><span class="token keyword">boolean</span> color<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span>color <span class="token operator">=</span> color<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setRed</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">setColor</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setBlack</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">setColor</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setParent</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">,</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isBlack</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">colorOf</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">==</span> BLACK<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isRed</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isBlack</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">parentOf</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> e <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">colorOf</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> e <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> BLACK <span class="token operator">:</span> e<span class="token punctuation">.</span>color<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u53F3\u65CB
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> \u65CB\u8F6C\u652F\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">rightRotate</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u539F\u652F\u70B9\u7684\u5DE6\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left <span class="token operator">=</span> e<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token comment">//\u539F\u652F\u70B9\u7684\u5DE6\u8282\u70B9\u7684\u53F3\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> leftOfRight <span class="token operator">=</span> left<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token comment">//\u65B0\u65E7\u652F\u70B9\u7684\u66FF\u6362</span>
        left<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u652F\u70B9\u7684\u7236\u8282\u70B9\u4E3A\u6839\u8282\u70B9\u7684\u60C5\u51B5</span>
            root <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u975E\u8DDF\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> left<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5C06\u539F\u652F\u70B9\u53D8\u4E3A\u65B0\u652F\u70B9\u7684\u53F3\u8282\u70B9</span>
        left<span class="token punctuation">.</span>right <span class="token operator">=</span> e<span class="token punctuation">;</span>
        e<span class="token punctuation">.</span>parent <span class="token operator">=</span> left<span class="token punctuation">;</span>
        <span class="token comment">//\u5C06\u65B0\u652F\u70B9\u672A\u65CB\u8F6C\u524D\u7684\u53F3\u8282\u70B9\u53D8\u4E3A\u8F6C\u6362\u540E\u7684\u539F\u652F\u70B9\u7684\u5DE6\u8282\u70B9</span>
        e<span class="token punctuation">.</span>left <span class="token operator">=</span> leftOfRight<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>leftOfRight <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            leftOfRight<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5DE6\u65CB
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> \u652F\u70B9
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">leftRotate</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u652F\u70B9\u7684\u53F3\u5B50\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right <span class="token operator">=</span> e<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token comment">//\u652F\u70B9\u53F3\u5B50\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> rightOfLeft <span class="token operator">=</span> right<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token comment">//\u65B0\u65E7\u652F\u70B9\u7684\u66FF\u6362</span>
        right<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            root <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> right<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                e<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>right <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5C06\u539F\u652F\u70B9\u53D8\u4E3A\u65B0\u652F\u70B9\u7684\u5DE6\u8282\u70B9</span>
        right<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">;</span>
        e<span class="token punctuation">.</span>parent <span class="token operator">=</span> right<span class="token punctuation">;</span>
        <span class="token comment">//\u5C06\u65B0\u652F\u70B9\u7684\u5DE6\u8282\u70B9\u53D8\u4E3A\u5C31\u652F\u70B9\u7684\u53F3\u8282\u70B9</span>
        e<span class="token punctuation">.</span>right <span class="token operator">=</span> rightOfLeft<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rightOfLeft <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            rightOfLeft<span class="token punctuation">.</span>parent <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getDeep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">deep</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">deep</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> deep <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> leftDeep <span class="token operator">=</span> <span class="token function">deep</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> rightDeep <span class="token operator">=</span> <span class="token function">deep</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            deep <span class="token operator">=</span> leftDeep <span class="token operator">&gt;</span> rightDeep <span class="token operator">?</span> leftDeep <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> rightDeep <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> deep<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> delEntry<span class="token punctuation">;</span>
        delEntry <span class="token operator">=</span> <span class="token function">getEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        size<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> delEntry<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                root <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>left <span class="token operator">==</span> delEntry<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u53EA\u6709\u5DE6\u8282\u70B9</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> lc <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lc<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                root <span class="token operator">=</span> lc<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry <span class="token operator">==</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>left <span class="token operator">=</span> lc<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>right <span class="token operator">=</span> lc<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                lc<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u53EA\u6709\u53F3\u8282\u70B9</span>
                <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> rc <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rc<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                root <span class="token operator">=</span> rc<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry <span class="token operator">==</span> p<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                    p<span class="token punctuation">.</span>left <span class="token operator">=</span> rc<span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    p<span class="token punctuation">.</span>right <span class="token operator">=</span> rc<span class="token punctuation">;</span>
                rc<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u6709\u4E24\u4E2A\u8282\u70B9,\u627E\u5230\u540E\u7EE7\u8282\u70B9\uFF0C\u5C06\u503C\u8D4B\u7ED9\u5220\u9664\u8282\u70B9\uFF0C\u7136\u540E\u5C06\u540E\u7EE7\u8282\u70B9\u5220\u9664\u6389\u5373\u53EF</span>
            <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> successor <span class="token operator">=</span> <span class="token function">successor</span><span class="token punctuation">(</span>delEntry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u83B7\u53D6\u5230\u540E\u7EE7\u8282\u70B9</span>
            <span class="token keyword">boolean</span> color <span class="token operator">=</span> successor<span class="token punctuation">.</span>color<span class="token punctuation">;</span>
            <span class="token class-name">V</span> old <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            delEntry<span class="token punctuation">.</span>value <span class="token operator">=</span> successor<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            delEntry<span class="token punctuation">.</span>key <span class="token operator">=</span> successor<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">==</span> successor<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//\u540E\u7EE7\u8282\u70B9\u4E3A\u53F3\u5B50\u8282\u70B9\uFF0C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>successor<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u53F3\u5B50\u8282\u70B9\u6709\u53F3\u5B50\u8282\u70B9</span>
                    delEntry<span class="token punctuation">.</span>right <span class="token operator">=</span> successor<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    successor<span class="token punctuation">.</span>right<span class="token punctuation">.</span>parent <span class="token operator">=</span> delEntry<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u53F3\u5B50\u8282\u70B9\u6CA1\u6709\u5B50\u8282\u70B9</span>
                    delEntry<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                successor<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>color <span class="token operator">==</span> BLACK<span class="token punctuation">)</span>
                <span class="token comment">//fixUpAfterRemove(child,parent);</span>
            <span class="token keyword">return</span> old<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">V</span> old <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>color <span class="token operator">==</span> BLACK<span class="token punctuation">)</span><span class="token comment">//\u5220\u9664\u4E3A\u9ED1\u8272\u65F6\uFF0C\u9700\u8981\u91CD\u65B0\u5E73\u8861\u6811</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">//\u5220\u9664\u8282\u70B9\u7684\u5B50\u8282\u70B9\u53EA\u6709\u53F3\u8282\u70B9</span>
                <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>right<span class="token punctuation">,</span>delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">//\u5220\u9664\u8282\u70B9\u53EA\u6709\u5DE6\u8282\u70B9</span>
                <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span>delEntry<span class="token punctuation">.</span>left<span class="token punctuation">,</span>delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>delEntry<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        delEntry<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        delEntry<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        delEntry<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> old<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getEntry</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> delEntry <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> root<span class="token punctuation">;</span>
        <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>comparator <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> key<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                ret <span class="token operator">=</span> k<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token keyword">else</span><span class="token punctuation">{</span>
                    delEntry <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span>current <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                ret <span class="token operator">=</span> comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">K</span><span class="token punctuation">)</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token keyword">else</span><span class="token punctuation">{</span>
                    delEntry <span class="token operator">=</span> current<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> delEntry<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//node\u8868\u793A\u5F85\u4FEE\u6B63\u7684\u8282\u70B9\uFF0C\u5373\u540E\u7EE7\u8282\u70B9\u7684\u5B50\u8282\u70B9\uFF08\u56E0\u4E3A\u540E\u7EE7\u8282\u70B9\u88AB\u632A\u5230\u5220\u9664\u8282\u70B9\u7684\u4F4D\u7F6E\u53BB\u4E86\uFF09</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">fixUpAfterRemove</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node<span class="token punctuation">,</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>left <span class="token operator">==</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//node\u662F\u5DE6\u5B50\u8282\u70B9\uFF0C\u4E0B\u9762else\u4E0E\u8FD9\u91CC\u7684\u521A\u597D\u76F8\u53CD</span>
                other <span class="token operator">=</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">;</span> <span class="token comment">//node\u7684\u5144\u5F1F\u8282\u70B9</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//case1: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u7EA2\u8272\u7684</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">leftRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    other <span class="token operator">=</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//case2: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u9ED1\u8272\u7684\uFF0C\u4E14other\u7684\u4E24\u4E2A\u5B50\u8282\u70B9\u4E5F\u90FD\u662F\u9ED1\u8272\u7684</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span>other<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> parent<span class="token punctuation">;</span>
                    parent <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">//case3: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u9ED1\u8272\u7684\uFF0C\u4E14other\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u53F3\u5B50\u8282\u70B9\u662F\u9ED1\u8272</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">rightRotate</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        other <span class="token operator">=</span> parent<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">//case4: node\u7684\u5144\u5F1F\u8282\u70B9other\u662F\u9ED1\u8272\u7684\uFF0C\u4E14other\u7684\u53F3\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u5DE6\u5B50\u8282\u70B9\u4EFB\u610F\u989C\u8272</span>
                    <span class="token function">setColor</span><span class="token punctuation">(</span>other<span class="token punctuation">,</span> <span class="token function">colorOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">leftRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//\u4E0E\u4E0A\u9762\u7684\u5BF9\u79F0</span>
                other <span class="token operator">=</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Case 1: node\u7684\u5144\u5F1Fother\u662F\u7EA2\u8272\u7684</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">rightRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    other <span class="token operator">=</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Case 2: node\u7684\u5144\u5F1Fother\u662F\u9ED1\u8272\uFF0C\u4E14other\u7684\u4FE9\u4E2A\u5B50\u8282\u70B9\u90FD\u662F\u9ED1\u8272\u7684</span>
                    <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> parent<span class="token punctuation">;</span>
                    parent <span class="token operator">=</span> <span class="token function">parentOf</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">isBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// Case 3: node\u7684\u5144\u5F1Fother\u662F\u9ED1\u8272\u7684\uFF0C\u5E76\u4E14other\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\uFF0C\u53F3\u5B50\u8282\u70B9\u4E3A\u9ED1\u8272\u3002</span>
                        <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setRed</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">leftRotate</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        other <span class="token operator">=</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// Case 4: node\u7684\u5144\u5F1Fother\u662F\u9ED1\u8272\u7684\uFF1B\u5E76\u4E14other\u7684\u5DE6\u5B50\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u53F3\u5B50\u8282\u70B9\u4EFB\u610F\u989C\u8272</span>
                    <span class="token function">setColor</span><span class="token punctuation">(</span>other<span class="token punctuation">,</span> <span class="token function">colorOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">setBlack</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">rightRotate</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">setBlack</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">successor</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> delEntry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> r <span class="token operator">=</span> delEntry<span class="token punctuation">.</span>right<span class="token punctuation">;</span><span class="token comment">//assert r != null;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            r <span class="token operator">=</span> r<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> r<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>size<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">midIterator</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> set<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">midIterator</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">midIterator</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>left<span class="token punctuation">,</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
            values<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">midIterator</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>right<span class="token punctuation">,</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">clear</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        root <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">clear</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token function">clear</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> size<span class="token punctuation">;</span><span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">V</span> value<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">boolean</span> color <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span><span class="token class-name">V</span> value<span class="token punctuation">,</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> key<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,66),g=[w];function h(E,K){return s(),a("div",null,g)}var B=n(f,[["render",h],["__file","\u57FA\u4E8EJava\u5B9E\u73B0\u7EA2\u9ED1\u6811\u7684\u57FA\u672C\u64CD\u4F5C.html.vue"]]);export{B as default};
