import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o,c,a as n,b as i,d as a,e as s}from"./app.17aaeba5.js";var l="/assets/1.e5ff524a.png",u="/assets/2.f4f01f94.png",r="/assets/3.ac8f65af.png",k="/assets/4.a34490f5.png";const d={},v=a('<p>\u672C\u6587\u901A\u8FC7Groovy\uFF0CJython\uFF0CJavascript(Nashorn)\u548CJRuby\u4E2D\u7684\u4EE3\u7801\u793A\u4F8B\uFF0C\u4ECB\u7ECD\u4E86\u6709\u5173\u5982\u4F55\u4F7F\u7528Apache NiFi\u5904\u7406\u5668ExecuteScript\u5B8C\u6210\u67D0\u4E9B\u4EFB\u52A1\u7684\u5404\u79CD\u65B9\u6CD5\u3002\u672C\u6587\u4E2D\u7684\u5185\u5BB9\u5305\u62EC\uFF1A</p><p><em><strong>Introduction to the NiFi API and FlowFiles</strong></em></p><ul><li>\u4ECE\u4F20\u5165\u961F\u5217\u4E2D\u83B7\u53D6\u6D41\u6587\u4EF6</li><li>\u521B\u5EFA\u65B0\u7684\u6D41\u6587\u4EF6</li><li>\u4F7F\u7528\u6D41\u6587\u4EF6\u5C5E\u6027</li><li>\u4F20\u8F93\u6D41\u6587\u4EF6</li><li>\u65E5\u5FD7</li></ul><p><em><strong>FlowFile I/O and Error Handling</strong></em></p><ul><li>\u8BFB\u53D6\u6D41\u6587\u4EF6</li><li>\u5199\u5165\u6D41\u6587\u4EF6</li><li>\u8BFB\u5199\u6D41\u6587\u4EF6</li><li>\u9519\u8BEF\u5904\u7406</li></ul><p><em><strong>Advanced Features</strong></em></p><ul><li>\u4F7F\u7528\u52A8\u6001\u5C5E\u6027</li><li>\u6DFB\u52A0\u6A21\u5757</li><li>State\u7BA1\u7406</li><li>\u8BBF\u95EEController Service</li></ul><h2 id="introduction-to-the-nifi-api-and-flowfiles" tabindex="-1"><a class="header-anchor" href="#introduction-to-the-nifi-api-and-flowfiles" aria-hidden="true">#</a> Introduction to the NiFi API and FlowFiles</h2><p>ExecuteScript\u662F\u4E00\u79CD\u591A\u529F\u80FD\u5904\u7406\u5668\uFF0C\u5B83\u4F7F\u7528\u6237\u53EF\u4EE5\u4F7F\u7528\u7279\u5B9A\u7684\u7F16\u7A0B\u8BED\u8A00\u7F16\u5199\u81EA\u5B9A\u4E49\u903B\u8F91\uFF0C\u6BCF\u6B21\u89E6\u53D1ExecuteScript\u5904\u7406\u5668\u90FD\u4F1A\u6267\u884C\u7528\u6237\u81EA\u5B9A\u4E49\u903B\u8F91\u3002\u811A\u672C\u63D0\u4F9B\u4E86\u4EE5\u4E0B\u53D8\u91CF\u7ED1\u5B9A\uFF0C\u4EE5\u5141\u8BB8\u8BBF\u95EENiFi\u7EC4\u4EF6\uFF1A</p><p><strong>session</strong>: \u8FD9\u662F\u5BF9\u5206\u914D\u7ED9\u5904\u7406\u5668\u7684ProcessSession\u7684\u5F15\u7528\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A<code>session</code>\u5BF9\u6D41\u6587\u4EF6\u6267\u884C\u64CD\u4F5C\uFF0C\u4F8B\u5982create()\uFF0CputAttribute()\u548Ctransfer()\u4EE5\u53CAread()\u548Cwrite()\u3002</p><p><strong>context</strong>: \u8FD9\u662F\u5BF9\u5904\u7406\u5668\u7684ProcessContext\u7684\u5F15\u7528\u3002\u5B83\u53EF\u7528\u4E8E\u68C0\u7D22\u5904\u7406\u5668\u7684\u5C5E\u6027(properties)\uFF0C\u5173\u7CFB(relationships)\uFF0CController Services\u548CStateManager\u3002</p>',11),m=n("strong",null,"log",-1),b=s(":\u8FD9\u662F\u5BF9\u5904\u7406\u5668\u7684ComponentLog\u7684\u5F15\u7528\u3002\u4F7F\u7528\u5B83\u53EF\u4EE5\u5C06\u6D88\u606F\u8BB0\u5F55\u5230NiFi\uFF0C"),g={href:"http://xn--log-uc0ep96b.info",target:"_blank",rel:"noopener noreferrer"},y=s("\u4F8B\u5982log.info"),f=s("('Hello world\uFF01')"),w=a(`<p><strong>REL_SUCCESS</strong>:\u8FD9\u662F\u4E3A\u5904\u7406\u5668\u5B9A\u4E49\u7684&quot;success&quot;\u5173\u7CFB\u7684\u5F15\u7528\u3002\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5F15\u7528\u7236\u7C7B(ExecuteScript)\u7684\u9759\u6001\u6210\u5458\u6765\u7EE7\u627F\u5B83\uFF0C\u4F46\u662F\u67D0\u4E9B\u5F15\u64CE(\u4F8B\u5982Lua)\u4E0D\u5141\u8BB8\u5F15\u7528\u9759\u6001\u6210\u5458\uFF0C\u56E0\u6B64\u4F7F\u7528\u5B83\u5C31\u5F88\u65B9\u4FBF\u4E86\u3002</p><p><strong>REL_FAILURE</strong>: \u8FD9\u662F\u4E3A\u5904\u7406\u5668\u5B9A\u4E49\u7684&quot;failure&quot;\u5173\u7CFB\u7684\u5F15\u7528\u3002\u4E0E<strong>REL_SUCCESS</strong>\u4E00\u6837\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u5F15\u7528\u7236\u7C7B\u7684\u9759\u6001\u6210\u5458(ExecuteScript)\u6765\u7EE7\u627F\u5B83\uFF0C\u4F46\u662F\u67D0\u4E9B\u5F15\u64CE(\u4F8B\u5982Lua)\u4E0D\u5141\u8BB8\u5F15\u7528\u9759\u6001\u6210\u5458\uFF0C\u56E0\u6B64\u4F7F\u7528\u5B83\u5C31\u5F88\u65B9\u4FBF\u4E86\u3002</p><p><strong>Dynamic Properties</strong>: ExecuteScript\u4E2D\u5B9A\u4E49\u7684\u4EFB\u4F55\u52A8\u6001\u5C5E\u6027,\u90FD\u5C06\u4F5C\u4E3A\u76F8\u5BF9\u5E94\u7684PropertyValue\u5BF9\u8C61\u4F20\u9012\u5230\u811A\u672C\u5F15\u64CE\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u4F60\u4E0D\u4EC5\u53EF\u4EE5\u83B7\u53D6\u5C5E\u6027\u7684String\u503C\uFF0C\u8FD8\u53EF\u4EE5\u6839\u636ENiFi\u8868\u8FBE\u5F0F\u8BED\u8A00\u8BC4\u4F30\u5C5E\u6027\uFF0C\u5C06\u503C\u8F6C\u6362\u4E3A\u9002\u5F53\u7684\u6570\u636E\u7C7B\u578B(\u4F8B\u5982Boolean\u7B49)\uFF0C<strong>\u56E0\u4E3A\u52A8\u6001\u5C5E\u6027\u540D\u79F0\u4F1A\u53D8\u4E3A\u811A\u672C\u7684\u53D8\u91CF\u540D</strong>\uFF0C\u4F60\u5FC5\u987B\u4E86\u89E3\u6240\u9009\u811A\u672C\u5F15\u64CE\u7684\u53D8\u91CF\u547D\u540D\u5C5E\u6027\u3002\u4F8B\u5982\uFF0CGroovy\u4E0D\u5141\u8BB8\u5728\u53D8\u91CF\u540D\u79F0\u4E2D\u4F7F\u7528\u82F1\u6587\u7684\u53E5\u70B9(.)\uFF0C\u56E0\u6B64\u5982\u679C<code>my.property</code>\u662F\u52A8\u6001\u5C5E\u6027\u540D\u79F0\uFF0C\u5219\u4F1A\u53D1\u751F\u9519\u8BEF\u3002</p><p>\u8FD9\u4E9B\u53D8\u91CF\u7684\u4EA4\u4E92\u662F\u901A\u8FC7NiFi Java API\u5B8C\u6210\u7684\uFF0C\u4E0B\u9762\u4F1A\u4ECB\u7ECD\u76F8\u5173\u7684API\u8C03\u7528\uFF0C\u6BD4\u5982\u5BF9\u6D41\u6587\u4EF6\u6267\u884C\u5404\u79CD\u529F\u80FD(\u8BFB/\u5199\u5C5E\u6027\uFF0C\u8DEF\u7531\u5173\u7CFB\uFF0C\u8BB0\u5F55\u7B49)\u3002\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u4E9B\u793A\u4F8B\u53EA\u662Fdemo\uFF0C\u4E0D\u80FD\u6309\u539F\u6837\u8FD0\u884C\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u5DF2\u4F7F\u7528session.get()\u4ECE\u961F\u5217\u4E2D\u68C0\u7D22\u6D41\u6587\u4EF6\uFF0C\u5219\u5FC5\u987B\u5C06\u5176\u8DEF\u7531\u5230\u4E0B\u6E38\u5173\u7CFB\u4E2D\u6216\u5C06\u5176\u5220\u9664\uFF0C\u5426\u5219\u5C06\u53D1\u751F\u9519\u8BEF\u3002</p><h3 id="\u4ECEsession\u4E2D\u83B7\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4ECEsession\u4E2D\u83B7\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6" aria-hidden="true">#</a> \u4ECEsession\u4E2D\u83B7\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6</h3><p>\u793A\u4F8B\u8BF4\u660E: ExecuteScript\u6709\u4F20\u5165\u8FDE\u63A5\uFF0C\u6211\u4EEC\u60F3\u8981\u4ECE\u961F\u5217\u4E2D\u68C0\u7D22\u4E00\u4E2A\u6D41\u6587\u4EF6\u4EE5\u8FDB\u884C\u5904\u7406\u3002</p><p>\u65B9\u6CD5: \u4F7F\u7528\u4F1A\u8BDD\u5BF9\u8C61\u4E2D\u7684get()\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u8FD4\u56DE\u8981\u5904\u7406\u7684\u4E0B\u4E00\u4E2A\u5177\u6709\u6700\u9AD8\u4F18\u5148\u7EA7\u7684FlowFile\u3002\u5982\u679C\u6CA1\u6709FlowFile\u8981\u5904\u7406\uFF0C\u5219\u8BE5\u65B9\u6CD5\u5C06\u8FD4\u56DEnull\u3002\u8BF7\u6CE8\u610F\uFF0C\u5373\u4F7F\u6709FlowFiles\u7A33\u5B9A\u6D41\u5165\u5904\u7406\u5668\uFF0C\u4E5F\u53EF\u80FD\u8FD4\u56DEnull(\u5982\u679C\u5904\u7406\u5668\u6709\u591A\u4E2A\u5E76\u53D1\u4EFB\u52A1\uFF0C\u800C\u5176\u4ED6\u4EFB\u52A1\u5DF2\u7ECF\u68C0\u7D22\u5230FlowFiles\uFF0C\u5219\u53EF\u80FD\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\u3002)\u5982\u679C\u811A\u672C\u8981\u6C42\u6709FlowFile\u624D\u80FD\u7EE7\u7EED\u5904\u7406\uFF0C\u5219\u5F53session.get()\u8FD4\u56DEnull\u65F6\uFF0C\u81EA\u5B9A\u4E49\u7684\u903B\u8F91\u5E94\u7ACB\u5373return\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># All processing code starts at this indent</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// All processing code goes here</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
   <span class="token comment"># All processing code goes here</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4ECE\u4F1A\u8BDD\u4E2D\u83B7\u53D6\u591A\u4E2A\u6D41\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u4F1A\u8BDD\u4E2D\u83B7\u53D6\u591A\u4E2A\u6D41\u6587\u4EF6" aria-hidden="true">#</a> \u4ECE\u4F1A\u8BDD\u4E2D\u83B7\u53D6\u591A\u4E2A\u6D41\u6587\u4EF6</h3><p>\u793A\u4F8B\u8BF4\u660E: ExecuteScript\u6709\u4F20\u5165\u8FDE\u63A5\uFF0C\u6211\u4EEC\u60F3\u8981\u4ECE\u961F\u5217\u4E2D\u68C0\u7D22\u591A\u4E2A\u6D41\u6587\u4EF6\u4EE5\u8FDB\u884C\u5904\u7406\u3002</p><p>\u65B9\u6CD5: \u4F7F\u7528\u4F1A\u8BDD\u5BF9\u8C61\u4E2D\u7684get(maxResults)\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u4ECE\u5DE5\u4F5C\u961F\u5217\u6700\u591A\u8FD4\u56DEmaxResults\u4E2AFlowFiles\u3002\u5982\u679C\u6CA1\u6709FlowFiles\u53EF\u7528\uFF0C\u5219\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u5217\u8868(\u8BE5\u65B9\u6CD5\u4E0D\u8FD4\u56DEnull)\u3002\u6CE8\u610F\uFF1A\u5982\u679C\u5B58\u5728\u591A\u4E2A\u4F20\u5165\u961F\u5217\uFF0C\u5219\u5728\u4E00\u6B21\u547C\u53EB\u4E2D\u8F6E\u8BE2\u6240\u6709\u961F\u5217\u8FD8\u662F\u4EC5\u8F6E\u8BE2\u5355\u4E2A\u961F\u5217\u65B9\u9762\uFF0C\u884C\u4E3A\u662F\u4E0D\u786E\u5B9A\u7684\u3002\u8BDD\u867D\u5982\u6B64\uFF0C\u8FD9\u91CC\u63CF\u8FF0\u4E86\u89C2\u5BDF\u5230\u7684\u884C\u4E3A(\u5BF9\u4E8ENiFi 1.1.0+\u53CA\u4E4B\u524D\u7248\u672C)\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFileList <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFileList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   flowFileList<span class="token punctuation">.</span>each <span class="token punctuation">{</span> flowFile <span class="token operator">-&gt;</span> 
      <span class="token comment">// Process each FlowFile here</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFileList <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> flowFileList<span class="token punctuation">.</span>isEmpty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> flowFile <span class="token keyword">in</span> flowFileList<span class="token punctuation">:</span> 
         <span class="token comment"># Process each FlowFile here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>flowFileList <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFileList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token function">each</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">var</span> flowFile <span class="token keyword">in</span> flowFileList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      <span class="token comment">// Process each FlowFile here</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFileList <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token operator">!</span><span class="token punctuation">(</span>flowFileList<span class="token punctuation">.</span>isEmpty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   flowFileList<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token punctuation">{</span> <span class="token operator">|</span>flowFile<span class="token operator">|</span> 
       <span class="token comment"># Process each FlowFile here</span>
   <span class="token punctuation">}</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u521B\u5EFA\u4E00\u4E2A\u6D41\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u4E00\u4E2A\u6D41\u6587\u4EF6" aria-hidden="true">#</a> \u521B\u5EFA\u4E00\u4E2A\u6D41\u6587\u4EF6</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528session\u5BF9\u8C61\u4E2D\u7684create()\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684FlowFile\u5BF9\u8C61\uFF0C\u4F60\u53EF\u4EE5\u5728\u8BE5\u5BF9\u8C61\u4E0A\u8FDB\u884C\u8FDB\u4E00\u6B65\u5904\u7406</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// Additional processing here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>create<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token comment"># Additional processing here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Additional processing here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>create<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># Additional processing here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EE7\u627F\u7236flowfile\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684flowfile" tabindex="-1"><a class="header-anchor" href="#\u7EE7\u627F\u7236flowfile\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684flowfile" aria-hidden="true">#</a> \u7EE7\u627F\u7236FlowFIle\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684FlowFIle</h3><p>\u793A\u4F8B\u8BF4\u660E\uFF1A\u6211\u4EEC\u60F3\u65B0\u5EFA\u4E00\u4E2A\u6D41\u6587\u4EF6\uFF0C\u8FD9\u4E2A\u6D41\u6587\u4EF6\u7EE7\u627F\u4E86\u5176\u4ED6\u6D41\u6587\u4EF6</p><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528session\u5BF9\u8C61\u4E2D\u7684create(parentFlowFile)\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u91C7\u7528\u7236FlowFile\u5F15\u7528\uFF0C\u5E76\u8FD4\u56DE\u65B0\u7684\u5B50FlowFile\u5BF9\u8C61\u3002\u65B0\u521B\u5EFA\u7684FlowFile\u5C06\u7EE7\u627F\u7236\u5BF9\u8C61\u7684\u9664UUID\u4EE5\u5916\u7684\u6240\u6709\u5C5E\u6027(attribute)\u3002(\u6B64\u65B9\u6CD5\u5C06\u81EA\u52A8\u751F\u6210Provenance FORK\u4E8B\u4EF6\u6216Provenance JOIN\u4E8B\u4EF6\uFF0C\u5177\u4F53\u53D6\u51B3\u4E8E\u5728\u63D0\u4EA4ProcessSession\u4E4B\u524D\u662F\u5426\u4ECE\u540C\u4E00\u7236\u5BF9\u8C61\u751F\u6210\u4E86\u5176\u4ED6FlowFiles\u3002)</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
newFlowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span>
<span class="token comment">// Additional processing here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    newFlowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>create<span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span> 
    <span class="token comment"># Additional processing here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> newFlowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">// Additional processing here</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
  newFlowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>create<span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span>
  <span class="token comment"># Additional processing here</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E3A\u6D41\u6587\u4EF6\u589E\u52A0\u4E00\u4E2A\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u6D41\u6587\u4EF6\u589E\u52A0\u4E00\u4E2A\u5C5E\u6027" aria-hidden="true">#</a> \u4E3A\u6D41\u6587\u4EF6\u589E\u52A0\u4E00\u4E2A\u5C5E\u6027</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528session\u5BF9\u8C61\u4E2D\u7684putAttribute(flowFile\uFF0CattributeKey\uFF0CattributeValue)\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u4F7F\u7528\u7ED9\u5B9A\u7684\u952E/\u503C\u5BF9\u66F4\u65B0\u7ED9\u5B9A\u7684FlowFile\u7684\u5C5E\u6027\u3002</p><p>\u6CE8\u610F\uFF1AUUID\u5C5E\u6027\u5BF9\u4E8EFlowFile\u662F\u56FA\u5B9A\u7684\uFF0C\u65E0\u6CD5\u4FEE\u6539\uFF1B</p><p>\u6CE8\u610F\uFF1AFlowFile\u5BF9\u8C61\u662F\u4E0D\u53EF\u53D8\u7684\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u5982\u679C\u4F60\u901A\u8FC7API\u66F4\u65B0FlowFile\u7684\u5C5E\u6027(\u6216\u4EE5\u5176\u4ED6\u65B9\u5F0F\u66F4\u6539)\uFF0C\u5219\u4F1A\u83B7\u5F97\u5BF9FlowFile\u65B0\u7248\u672C\u7684\u65B0\u5F15\u7528(\u8FD4\u56DE\u7684\u5F15\u7528\u6307\u5411\u7684\u662F\u4E00\u4E2A\u65B0\u5BF9\u8C61)\u3002\u5728\u5C06FlowFiles\u4F20\u8F93\u5230\u5173\u7CFB\u65F6\uFF0C\u8FD9\u975E\u5E38\u91CD\u8981\u3002\u4F60\u5FC5\u987B\u4FDD\u7559\u5BF9FlowFile\u6700\u65B0\u7248\u672C\u7684\u5F15\u7528\uFF0C\u5E76\u4E14\u5FC5\u987B\u4F20\u8F93\u6216\u5220\u9664\u4ECEsession\u68C0\u7D22\u6216\u7531session\u521B\u5EFA\u7684\u6240\u6709FlowFiles\u7684\u6700\u65B0\u7248\u672C\uFF0C\u5426\u5219\u5728\u6267\u884C\u65F6\u4F1A\u51FA\u73B0\u9519\u8BEF\u3002\u901A\u5E38\uFF0C\u7528\u4E8E\u5B58\u50A8FlowFile\u5F15\u7528\u7684\u53D8\u91CF\u5C06\u88AB\u66F4\u6539FlowFile\u7684\u65B9\u6CD5\u8FD4\u56DE\u7684\u6700\u65B0\u7248\u672C\u8986\u76D6(\u4E2D\u95F4\u7684FlowFile\u5F15\u7528\u5C06\u88AB\u81EA\u52A8\u4E22\u5F03)\u3002</p><p>\u6CE8\u610F\uFF1AputAttribute\u65B9\u6CD5\u4F7F\u7528String\u4F5C\u4E3A\u503C\uFF1B\u5982\u679C\u4F60\u6709\u4E00\u4E2AObject\uFF0C\u5219\u5FC5\u987B\u5C06\u5176\u5E8F\u5217\u5316\u4E3AString\u3002</p><p>\u6CE8\u610F\uFF1A\u5982\u679C\u8981\u6DFB\u52A0\u591A\u4E2A\u5C5E\u6027\uFF0C\u6700\u597D\u521B\u5EFA\u4E00\u4E2AMap\u5E76\u6539\u7528putAllAttributes()(\u6709\u5173\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u89C1\u4E0B\u4E00\u8282)\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">putAttribute</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token string">&#39;myAttr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myValue&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>putAttribute<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token string">&#39;myAttr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myValue&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">putAttribute</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token string">&#39;myAttr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myValue&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
   flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>putAttribute<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;myAttr&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;myValue&#39;</span></span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E3A\u6D41\u6587\u4EF6\u6DFB\u52A0\u591A\u4E2A\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u6D41\u6587\u4EF6\u6DFB\u52A0\u591A\u4E2A\u5C5E\u6027" aria-hidden="true">#</a> \u4E3A\u6D41\u6587\u4EF6\u6DFB\u52A0\u591A\u4E2A\u5C5E\u6027</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528\u4F1A\u8BDD\u5BF9\u8C61\u4E2D\u7684putAllAttributes(flowFile\uFF0CattributeMap)\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u4F7F\u7528\u7ED9\u5B9AMap\u4E2D\u7684\u952E/\u503C\u5BF9\u66F4\u65B0\u7ED9\u5B9AFlowFile\u7684\u5C5E\u6027\u3002</p><p>\u6CE8\u610F\uFF1AUUID\u5C5E\u6027\u5BF9\u4E8EFlowFile\u662F\u56FA\u5B9A\u7684\uFF0C\u65E0\u6CD5\u4FEE\u6539\uFF1B</p><p>\u8FD9\u91CC\u7684\u6280\u672F\u662F\u4E3A\u8981\u66F4\u65B0\u7684\u5C5E\u6027\u952E/\u503C\u5BF9\u521B\u5EFA\u4E00\u4E2AMap(\u5728Jython\u4E2D\u53C8\u79F0\u4E3Adictionary\uFF0C\u5728JRuby\u4E2D\u4E3Ahash)\uFF0C\u7136\u540E\u5728\u5176\u4E0A\u8C03\u7528putAllAttributes()\u3002\u8FD9\u6BD4\u4E3A\u6BCF\u4E2A\u952E/\u503C\u5BF9\u8C03\u7528putAttribute()\u66F4\u4E3A\u6709\u6548\u3002(\u4E0A\u4E00\u8282\u63D0\u8FC7FlowFIle\u662F\u4E0D\u53EF\u53D8\u7684)</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>attrMap <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;myAttr1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myAttr2&#39;</span><span class="token punctuation">:</span> Integer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">putAllAttributes</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> attrMap<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>attrMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;myAttr1&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;myAttr2&#39;</span><span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>putAllAttributes<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> attrMap<span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> number2 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> attrMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;myAttr1&#39;</span><span class="token operator">:</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;myAttr2&#39;</span><span class="token operator">:</span> number2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">putAllAttributes</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> attrMap<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>attrMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;myAttr1&#39;</span></span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">&#39;1&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;myAttr2&#39;</span></span> <span class="token operator">=&gt;</span> <span class="token number">2.</span>to_s<span class="token punctuation">}</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
    flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>putAllAttributes<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> attrMap<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4ECE\u6D41\u6587\u4EF6\u8BFB\u53D6\u4E00\u4E2A\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u6D41\u6587\u4EF6\u8BFB\u53D6\u4E00\u4E2A\u5C5E\u6027" aria-hidden="true">#</a> \u4ECE\u6D41\u6587\u4EF6\u8BFB\u53D6\u4E00\u4E2A\u5C5E\u6027</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528FlowFile\u5BF9\u8C61\u7684getAttribute(attributeKey)\u65B9\u6CD5. \u6B64\u65B9\u6CD5\u8FD4\u56DE\u7ED9\u5B9AattributeKey\u7684\u5B57\u7B26\u4E32\u503C\uFF0C\u5982\u679C\u627E\u4E0D\u5230attributeKey\uFF0C\u5219\u8FD4\u56DEnull\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
myAttr <span class="token operator">=</span> flowFile<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    myAttr <span class="token operator">=</span> flowFile<span class="token punctuation">.</span>getAttribute<span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> myAttr <span class="token operator">=</span> flowFile<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;filename&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
    myAttr <span class="token operator">=</span> flowFile<span class="token punctuation">.</span>getAttribute<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;filename&#39;</span></span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6\u7684\u6240\u6709\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6\u7684\u6240\u6709\u5C5E\u6027" aria-hidden="true">#</a> \u83B7\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6\u7684\u6240\u6709\u5C5E\u6027</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528FlowFile\u5BF9\u8C61\u4E2D\u7684getAttributes()\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u8FD4\u56DE\u5305\u542B\u5B57\u7B26\u4E32\u952E\u548C\u5B57\u7B26\u4E32\u503C\u7684Map\uFF0C\u8868\u793A\u6D41\u6587\u4EF6\u7684\u5C5E\u6027\u7684\u952E/\u503C\u5BF9\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
flowFile<span class="token punctuation">.</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>each <span class="token punctuation">{</span> key<span class="token punctuation">,</span>value <span class="token operator">-&gt;</span>
 <span class="token comment">// Do something with the key/value pair</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> flowFile<span class="token punctuation">.</span>getAttributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>iteritems<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
       <span class="token comment"># Do something with key and/or value</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> attrs <span class="token operator">=</span> flowFile<span class="token punctuation">.</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token function">each</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">var</span> attrKey <span class="token keyword">in</span> attrs<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      <span class="token comment">// Do something with attrKey (the key) and/or attrs[attrKey] (the value)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
    flowFile<span class="token punctuation">.</span>getAttributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token punctuation">{</span> <span class="token operator">|</span>key<span class="token punctuation">,</span>value<span class="token operator">|</span> 
       <span class="token comment"># Do something with key and/or value</span>
   <span class="token punctuation">}</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C06flowfile\u8DEF\u7531\u4F20\u9001\u5230\u4E00\u4E2Arelationship" tabindex="-1"><a class="header-anchor" href="#\u5C06flowfile\u8DEF\u7531\u4F20\u9001\u5230\u4E00\u4E2Arelationship" aria-hidden="true">#</a> \u5C06FlowFIle\u8DEF\u7531\u4F20\u9001\u5230\u4E00\u4E2ARelationShip</h3><p>\u793A\u4F8B\u8BF4\u660E\uFF1A \u5728\u5904\u7406\u6D41\u6587\u4EF6(\u65B0\u7684\u6216\u4F20\u5165\u7684)\u4E4B\u540E\uFF0C\u60A8\u5E0C\u671B\u5C06\u6D41\u6587\u4EF6\u4F20\u8F93\u5230\u5173\u7CFB(&quot;success&quot;\u6216&quot;failure&quot;)\u3002</p><p>\u6CE8\u610F\uFF1AExecuteScript\u5C06\u5728\u6BCF\u6B21\u6267\u884C\u7ED3\u675F\u65F6\u6267\u884Csession.commit\uFF0C\u4EE5\u786E\u4FDD\u63D0\u4EA4\u64CD\u4F5C\u3002\u5728\u811A\u672C\u4E2D\u60A8\u4E0D\u9700\u8981(\u4E5F\u4E0D\u5E94\u8BE5)\u6267\u884Csession.commit\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
<span class="token comment">// Processing occurs here</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>errorOccurred<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_FAILURE<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
  session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_SUCCESS<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># All processing code starts at this indent</span>
    <span class="token keyword">if</span> errorOccurred<span class="token punctuation">:</span>
        session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_FAILURE<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_SUCCESS<span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// All processing code goes here</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>errorOccurred<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_FAILURE</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token punctuation">{</span>
     session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_SUCCESS</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
   <span class="token comment"># All processing code goes here</span>
   <span class="token keyword">if</span> errorOccurred
     session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_FAILURE</span><span class="token punctuation">)</span>
   <span class="token keyword">else</span>
     session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_SUCCESS</span><span class="token punctuation">)</span>
   <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B-\u6253\u5370\u65E5\u5FD7" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B-\u6253\u5370\u65E5\u5FD7" aria-hidden="true">#</a> \u8BBE\u7F6E\u65E5\u5FD7\u7EA7\u522B\uFF0C\u6253\u5370\u65E5\u5FD7</h3><p>\u65B9\u6CD5\uFF1A\u5C06\u65E5\u5FD7\u53D8\u91CFlog\u4E0Ewarn()\u3001trace()\u3001debug()\u3001info()\u6216error()\u65B9\u6CD5\u4E00\u8D77\u4F7F\u7528\u3002\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u4EE5\u91C7\u7528\u5355\u4E2A\u5B57\u7B26\u4E32\uFF0C\u6216\u8005\u4E00\u4E2A\u5B57\u7B26\u4E32\u540E\u8DDF\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4\uFF0C\u6216\u8005\u4E00\u4E2A\u5B57\u7B26\u4E32\u540E\u8DDF\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4\u540E\u8DDF\u4E00\u4E2A\u53EF\u629B\u51FA\u5BF9\u8C61\u3002\u7B2C\u4E00\u4E2A\u7528\u4E8E\u8F93\u51FA\u7B80\u5355\u7684\u65E5\u5FD7\u6D88\u606F\u3002\u7B2C\u4E8C\u79CD\u662F\u5F53\u60A8\u6709\u4E00\u4E9B\u8981\u8BB0\u5F55\u7684\u52A8\u6001\u5BF9\u8C61/\u503C\u65F6\u4F7F\u7528\u3002\u8981\u5728\u5B57\u7B26\u4E32\u4E2D\u5F15\u7528\u5B83\u4EEC\uFF0C\u8BF7\u5728\u6D88\u606F\u4E2D\u4F7F\u7528<code>{}</code>\u3002\u8FD9\u4E9B<code>{}</code>\u4E0E\u5BF9\u8C61\u6570\u7EC4\u662F\u6309\u7167\u987A\u5E8F\u5BF9\u5E94\u7684\uFF0C\u6BD4\u5982&quot;Found These things:{}{}{}{}&quot;\uFF0C\u5BF9\u8C61\u6570\u7EC4\u4E3A[&#39;Hello&#39;\uFF0C1\uFF0Ctrue]\uFF0C\u5219\u8BB0\u5F55\u7684\u6D88\u606F\u5C06\u4E3A&quot;Found These things:Hello 1 true&quot;\u3002\u65E5\u5FD7\u8BB0\u5F55\u65B9\u6CD5\u7684\u7B2C\u4E09\u79CD\u5F62\u5F0F\u8FD8\u91C7\u7528\u4E00\u4E2A\u53EF\u629B\u51FA\u7684\u53C2\u6570\uFF0C\u5F53\u6355\u83B7\u5230\u5F02\u5E38\u5E76\u5E0C\u671B\u5BF9\u5176\u8FDB\u884C\u65E5\u5FD7\u8BB0\u5F55\u65F6\u975E\u5E38\u6709\u7528\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Found these things: {} {} {}&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">]</span> <span class="token keyword">as</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> java<span class="token punctuation">.</span>lang <span class="token keyword">import</span> Object
<span class="token keyword">from</span> jarray <span class="token keyword">import</span> array
objArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">]</span>
javaArray <span class="token operator">=</span> array<span class="token punctuation">(</span>objArray<span class="token punctuation">,</span> Object<span class="token punctuation">)</span>
log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;Found these things: {} {} {}&#39;</span><span class="token punctuation">,</span> javaArray<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ObjectArrayType <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object[]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> objArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectArrayType</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
objArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
objArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
objArray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Found these things: {} {} {}&#39;</span><span class="token punctuation">,</span> objArray<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Found these things: {} {} {}&#39;</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;Hello&#39;</span></span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_java<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="introduction-to-flowfile-i-o" tabindex="-1"><a class="header-anchor" href="#introduction-to-flowfile-i-o" aria-hidden="true">#</a> Introduction to FlowFile I/O</h2><p>NiFi\u4E2D\u7684\u6D41\u6587\u4EF6\u7531\u4E24\u4E2A\u4E3B\u8981\u7EC4\u4EF6\u7EC4\u6210\uFF1A\u5C5E\u6027\u548C\u5185\u5BB9\u3002\u5C5E\u6027\u662F\u5173\u4E8E\u5185\u5BB9/\u6D41\u6587\u4EF6\u7684\u5143\u6570\u636E\uFF0C\u6211\u4EEC\u5728\u4E0A\u4E00\u7AE0\u770B\u5230\u4E86\u5982\u4F55\u4F7F\u7528ExecuteScript\u6765\u64CD\u4F5C\u5B83\u4EEC\u3002\u6D41\u6587\u4EF6\u7684\u5185\u5BB9\u53EA\u662F\u5B57\u8282\u7684\u96C6\u5408\uFF0C\u800C\u6CA1\u6709\u56FA\u6709\u7684\u7ED3\u6784\u3001\u6A21\u5F0F\u3001\u683C\u5F0F\u7B49\u3002\u5404\u79CDNiFi\u5904\u7406\u5668\u5047\u5B9A\u4F20\u5165\u7684\u6D41\u6587\u4EF6\u5177\u6709\u7279\u5B9A\u7684\u6A21\u5F0F/\u683C\u5F0F(\u6216\u6839\u636E\u8BF8\u5982mime.type\u7C7B\u578B\u6216\u8005\u4EE5\u5176\u4ED6\u65B9\u5F0F\u63A8\u65AD)\u3002\u7136\u540E\uFF0C\u8FD9\u4E9B\u5904\u7406\u5668\u53EF\u4EE5\u57FA\u4E8E\u6587\u4EF6\u786E\u5B9E\u5177\u6709\u8BE5\u683C\u5F0F\u7684\u5047\u8BBE\u5BF9\u5185\u5BB9\u8FDB\u884C\u64CD\u4F5C(\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u901A\u5E38\u4F1A\u8F6C\u79FB\u5230&quot;failure&quot;\u5173\u7CFB)\u3002\u5904\u7406\u5668\u4E5F\u53EF\u4EE5\u4EE5\u6307\u5B9A\u7684\u683C\u5F0F\u8F93\u51FA\u6D41\u6587\u4EF6\uFF0C\u5177\u4F53\u7684\u53EF\u4EE5\u53C2\u8003NIFI\u6587\u6863\u3002</p><p>\u6D41\u6587\u4EF6\u5185\u5BB9\u7684\u8F93\u5165\u548C\u8F93\u51FA(I/O)\u662F\u901A\u8FC7ProcessSession API\u63D0\u4F9B\u7684\uFF0C\u56E0\u6B64ExecuteScript\u7684&quot;session&quot;\u53D8\u91CF\u4E5F\u662F\u5982\u6B64\u3002\u4E00\u79CD\u673A\u5236\u662F\u5C06\u56DE\u8C03\u5BF9\u8C61\u4F20\u9012\u5230session.read()(session.write())\u3002FlowFile\u5BF9\u8C61\u4F1A\u521B\u5EFAInputStream\u548C/\u6216OutputStream\uFF0C\u7136\u540E\u4F20\u5165InputStream\u548C/\u6216OutputStream\u5F15\u7528\uFF0C\u4F7F\u7528\u76F8\u5E94\u7684\u56DE\u8C03\u63A5\u53E3\u8C03\u7528\u56DE\u8C03\u5BF9\u8C61\u3002</p><p>\u6709\u4E09\u4E2A\u4E3B\u8981\u56DE\u8C03\u63A5\u53E3\uFF0C\u6BCF\u4E2A\u90FD\u6709\u81EA\u5DF1\u7684\u7528\u9014\u6848\u4F8B\uFF1A</p><p><strong>InputStreamCallback</strong></p><p>session.read(flow file\uFF0CinputStreamCallback)\u65B9\u6CD5\u4F7F\u7528\u6B64\u63A5\u53E3\uFF0C\u63A5\u53E3\u65B9\u6CD5\u9700\u8981\u63D0\u4F9B\u8BFB\u53D6\u6D41\u6587\u4EF6\u5185\u5BB9\u7684InputStream\u3002\u63A5\u53E3\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOExceptionvoid</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684InputStream\u5C06\u81EA\u52A8\u7BA1\u7406\u6253\u5F00\u548C\u5173\u95ED\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u624B\u52A8\u5173\u95ED\u8BE5\u6D41\u3002\u5982\u679C\u4F60\u53EA\u662F\u8BFB\u53D6\u6D41\u6587\u4EF6\u5185\u5BB9\uFF0C\u90A3\u5C31\u4F7F\u7528\u8FD9\u4E2A\u56DE\u8C03\u63A5\u53E3\u3002</p><p><strong>OutputStreamCallback</strong></p><p>session.write(flow file\uFF0CoutputStreamCallback)\u65B9\u6CD5\u4F7F\u7528\u6B64\u63A5\u53E3\uFF0C\u63A5\u53E3\u65B9\u6CD5\u9700\u8981\u63D0\u4F9B\u5199\u6D41\u6587\u4EF6\u5185\u5BB9\u7684OutputStream\u3002\u63A5\u53E3\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> out<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684OutputStream\u5C06\u81EA\u52A8\u7BA1\u7406\u6253\u5F00\u548C\u5173\u95ED\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u624B\u52A8\u5173\u95ED\u8BE5\u6D41\u3002</p><p><strong>StreamCallback</strong></p><p>session.write(flowFile, streamCallback) \u65B9\u6CD5\u4F7F\u7528\u6B64\u63A5\u53E3\uFF0C\u63A5\u53E3\u65B9\u6CD5\u9700\u8981\u63D0\u4F9B\u8BFB\u5199\u6D41\u6587\u4EF6\u5185\u5BB9\u7684InputStream\u548COutputStream\u3002\u63A5\u53E3\u53EA\u6709\u4E00\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">,</span> <span class="token class-name">OutputStream</span> out<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684InputStream\u3001OutputStream\u5C06\u81EA\u52A8\u7BA1\u7406\u6253\u5F00\u548C\u5173\u95ED\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u624B\u52A8\u5173\u95ED\u6D41\u3002</p><p>\u7531\u4E8E\u8FD9\u4E9B\u56DE\u8C03\u662FJava\u5BF9\u8C61\uFF0C\u811A\u672C\u5FC5\u987B\u521B\u5EFA\u4E00\u4E2A\u5E76\u5C06\u5176\u4F20\u9012\u5230session\u65B9\u6CD5\u4E2D\uFF0C\u5177\u4F53\u4F1A\u5728\u793A\u4F8B\u4E2D\u52A0\u4EE5\u8BF4\u660E\u3002\u8FD8\u6709\u5176\u4ED6\u8BFB\u53D6\u548C\u5199\u5165\u6D41\u6587\u4EF6\u7684\u65B9\u6CD5\uFF0C\u5305\u62EC\uFF1A</p><ul><li>\u4F7F\u7528session.read(flowFile)\u8FD4\u56DEInputStream\u3002\u8FD9\u51CF\u5C11\u4E86\u5BF9inputstreamback\u7684\u9700\u6C42\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2A\u53EF\u4EE5\u4ECE\u6D41\u6587\u4EF6\u4E2D\u8BFB\u53D6\u5185\u5BB9\u7684InputStream\u3002\u4F5C\u4E3A\u4EA4\u6362\uFF0C\u60A8\u5FC5\u987B\u624B\u52A8\u7BA1\u7406(\u4F8B\u5982\u5173\u95ED)InputStream\u3002</li><li>\u4F7F\u7528session.importFrom(inputStream\uFF0CflowFile)\u4ECEinputStream\u5199\u5165\u6D41\u6587\u4EF6\u3002\u8FD9\u51CF\u5C11\u4E86\u5BF9OutputStreamCallback\u7684\u9700\u6C42\u3002</li></ul><h3 id="\u4F7F\u7528\u56DE\u8C03\u8BFB\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6\u7684\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u56DE\u8C03\u8BFB\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6\u7684\u5185\u5BB9" aria-hidden="true">#</a> \u4F7F\u7528\u56DE\u8C03\u8BFB\u53D6\u4E00\u4E2A\u6D41\u6587\u4EF6\u7684\u5185\u5BB9</h3><p>\u65B9\u6CD5\uFF1A \u4F7F\u7528session\u5BF9\u8C61\u4E2D\u7684read(flowFile\uFF0CinputStreamCallback)\u65B9\u6CD5\u3002\u9700\u8981\u5C06InputStreamCallback\u5BF9\u8C61\u4F20\u9012\u7ED9read()\u65B9\u6CD5\u3002\u8BF7\u6CE8\u610F\uFF0C\u7531\u4E8EInputStreamCallback\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u56E0\u6B64\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5185\u5BB9\u4EC5\u5BF9\u8BE5\u5BF9\u8C61\u53EF\u89C1\u3002\u5982\u679C\u9700\u8981\u5728read()\u65B9\u6CD5\u4E4B\u5916\u4F7F\u7528\u6570\u636E\uFF0C\u8BF7\u4F7F\u7528\u5168\u5C40\u8303\u56F4\u66F4\u5E7F\u7684\u53D8\u91CF\u3002</p><p>\u4E0B\u9762\u8FD9\u4E9B\u793A\u4F8B\u5C06\u4F20\u5165\u6D41\u6587\u4EF6\u7684\u5168\u90E8\u5185\u5BB9\u5B58\u50A8\u5230\u4E00\u4E2AString\u4E2D(\u4F7F\u7528Apache Commons\u7684IOUtils\u7C7B)\u3002</p><p>\u6CE8\u610F\uFF1A\u5BF9\u4E8E\u5927\u578B\u6D41\u6587\u4EF6\uFF0C\u8FD9\u4E0D\u662F\u6700\u4F73\u65B9\u6CD5\uFF1B\u60A8\u5E94\u8BE5\u53EA\u8BFB\u53D6\u6240\u9700\u7684\u6570\u636E\uFF0C\u5E76\u8FDB\u884C\u9002\u5F53\u7684\u5904\u200B\u200B\u7406\u3002\u6BD4\u5982\u5BF9\u4E8E\u7C7B\u4F3CSplitText\u7684\u4E1C\u897F\uFF0C\u60A8\u53EF\u4EE5\u4E00\u6B21\u8BFB\u5165\u4E00\u884C\u5E76\u5728InputStreamCallback\u4E2D\u5BF9\u5176\u8FDB\u884C\u5904\u7406\uFF0C\u6216\u8005\u4F7F\u7528\u524D\u9762\u63D0\u5230\u7684session.read(flowFile)\u65B9\u6CD5\u6765\u83B7\u53D6\u8981\u5728\u56DE\u8C03\u5916\u90E8\u4F7F\u7528\u7684InputStream\u5F15\u7528\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOUtils
<span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span><span class="token keyword">return</span>
<span class="token keyword">def</span> text <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token comment">// Cast a closure with an inputStream parameter to InputStreamCallback</span>
session<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token punctuation">{</span>inputStream <span class="token operator">-&gt;</span>
  text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span>
 <span class="token comment">// Do something with text here</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> InputStreamCallback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io <span class="token keyword">import</span> IOUtils
<span class="token keyword">from</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset <span class="token keyword">import</span> StandardCharsets
<span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>io <span class="token keyword">import</span> InputStreamCallback

<span class="token comment"># Define a subclass of InputStreamCallback for use in session.read()</span>
<span class="token keyword">class</span> <span class="token class-name">PyInputStreamCallback</span><span class="token punctuation">(</span>InputStreamCallback<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
  <span class="token keyword">def</span> <span class="token function">process</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputStream<span class="token punctuation">)</span><span class="token punctuation">:</span>
    text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span>toString<span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span>
    <span class="token comment"># Do something with text here</span>
<span class="token comment"># end class</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    session<span class="token punctuation">.</span>read<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> PyInputStreamCallback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> InputStreamCallback <span class="token operator">=</span>  Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.nifi.processor.io.InputStreamCallback&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> IOUtils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.commons.io.IOUtils&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> StandardCharsets <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;java.nio.charset.StandardCharsets&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// Create a new InputStreamCallback, passing in a function to define the interface method</span>
  session<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">InputStreamCallback</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">inputStream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token comment">// Do something with text here</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOUtils
java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamCallback

<span class="token comment"># Define a subclass of InputStreamCallback for use in session.read()</span>
<span class="token keyword">class</span> <span class="token class-name">JRubyInputStreamCallback</span>
  <span class="token keyword">include</span> InputStreamCallback
  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">process</span></span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span>
    text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span>toString<span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span>
    <span class="token comment"># Do something with text here</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
jrubyInputStreamCallback <span class="token operator">=</span> <span class="token class-name">JRubyInputStreamCallback</span><span class="token punctuation">.</span><span class="token keyword">new</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
  session<span class="token punctuation">.</span>read<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> jrubyInputStreamCallback<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u56DE\u8C03\u5411\u6D41\u6587\u4EF6\u5199\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u56DE\u8C03\u5411\u6D41\u6587\u4EF6\u5199\u5185\u5BB9" aria-hidden="true">#</a> \u4F7F\u7528\u56DE\u8C03\u5411\u6D41\u6587\u4EF6\u5199\u5185\u5BB9</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528session\u5BF9\u8C61\u4E2D\u7684write(flowFile\uFF0CoutputStreamCallback)\u65B9\u6CD5\u3002\u9700\u8981\u5C06OutputStreamCallback\u5BF9\u8C61\u4F20\u9012\u7ED9write()\u65B9\u6CD5\u3002</p><p>\u6CE8\u610F\uFF0C\u7531\u4E8EOutputStreamCallback\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u56E0\u6B64\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5185\u5BB9\u4EC5\u5BF9\u8BE5\u5BF9\u8C61\u53EF\u89C1\u3002\u5982\u679C\u9700\u8981\u5728write()\u65B9\u6CD5\u4E4B\u5916\u4F7F\u7528\u6570\u636E\uFF0C\u8BF7\u4F7F\u7528\u5168\u5C40\u8303\u56F4\u66F4\u5E7F\u7684\u53D8\u91CF\u3002</p><p>\u8FD9\u4E9B\u793A\u4F8B\u5C06\u793A\u4F8B\u5B57\u7B26\u4E32\u5199\u5165flowFile\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOUtils
<span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets

flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
<span class="token keyword">def</span> text <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span>
<span class="token comment">// Cast a closure with an outputStream parameter to OutputStreamCallback</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token punctuation">{</span>outputStream <span class="token operator">-&gt;</span>
  outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> OutputStreamCallback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io <span class="token keyword">import</span> IOUtils
<span class="token keyword">from</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset <span class="token keyword">import</span> StandardCharsets
<span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>io <span class="token keyword">import</span> OutputStreamCallback

<span class="token comment"># Define a subclass of OutputStreamCallback for use in session.write()</span>
<span class="token keyword">class</span> <span class="token class-name">PyOutputStreamCallback</span><span class="token punctuation">(</span>OutputStreamCallback<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
  <span class="token keyword">def</span> <span class="token function">process</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">:</span>
    outputStream<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># end class</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>write<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> PyOutputStreamCallback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> OutputStreamCallback <span class="token operator">=</span>  Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.nifi.processor.io.OutputStreamCallback&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> IOUtils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.commons.io.IOUtils&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> StandardCharsets <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;java.nio.charset.StandardCharsets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// Create a new OutputStreamCallback, passing in a function to define the interface method</span>
  flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">OutputStreamCallback</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">outputStream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOUtils
java_import java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets
java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStreamCallback

<span class="token comment"># Define a subclass of OutputStreamCallback for use in session.write()</span>
<span class="token keyword">class</span> <span class="token class-name">JRubyOutputStreamCallback</span>
  <span class="token keyword">include</span> OutputStreamCallback
  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">process</span></span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span>
    outputStream<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello World!&quot;</span></span><span class="token punctuation">.</span>to_java<span class="token punctuation">.</span>getBytes<span class="token punctuation">(</span>StandardCharsets<span class="token double-colon punctuation">::</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
jrubyOutputStreamCallback <span class="token operator">=</span> <span class="token class-name">JRubyOutputStreamCallback</span><span class="token punctuation">.</span><span class="token keyword">new</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
  flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>write<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> jrubyOutputStreamCallback<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u56DE\u8C03\u4FEE\u6539\u6D41\u6587\u4EF6\u5185\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u56DE\u8C03\u4FEE\u6539\u6D41\u6587\u4EF6\u5185\u5BB9" aria-hidden="true">#</a> \u4F7F\u7528\u56DE\u8C03\u4FEE\u6539\u6D41\u6587\u4EF6\u5185\u5BB9</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528session\u5BF9\u8C61\u4E2D\u7684write(flowFile\uFF0CstreamCallback)\u65B9\u6CD5\u3002\u9700\u8981\u5C06\u4E00\u4E2AStreamCallback\u5BF9\u8C61\u4F20\u9012\u7ED9write()\u65B9\u6CD5\u3002 StreamCallback\u540C\u65F6\u63D0\u4F9BInputStream(\u6765\u81EA\u4F20\u5165\u6D41\u6587\u4EF6)\u548CoutputStream(\u7528\u4E8E\u8BE5\u6D41\u6587\u4EF6\u7684\u4E0B\u4E00\u7248\u672C)\uFF0C\u56E0\u6B64\u60A8\u53EF\u4EE5\u4F7F\u7528InputStream\u83B7\u53D6\u6D41\u6587\u4EF6\u7684\u5F53\u524D\u5185\u5BB9\uFF0C\u7136\u540E\u5BF9\u5176\u8FDB\u884C\u4FEE\u6539\u5E76\u5199\u56DE\u5230\u6D41\u6587\u4EF6\u3002\u8FD9\u5C06\u8986\u76D6\u6D41\u6587\u4EF6\u7684\u5185\u5BB9\uFF0C\u56E0\u6B64\u5982\u679C\u4F60\u53EA\u662F\u60F3\u8FFD\u52A0\u6D41\u6587\u4EF6\u5185\u5BB9\uFF0C\u9700\u8981\u4F7F\u7528session.append()\u800C\u4E0D\u662Fsession.write()\u6765\u5904\u7406\u3002</p><p>\u6CE8\u610F\uFF0C\u7531\u4E8EStreamCallback\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u56E0\u6B64\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5185\u5BB9\u4EC5\u5BF9\u8BE5\u5BF9\u8C61\u53EF\u89C1\u3002\u5982\u679C\u9700\u8981\u5728write()\u65B9\u6CD5\u4E4B\u5916\u4F7F\u7528\u6570\u636E\uFF0C\u8BF7\u4F7F\u7528\u5168\u5C40\u8303\u56F4\u66F4\u5E7F\u7684\u53D8\u91CF\u3002</p><p>\u8FD9\u4E9B\u793A\u4F8B\u5C06\u53CD\u8F6C\u4F20\u5165\u7684flowFile\u7684\u5185\u5BB9(\u5047\u5B9A\u4E3AString)\uFF0C\u5E76\u5C06\u53CD\u8F6C\u7684\u5B57\u7B26\u4E32\u5199\u51FA\u5230flowFile\u7684\u65B0\u7248\u672C\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOUtils
<span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets

flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
<span class="token keyword">def</span> text <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span>
<span class="token comment">// Cast a closure with an inputStream and outputStream parameter to StreamCallback</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token punctuation">{</span>inputStream<span class="token punctuation">,</span> outputStream <span class="token operator">-&gt;</span>
  text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span>
  outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> StreamCallback<span class="token punctuation">)</span>
session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_SUCCESS<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io <span class="token keyword">import</span> IOUtils
<span class="token keyword">from</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset <span class="token keyword">import</span> StandardCharsets
<span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>io <span class="token keyword">import</span> StreamCallback

<span class="token comment"># Define a subclass of StreamCallback for use in session.write()</span>
<span class="token keyword">class</span> <span class="token class-name">PyStreamCallback</span><span class="token punctuation">(</span>StreamCallback<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
  <span class="token keyword">def</span> <span class="token function">process</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputStream<span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span><span class="token punctuation">:</span>
    text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span>toString<span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span>
    outputStream<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># end class</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>write<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> PyStreamCallback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> StreamCallback <span class="token operator">=</span>  Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.nifi.processor.io.StreamCallback&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> IOUtils <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.commons.io.IOUtils&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> StandardCharsets <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;java.nio.charset.StandardCharsets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// Create a new StreamCallback, passing in a function to define the interface method</span>
  flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">StreamCallback</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">inputStream<span class="token punctuation">,</span> outputStream</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span>
        outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOUtils
java_import java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets
java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>processor<span class="token punctuation">.</span>io<span class="token punctuation">.</span>StreamCallback

<span class="token comment"># Define a subclass of StreamCallback for use in session.write()</span>
<span class="token keyword">class</span> <span class="token class-name">JRubyStreamCallback</span>
  <span class="token keyword">include</span> StreamCallback
  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">process</span></span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> outputStream<span class="token punctuation">)</span>
    text <span class="token operator">=</span> IOUtils<span class="token punctuation">.</span>toString<span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span>
    outputStream<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>reverse<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_java<span class="token punctuation">.</span>getBytes<span class="token punctuation">(</span>StandardCharsets<span class="token double-colon punctuation">::</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
jrubyStreamCallback <span class="token operator">=</span> <span class="token class-name">JRubyStreamCallback</span><span class="token punctuation">.</span><span class="token keyword">new</span>
flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
  flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>write<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> jrubyStreamCallback<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5904\u7406\u811A\u672C\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u811A\u672C\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u9519\u8BEF" aria-hidden="true">#</a> \u5904\u7406\u811A\u672C\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u7684\u9519\u8BEF</h3><p>\u793A\u4F8B\u8BF4\u660E\uFF1A\u811A\u672C\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u53D1\u751F\u4E86\u9519\u8BEF\uFF0C\u6211\u4EEC\u60F3\u8981\u5BF9\u9519\u8BEF\u8FDB\u884C\u5904\u7406</p><p>\u65B9\u6CD5\uFF1A\u5BF9\u4E8E\u5F02\u5E38\uFF0C\u8BF7\u4F7F\u7528\u811A\u672C\u8BED\u8A00\u7684\u5F02\u5E38\u5904\u7406\u673A\u5236(\u901A\u5E38\u662Ftry/catch\u5757)\u3002\u4F46\u5BF9\u4E8E\u6570\u636E\u9A8C\u8BC1\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528if/else\u5757\uFF0C\u800C\u4E0D\u662Ftry/catch\u5B50\u53E5\u3002</p><p>ExecuteScript\u5B9A\u4E49&quot;success&quot;\u548C&quot;failure&quot;\u5173\u7CFB\uFF1B\u901A\u5E38\uFF0C\u4F60\u5E94\u8BE5\u8BB2\u5C06&quot;\u597D&quot;\u6D41\u7A0B\u6587\u4EF6\u8F6C\u79FB\u5230\u6210\u529F\uFF0C\u5C06&quot;\u574F&quot;\u6D41\u7A0B\u6587\u4EF6\u8F6C\u79FB\u5230\u5931\u8D25\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flowFile<span class="token punctuation">)</span> <span class="token keyword">return</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
 <span class="token comment">// Something that might throw an exception here</span>

 <span class="token comment">// Last operation is transfer to success (failures handled in the catch block)</span>
  session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_SUCCESS<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Something went wrong&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
  session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_FAILURE<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># Something that might throw an exception here</span>
       
        <span class="token comment"># Last operation is transfer to success (failures handled in the catch block)</span>
        session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_SUCCESS<span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&#39;Something went wrong&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
        session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> REL_FAILURE<span class="token punctuation">)</span>
<span class="token comment"># implicit return at the end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>flowFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token comment">// Something that might throw an exception here</span>

   <span class="token comment">// Last operation is transfer to success (failures handled in the catch block)</span>
    session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_SUCCESS</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Something went wrong&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
  session<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_FAILURE</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>flowFile <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flowFile <span class="token operator">!=</span> <span class="token keyword">nil</span>
  <span class="token keyword">begin</span>
    <span class="token comment"># Something that might raise an exception here</span>
    
    <span class="token comment"># Last operation is transfer to success (failures handled in the rescue block)</span>
    session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_SUCCESS</span><span class="token punctuation">)</span>
  <span class="token keyword">rescue</span> <span class="token builtin">Exception</span> <span class="token operator">=&gt;</span> e 
    log<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Something went wrong&#39;</span></span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    session<span class="token punctuation">.</span>transfer<span class="token punctuation">(</span>flowFile<span class="token punctuation">,</span> <span class="token constant">REL_FAILURE</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="advanced-features" tabindex="-1"><a class="header-anchor" href="#advanced-features" aria-hidden="true">#</a> Advanced Features</h2><p>\u524D\u4E24\u7AE0\u4ECB\u7ECD\u4E86\u6D41\u6587\u4EF6\u64CD\u4F5C\u7684\u57FA\u7840\u77E5\u8BC6\uFF0C\u4F8B\u5982\u8BFB/\u5199\u5C5E\u6027\u548C\u5185\u5BB9\uFF0C\u4EE5\u53CA\u4F7F\u7528session(ProcessSession\u5BF9\u8C61)\u68C0\u7D22\u548C\u4F20\u8F93\u6D41\u6587\u4EF6\u3002 \u6211\u5C06\u5728\u8FD9\u91CC\u4ECB\u7ECD\u5176\u4E2D\u7684\u4E00\u4E9BExecuteScript\u7684\u5176\u4ED6\u529F\u80FD\u3002</p><h3 id="\u52A8\u6001\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u5C5E\u6027" aria-hidden="true">#</a> \u52A8\u6001\u5C5E\u6027</h3><p>\u52A8\u6001\u5C5E\u6027\uFF0C\u4E5F\u79F0\u4E3A\u7528\u6237\u5B9A\u4E49\u7684\u5C5E\u6027\u3002\u8FD9\u4E9B\u52A8\u6001\u5C5E\u6027\u90FD\u662F\u5904\u7406\u5668\u7684\u5C5E\u6027\uFF0C\u7528\u6237\u53EF\u4EE5\u4E3A\u5176\u8BBE\u7F6E\u5C5E\u6027\u540D\u79F0\u548C\u503C(\u5E76\u975E\u6240\u6709\u5904\u7406\u5668\u90FD\u652F\u6301/\u4F7F\u7528\u52A8\u6001\u5C5E\u6027)\uFF0C\u4F46\u662FExecuteScript\u4F1A\u5C06\u52A8\u6001\u5C5E\u6027\u4F5C\u4E3A\u53D8\u91CF\u4F20\u9012\uFF0C\u8FD9\u4E9B\u53D8\u91CF\u5F15\u7528\u6307\u5411\u4E86\u8BE5\u5C5E\u6027\u503C\u76F8\u5BF9\u5E94\u7684PropertyValue\u5BF9\u8C61\u3002\u8FD9\u91CC\u6709\u4E24\u4EF6\u91CD\u8981\u7684\u4E8B\u60C5\u8981\u6CE8\u610F\uFF1A</p><ol><li>\u56E0\u4E3A\u5C5E\u6027\u540D\u79F0\u6309\u539F\u6837\u7ED1\u5B9A\u5230\u53D8\u91CF\u540D\u79F0\uFF0C\u6240\u4EE5\u6307\u5B9A\u7684\u7F16\u7A0B\u8BED\u8A00\u5FC5\u987B\u652F\u6301\u52A8\u6001\u5C5E\u6027\u7684\u547D\u540D\u7EA6\u5B9A\u3002\u4F8B\u5982\uFF0CGroovy\u4E0D\u652F\u6301\u4F7F\u7528\u53E5\u70B9(.)\u4F5C\u4E3A\u6709\u6548\u7684\u53EF\u53D8\u5B57\u7B26\uFF0C\u56E0\u6B64\u52A8\u6001\u5C5E\u6027(\u4F8B\u5982&quot;my.value&quot;)\u5C06\u5BFC\u81F4\u5904\u7406\u5668\u5931\u8D25\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6709\u6548\u7684\u66FF\u4EE3\u65B9\u6CD5\u662F&quot;myValue&quot;\u3002</li><li>\u4F7F\u7528PropertyValue\u5BF9\u8C61(\u800C\u4E0D\u662F\u503C\u7684\u5B57\u7B26\u4E32\u8868\u793A\u5F62\u5F0F)\u6765\u5141\u8BB8\u811A\u672C\u5728\u5C06\u5C5E\u6027\u503C\u8BC4\u4F30\u4E3A\u5B57\u7B26\u4E32\u4E4B\u524D\u5BF9\u5C5E\u6027\u503C\u6267\u884C\u5404\u79CD\u64CD\u4F5C\u3002\u5982\u679C\u5DF2\u77E5\u8BE5\u5C5E\u6027\u5305\u542B\u6587\u5B57\u503C\uFF0C\u5219\u53EF\u4EE5\u5728\u53D8\u91CF\u4E0A\u8C03\u7528getValue()\u65B9\u6CD5\u4EE5\u83B7\u53D6\u5176String\u8868\u793A\u5F62\u5F0F\u3002\u5982\u679C\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\u8BE5\u503C\u53EF\u80FD\u5305\u542B\u8868\u8FBE\u5F0F\u8BED\u8A00\uFF0C\u6216\u8005\u60A8\u60F3\u5C06\u8BE5\u503C\u8F6C\u6362\u4E3AString\u4EE5\u5916\u7684\u5176\u4ED6\u503C(\u4F8B\u5982\u5E03\u5C14\u5BF9\u8C61\u7684\u503C&quot;true&quot;)\uFF0C\u90A3\u4E48\u4E5F\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5\u8FDB\u884C\u64CD\u4F5C\u3002</li></ol><p>\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\u5047\u8BBE\u6211\u4EEC\u6709\u4E24\u4E2A\u5B9A\u4E49\u4E3A&quot;myProperty1&quot;\u548C&quot;myProperty2&quot;\u7684\u5C5E\u6027:</p><p><img src="`+l+`" alt="" loading="lazy"></p><h3 id="\u83B7\u53D6\u4E00\u4E2A\u52A8\u6001\u5C5E\u6027\u7684\u503C" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u4E00\u4E2A\u52A8\u6001\u5C5E\u6027\u7684\u503C" aria-hidden="true">#</a> \u83B7\u53D6\u4E00\u4E2A\u52A8\u6001\u5C5E\u6027\u7684\u503C</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528\u53D8\u91CF\u7684PropertyValue\u5BF9\u8C61\u4E2D\u7684getValue()\u65B9\u6CD5\u3002\u6B64\u65B9\u6CD5\u8FD4\u56DE\u52A8\u6001\u5C5E\u6027\u503C\u7684String\u8868\u793A\u5F62\u5F0F\u3002\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C\u503C\u4E2D\u5305\u542B\u8868\u8FBE\u5F0F\u8BED\u8A00\uFF0C\u5219getValue()\u4E0D\u4F1A\u5BF9\u5176\u8FDB\u884C\u8BC4\u4F30\u8BA1\u7B97\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">def</span> myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u8BA1\u7B97nifi\u8868\u8FBE\u5F0F\u8BED\u8A00\u540E\u83B7\u53D6\u52A8\u6001\u5C5E\u6027\u7684\u503C" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u7B97nifi\u8868\u8FBE\u5F0F\u8BED\u8A00\u540E\u83B7\u53D6\u52A8\u6001\u5C5E\u6027\u7684\u503C" aria-hidden="true">#</a> \u8BA1\u7B97NIFI\u8868\u8FBE\u5F0F\u8BED\u8A00\u540E\u83B7\u53D6\u52A8\u6001\u5C5E\u6027\u7684\u503C</h3><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528\u53D8\u91CF\u7684PropertyValue\u5BF9\u8C61\u4E2D\u7684EvaluationAttributeExpressions(flowFile)\u65B9\u6CD5\u3002\u8BC4\u4F30\u8BA1\u7B97\u8868\u8FBE\u5F0F\u8BED\u8A00\u540E\uFF0C\u518D\u8C03\u7528getValue()\u8FD4\u56DE\u52A8\u6001\u5C5E\u6027\u503C\u7684String\u8868\u793A\u5F62\u5F0F\u3002\u5982\u679C\u6D41\u6587\u4EF6\u4E0D\u53EF\u7528\uFF0C\u4F46\u5DF2\u5728\u73AF\u5883\u6216\u53D8\u91CF\u6CE8\u518C\u8868\u4E2D\u5B9A\u4E49\u4E86\u53D8\u91CF\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528\u4E0D\u5E26\u53C2\u6570\u7684valuateAttributeExpressions()</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">def</span> myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span>value
<span class="token keyword">def</span> myValue2 <span class="token operator">=</span> myProperty2<span class="token punctuation">.</span><span class="token function">evaluateAttributeExpressions</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">.</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span>myValue2 <span class="token operator">=</span> myProperty2<span class="token punctuation">.</span>evaluateAttributeExpressions<span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">var</span> myValue2 <span class="token operator">=</span> myProperty2<span class="token punctuation">.</span><span class="token function">evaluateAttributeExpressions</span><span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>myValue1 <span class="token operator">=</span> myProperty1<span class="token punctuation">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span>myValue2 <span class="token operator">=</span> myProperty2<span class="token punctuation">.</span>evaluateAttributeExpressions<span class="token punctuation">(</span>flowFile<span class="token punctuation">)</span><span class="token punctuation">.</span>getValue<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u6DFB\u52A0\u7B2C\u4E09\u65B9\u5E93" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u7B2C\u4E09\u65B9\u5E93" aria-hidden="true">#</a> \u6DFB\u52A0\u7B2C\u4E09\u65B9\u5E93</h3><p>ExecuteScript\u7684\u53E6\u4E00\u4E2A\u529F\u80FD\u662F\u53EF\u4EE5\u5411\u7C7B\u8DEF\u5F84\u4E2D\u6DFB\u52A0\u5916\u90E8&quot;\u6A21\u5757&quot;\uFF0C\u8FD9\u4F7F\u60A8\u53EF\u4EE5\u5229\u7528\u5404\u79CD\u7B2C\u4E09\u65B9\u5E93\uFF0C\u811A\u672C\u7B49\u3002\u4F46\u662F\uFF0C\u6BCF\u4E2A\u811A\u672C\u5F15\u64CE\u5BF9\u6A21\u5757\u7684\u6982\u5FF5\u90FD\u6709\u4E0D\u540C\u7684\u5904\u7406\uFF0C\u56E0\u6B64\u6211\u5C06\u5BF9\u5176\u5206\u522B\u8FDB\u884C\u8BA8\u8BBA\u3002\u901A\u5E38\uFF0C\u6A21\u5757\u6709\u4E24\u79CD\u7C7B\u578B\uFF0C\u5373Java\u5E93(JAR)\u548C\u811A\u672C(\u4F7F\u7528\u4E0EExecuteScript\u4E2D\u76F8\u540C\u7684\u8BED\u8A00\u7F16\u5199)\u3002\u4EE5\u4E0B\u662F\u5404\u79CD\u811A\u672C\u5F15\u64CE\u5904\u7406\u8FD9\u4E9B\u6A21\u5757\u7684\u65B9\u5F0F\uFF1A</p><p><strong>Groovy</strong></p><p>Groovy\u811A\u672C\u5F15\u64CE(\u81F3\u5C11\u662F\u5BF9ExecuteScript\u4E2D\u7684\u5F15\u64CE\u6765\u8BF4)\u4E0D\u652F\u6301\u5176\u4ED6Groovy\u811A\u672C\u7684\u5BFC\u5165\uFF0C\u800C\u662F\u5141\u8BB8\u5C06JAR\u6DFB\u52A0\u5230\u5176\u7C7B\u8DEF\u5F84\u4E2D\u3002\u56E0\u6B64\uFF0C\u5BF9\u4E8E\u5916\u90E8Groovy\u9879\u76EE\uFF0C\u8BF7\u8003\u8651\u7F16\u8BD1\u4E3A\u5B57\u8282\u7801\u6587\u4EF6\u5E76\u6307\u5411classes\u6587\u4EF6\u5939\u6216\u6253\u5305\u4E3AJAR\u3002</p><p>\u4F7F\u7528Groovy\u65F6\uFF0C\u53EF\u4EE5\u5C06<code>Module Directory</code>\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u4EE5\u9017\u53F7\u5206\u9694\u7684\u6587\u4EF6(JAR)\u548C\u6587\u4EF6\u5939\u7684\u5217\u8868\u3002\u5982\u679C\u6307\u5B9A\u4E86\u6587\u4EF6\u5939\uFF0C\u5219ExecuteScript\u5C06\u5728\u8BE5\u6587\u4EF6\u5939\u4E2D\u627E\u5230\u6240\u6709JAR\uFF0C\u5E76\u5C06\u5176\u6DFB\u52A0\u3002\u8FD9\u4F7F\u60A8\u53EF\u4EE5\u5305\u62EC\u7531\u5927\u91CFJAR\u7EC4\u6210\u7684\u7B2C\u4E09\u65B9\u8F6F\u4EF6\u3002</p><p><strong>Jython</strong></p><p>Jython\u811A\u672C\u5F15\u64CE(\u81F3\u5C11\u662F\u5BF9ExecuteScript\u4E2D\u7684\u5F15\u64CE\u6765\u8BF4)\u5F53\u524D\u4EC5\u652F\u6301\u5BFC\u5165\u7EAFPython\u6A21\u5757\uFF0C\u800C\u4E0D\u652F\u6301\u8BF8\u5982numpy\u6216scipy\u4E4B\u7C7B\u7684\u672C\u673A\u7F16\u8BD1\u6A21\u5757(\u4F8B\u5982CPython)\u7684\u5BFC\u5165\u3002\u5C3D\u7BA1\u5728\u4EE5\u540E\u7684\u53D1\u884C\u7248\u4E2D\u53EF\u80FD\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u4F46\u5B83\u76EE\u524D\u4E5F\u4E0D\u652F\u6301JAR\u3002\u5728\u540E\u53F0\uFF0C<code>Module Directory</code>\u5C5E\u6027\u4E2D\u7684\u6761\u76EE\u5728\u6267\u884C\u4E4B\u524D\u4F1A\u5148\u6DFB\u52A0\u5230\u811A\u672C\u4E2D\uFF0C\u5BF9\u4E8E\u6BCF\u4E2A\u6307\u5B9A\u7684\u6A21\u5757\u4F4D\u7F6E\uFF0C\u4F7F\u7528&quot;import sys&quot;\u540E\u8DDF&quot;sys.path.append&quot;\u3002</p><p>\u5982\u679C\u5DF2\u5B89\u88C5Python\uFF0C\u5219\u53EF\u4EE5\u901A\u8FC7\u5C06\u5176site-packages\u6587\u4EF6\u5939\u6DFB\u52A0\u5230<code>Module Directory</code>\u5C5E\u6027\u4E2D\u6765\u4F7F\u7528\u5176\u6240\u6709\u5DF2\u5B89\u88C5\u7684\u7EAFPython\u6A21\u5757\uFF0C\u4F8B\u5982</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>lib<span class="token operator">/</span>python2<span class="token punctuation">.</span><span class="token number">7</span><span class="token operator">/</span>site<span class="token operator">-</span>packages
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u60A8\u53EF\u4EE5\u5728\u811A\u672C\u4E2D\u4ECE\u5404\u79CD\u5305\u4E2D\u5BFC\u5165\uFF0C\u4F8B\u5982</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> user_agents <span class="token keyword">import</span> parse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><p>Javascript\u811A\u672C\u5F15\u64CE(\u81F3\u5C11\u662F\u5BF9ExecuteScript\u4E2D\u7684\u5F15\u64CE\u6765\u8BF4)\u5141\u8BB8\u4E0EGroovy\u5F15\u64CE\u4F7F\u7528\u76F8\u540C\u7C7B\u578B\u7684JAR/\u6587\u4EF6\u5939\u65B9\u5F0F\u6765\u5F15\u5165\u7B2C\u4E09\u65B9\u5E93\u3002</p><p><strong>JRuby</strong></p><p>\u76EE\u524D\uFF0CJRuby\u811A\u672C\u5F15\u64CE(\u81F3\u5C11\u662F\u5BF9ExecuteScript\u4E2D\u7684\u5F15\u64CE\u6765\u8BF4)\u4EC5\u5141\u8BB8\u6307\u5B9A\u5355\u4E2AJAR\uFF0C\u5982\u679C\u6307\u5B9A\u4E86\u6587\u4EF6\u5939\uFF0C\u5219\u8BE5\u6587\u4EF6\u5939\u4E2D\u5FC5\u987B\u5305\u542Bclass\u6587\u4EF6(\u4E0EJava\u7F16\u8BD1\u5668\u5E0C\u671B\u770B\u5230\u7684\u7C7B\u76F8\u540C)\uFF0C\u5982\u679C\u8BE5\u6587\u4EF6\u5939\u5305\u542BJAR\uFF0C\u5B83\u4EEC\u4E0D\u4F1A\u88AB\u81EA\u52A8\u63D0\u53D6\u3002\u540C\u6837\uFF0C\u76EE\u524D\u8FD8\u4E0D\u80FD\u5BFC\u5165\u7EAFRuby\u6A21\u5757\u3002</p><h3 id="state-management" tabindex="-1"><a class="header-anchor" href="#state-management" aria-hidden="true">#</a> State Management</h3><p>NiFi(0.5.0\u8D77)\u4E3A\u5904\u7406\u5668\u548C\u5176\u4ED6NiFi\u7EC4\u4EF6\u63D0\u4F9B\u4E86\u6301\u4E45\u5B58\u50A8\u67D0\u4E9B\u4FE1\u606F\u7684\u529F\u80FD\u3002\u4F8B\u5982\uFF0CQueryDatabaseTable\u5904\u7406\u5668\u4F1A\u8DDF\u8E2A\u5B83\u5728\u6307\u5B9A\u5217\u4E2D\u770B\u5230\u7684\u6700\u5927\u503C\uFF0C\u8FD9\u6837\uFF0C\u4E0B\u6B21\u8FD0\u884C\u65F6\uFF0C\u5B83\u53EA\u4F1A\u83B7\u53D6\u5176\u503C\u5927\u4E8E\u5230\u76EE\u524D\u4E3A\u6B62\u6240\u770B\u5230\u7684\u503C,\u8FD9\u4E9B\u4FE1\u606F\u7531state\u5B58\u50A8\u7BA1\u7406\u3002</p><p>Scope\u662Fstate\u7BA1\u7406\u7684\u91CD\u8981\u6982\u5FF5\u3002 NiFi\u7EC4\u4EF6\u53EF\u4EE5\u9009\u62E9\u5C06\u5176\u72B6\u6001\u5B58\u50A8\u5728<strong>\u96C6\u7FA4</strong>\u7EA7\u522B\u6216<strong>\u672C\u5730</strong>\u7EA7\u522B\u3002</p><p>\u6CE8\u610F\uFF0C\u5728\u72EC\u7ACB\u7684NiFi\u5B9E\u4F8B\u4E2D\uFF0C&quot;\u96C6\u7FA4\u8303\u56F4&quot;\u4E0E&quot;\u672C\u5730\u8303\u56F4&quot;\u76F8\u540C\u3002\u8303\u56F4\u7684\u9009\u62E9\u901A\u5E38\u4E0E\u6D41\u4E2D\u6BCF\u4E2A\u8282\u70B9\u4E0A\u7684\u76F8\u540C\u5904\u7406\u5668\u662F\u5426\u53EF\u4EE5\u5171\u4EAB\u72B6\u6001\u6570\u636E\u6709\u5173\u3002\u5982\u679C\u96C6\u7FA4\u4E2D\u7684\u5B9E\u4F8B\u4E0D\u9700\u8981\u5171\u4EAB\u72B6\u6001\uFF0C\u8BF7\u4F7F\u7528\u672C\u5730\u8303\u56F4\u3002\u5728Java\u4E2D\uFF0C\u8FD9\u4E9B\u9009\u9879\u4F5C\u4E3A\u79F0\u4E3AScope\u7684\u679A\u4E3E\u63D0\u4F9B\uFF0C\u5F15\u7528Scope.CLUSTER\u548CScope.LOCAL\u65F6\uFF0C\u5206\u522B\u8868\u793A\u96C6\u7FA4\u548C\u672C\u5730\u8303\u56F4\u3002</p><p>\u8981\u5728ExecuteScript\u4E2D\u4F7F\u7528\u72B6\u6001\u7BA1\u7406\u529F\u80FD(\u4E0B\u9762\u662F\u7279\u5B9A\u4E8E\u8BED\u8A00\u7684\u793A\u4F8B)\uFF0C\u60A8\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528ProcessContext\u7684getStateManager()\u65B9\u6CD5(\u8BF7\u6CE8\u610F\uFF0C\u6BCF\u4E2A\u5F15\u64CE\u90FD\u83B7\u5F97\u4E00\u4E2A\u5E26\u6709ProcessContext\u5B9E\u4F8B\u7684\u540D\u4E3A&quot; context&quot;\u7684\u53D8\u91CF)\u6765\u5F15\u7528StateManager\u3002\u7136\u540E\uFF0C\u60A8\u53EF\u4EE5\u5728StateManager\u5BF9\u8C61\u4E0A\u8C03\u7528\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><p><strong>void setState(<code>Map&lt;String, String&gt;</code> state, Scope scope)</strong> \uFF1A\u5728\u7ED9\u5B9A\u8303\u56F4\u5185\u66F4\u65B0\u7EC4\u4EF6\u72B6\u6001\u7684\u503C\uFF0C\u5C06\u5176\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u503C\u3002\u8BF7\u6CE8\u610F\uFF0C\u8BE5state\u503C\u4E3AMap\uFF1B \u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u66F4\u65B0state\u4E2D\u7684\u5168\u90E8\u503C\uFF0C\u8FD9\u6837\u662F\u4FDD\u8BC1\u4E86\u64CD\u4F5C\u7684\u539F\u5B50\u6027\u3002</p><p><strong>StateMap getState(Scope scope)</strong> \uFF1A\u8FD4\u56DE\u7ED9\u5B9A\u8303\u56F4\u5185\u7EC4\u4EF6\u7684\u5F53\u524D\u72B6\u6001\u3002\u6B64\u65B9\u6CD5\u4ECE\u4E0D\u8FD4\u56DEnull\uFF0C\u5B83\u8FD4\u56DE\u7684\u662F\u4E00\u4E2AStateMap\u5BF9\u8C61\uFF0C\u5982\u679C\u5C1A\u672A\u8BBE\u7F6E\u72B6\u6001\uFF0C\u5219StateMap\u7684\u7248\u672C\u5C06\u4E3A-1\uFF0C\u5E76\u4E14\u503C\u7684\u6620\u5C04\u5C06\u4E3A\u7A7A\u3002\u901A\u5E38\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684<code>Map&lt;String\uFF0CString&gt;</code>\u6765\u5B58\u50A8\u66F4\u65B0\u7684\u503C\uFF0C\u7136\u540E\u5C06\u8C03\u7528setState()\u6216replace()\u65B9\u6CD5\u3002</p><p><strong>boolean replace(StateMap oldValue, <code>Map&lt;String, String&gt;</code> newValue, Scope scope)</strong>: \u5F53\u4E14\u4EC5\u5F53\u5F53\u524D\u503C\u4E0E\u7ED9\u5B9A\u7684oldValue\u76F8\u540C\u65F6\uFF0C\u624D\u5C06\u7EC4\u4EF6\u72B6\u6001\u7684\u503C(\u5728\u7ED9\u5B9A\u7684\u8303\u56F4\u5185)\u66F4\u65B0\u4E3A\u65B0\u503C\u3002\u5982\u679C\u72B6\u6001\u5DF2\u66F4\u65B0\u4E3A\u65B0\u503C\uFF0C\u5219\u8FD4\u56DEtrue\uFF1B\u5426\u5219\uFF0C\u8FD4\u56DEtrue\u3002\u5982\u679C\u72B6\u6001\u7684\u503C\u4E0D\u7B49\u4E8EoldValue\uFF0C\u5219\u8FD4\u56DEfalse\u3002</p><p><strong>void clear(Scope scope)</strong> : \u5728\u7ED9\u5B9A\u8303\u56F4\u5185\uFF0C\u4ECE\u7EC4\u4EF6\u72B6\u6001\u6E05\u9664\u6240\u6709\u952E\u548C\u503C\u3002</p><h4 id="\u83B7\u53D6\u5F53\u524Dstate\u4E2D\u7684\u952E\u503C\u5BF9" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5F53\u524Dstate\u4E2D\u7684\u952E\u503C\u5BF9" aria-hidden="true">#</a> \u83B7\u53D6\u5F53\u524Dstate\u4E2D\u7684\u952E\u503C\u5BF9</h4><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528ProcessContext\u4E2D\u7684getStateManager()\u65B9\u6CD5\uFF0C\u7136\u540E\u4F7F\u7528StateManager\u4E2D\u7684getStateMap()\uFF0C\u7136\u540E\u4F7F\u7528toMap()\u8F6C\u6362\u4E3A\u952E/\u503C\u5BF9\u7684<code>Map&lt;String\uFF0CString&gt;</code>\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
<span class="token keyword">def</span> oldMap <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>LOCAL<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
<span class="token keyword">def</span> oldMap <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>LOCAL<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state <span class="token keyword">import</span> Scope
oldMap <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span>getState<span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>LOCAL<span class="token punctuation">)</span><span class="token punctuation">.</span>toMap<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Scope <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;org.apache.nifi.components.state.Scope&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> oldMap <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span><span class="token constant">LOCAL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
oldMap <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span>getState<span class="token punctuation">(</span>Scope<span class="token double-colon punctuation">::</span><span class="token constant">LOCAL</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toMap<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1A\u5728\u811A\u672C\u4E2D\u4EC5\u663E\u5F0F\u5F15\u7528\u4E86Scope\u7C7B\uFF0C\u56E0\u6B64\u5B83\u662F\u552F\u4E00\u5BFC\u5165\u7684\u7C7B\u3002\u5982\u679C\u5F15\u7528StateManager\uFF0CStateMap\u7B49\uFF0C\u5219\u4E5F\u9700\u8981\u5BFC\u5165\u8FD9\u4E9B\u7C7B\u3002</p><h4 id="\u66F4\u65B0state\u4E2D\u7684\u952E\u503C\u5BF9" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0state\u4E2D\u7684\u952E\u503C\u5BF9" aria-hidden="true">#</a> \u66F4\u65B0state\u4E2D\u7684\u952E\u503C\u5BF9</h4><p>\u65B9\u6CD5\uFF1A\u8981\u83B7\u53D6\u5F53\u524D\u7684StateMap\u5BF9\u8C61\uFF0C\u8BF7\u518D\u6B21\u4F7F\u7528ProcessContext\u4E2D\u7684getStateManager()\u65B9\u6CD5\uFF0C\u7136\u540E\u4F7F\u7528StateManager\u4E2D\u7684getStateMap()\u3002\u8FD9\u4E9B\u793A\u4F8B\u5047\u5B9A\u4F7F\u7528\u4E00\u4E2A\u65B0Map(\u4F7F\u7528toMap()\u65B9\u6CD5\u5C31\u4F1Acopy\u4E00\u4E2A\u65B0\u7684Map)\uFF0C\u4E5F\u4F7F\u7528\u73B0\u6709\u503C\u521B\u5EFA\u4E00\u4E2A\u65B0Map\uFF0C\u7136\u540E\u4EC5\u66F4\u65B0\u6240\u9700\u7684\u6761\u76EE\u3002</p><p>\u6CE8\u610F\uFF0C\u5982\u679C\u6CA1\u6709\u5F53\u524D\u6620\u5C04(\u5373StateMap.getVersion()\u8FD4\u56DE-1)\uFF0C\u5219replace()\u5C06\u4E0D\u8D77\u4F5C\u7528\uFF0C\u56E0\u6B64\u793A\u4F8B\u5C06\u5728\u68C0\u67E5\u6821\u9A8C\u540E\u518D\u76F8\u5E94\u5730\u8C03\u7528setState()\u6216replace()\u3002</p><p>ExecuteScript\u7684\u65B0\u5B9E\u4F8B\u8FD0\u884C\u65F6\uFF0CStateMap\u7248\u672C\u5C06\u4E3A-1\uFF0C\u56E0\u6B64\uFF0C\u5728\u4E00\u6B21\u6267\u884C\u540E\uFF0C\u5982\u679C\u53F3\u952E\u5355\u51FBExecuteScript\u5904\u7406\u5668\u5E76\u9009\u62E9&quot;\u67E5\u770B\u72B6\u6001&quot;\uFF0C\u5219\u5E94\u8BE5\u770B\u5230\u7C7B\u4F3C\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><p><img src="`+u+`" alt="" loading="lazy"></p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
<span class="token keyword">def</span> stateManager <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager
<span class="token keyword">def</span> stateMap <span class="token operator">=</span> stateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>CLUSTER<span class="token punctuation">)</span>
<span class="token keyword">def</span> newMap <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;myKey1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;myValue1&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>stateMap<span class="token punctuation">.</span>version <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  stateManager<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>newMap<span class="token punctuation">,</span> Scope<span class="token punctuation">.</span>CLUSTER<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  stateManager<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>stateMap<span class="token punctuation">,</span> newMap<span class="token punctuation">,</span> Scope<span class="token punctuation">.</span>CLUSTER<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state <span class="token keyword">import</span> Scope
stateManager <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager
stateMap <span class="token operator">=</span> stateManager<span class="token punctuation">.</span>getState<span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>CLUSTER<span class="token punctuation">)</span>
newMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;myKey1&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;myValue1&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">if</span> stateMap<span class="token punctuation">.</span>version <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
    stateManager<span class="token punctuation">.</span>setState<span class="token punctuation">(</span>newMap<span class="token punctuation">,</span> Scope<span class="token punctuation">.</span>CLUSTER<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    stateManager<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>stateMap<span class="token punctuation">,</span> newMap<span class="token punctuation">,</span> Scope<span class="token punctuation">.</span>CLUSTER<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Scope <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;org.apache.nifi.components.state.Scope&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> stateManager <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager<span class="token punctuation">;</span>
<span class="token keyword">var</span> stateMap <span class="token operator">=</span> stateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span><span class="token constant">CLUSTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> newMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;myKey1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;myValue1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>stateMap<span class="token punctuation">.</span>version <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  stateManager<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>newMap<span class="token punctuation">,</span> Scope<span class="token punctuation">.</span><span class="token constant">CLUSTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  stateManager<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>stateMap<span class="token punctuation">,</span> newMap<span class="token punctuation">,</span> Scope<span class="token punctuation">.</span><span class="token constant">CLUSTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
stateManager <span class="token operator">=</span> context<span class="token punctuation">.</span>stateManager
stateMap <span class="token operator">=</span> stateManager<span class="token punctuation">.</span>getState<span class="token punctuation">(</span>Scope<span class="token double-colon punctuation">::</span><span class="token constant">CLUSTER</span><span class="token punctuation">)</span>
newMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;myKey1&#39;</span></span><span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">&#39;myValue1&#39;</span></span><span class="token punctuation">}</span>
<span class="token keyword">if</span> stateMap<span class="token punctuation">.</span>version <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span>
    stateManager<span class="token punctuation">.</span>setState<span class="token punctuation">(</span>newMap<span class="token punctuation">,</span> Scope<span class="token double-colon punctuation">::</span><span class="token constant">CLUSTER</span><span class="token punctuation">)</span>
<span class="token keyword">else</span>
    stateManager<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>stateMap<span class="token punctuation">,</span> newMap<span class="token punctuation">,</span> Scope<span class="token double-colon punctuation">::</span><span class="token constant">CLUSTER</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6E05\u7A7Astate" tabindex="-1"><a class="header-anchor" href="#\u6E05\u7A7Astate" aria-hidden="true">#</a> \u6E05\u7A7Astate</h4><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528ProcessContext\u4E2D\u7684getStateManager()\u65B9\u6CD5\uFF0C\u7136\u540E\u8C03\u7528StateManager\u7684clear(scope)\u65B9\u6CD5\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>LOCAL<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state <span class="token keyword">import</span> Scope
context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span>clear<span class="token punctuation">(</span>Scope<span class="token punctuation">.</span>LOCAL<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> Scope <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;org.apache.nifi.components.state.Scope&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>Scope<span class="token punctuation">.</span><span class="token constant">LOCAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>components<span class="token punctuation">.</span>state<span class="token punctuation">.</span>Scope
context<span class="token punctuation">.</span>stateManager<span class="token punctuation">.</span>clear<span class="token punctuation">(</span>Scope<span class="token double-colon punctuation">::</span><span class="token constant">LOCAL</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BBF\u95EEcontroller-services" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EEcontroller-services" aria-hidden="true">#</a> \u8BBF\u95EEController Services</h3><p>\u5728NiFi ARchive(NAR)\u7ED3\u6784\u4E2D\uFF0C\u63A7\u5236\u5668\u670D\u52A1\u901A\u5E38\u4F5C\u4E3A\u63A5\u53E3\u66B4\u9732\u5728API JAR\u4E2D\u3002\u4F8B\u5982\uFF0CDistributedCacheClient\u662F\u4ECEControllerService\u63A5\u53E3\u7684\u6269\u5C55\uFF0C\u5B83\u4F4D\u4E8Enifi-standard-services-api-nar NAR\u5305\u4E2D\u7684nifi-distributed-cache-client-service-api JAR\u4E2D\u3002(\u81EA\u5B9A\u4E49\u5F00\u53D1\u65F6\u5E0C\u671B\u5F15\u7528\u63A5\u53E3\u7684\u5176\u4ED6NAR(\u4F8B\u5982\uFF0C\u4EE5\u521B\u5EFA\u65B0\u578B\u7684\u5BA2\u6237\u7AEF\u5B9E\u73B0)\u5FC5\u987B\u5C06nifi-standard-services-api-nar\u6307\u5B9A\u4E3A\u5176\u7236NAR\uFF0C\u7136\u540E\u5F15\u7528\u5904\u7406\u5668\u4E2D\u63D0\u4F9B\u7684API JAR\u5B9E\u4F8B\u5B50\u6A21\u5757)\u3002</p><p>\u4E0A\u9762\u7B80\u5355\u7684\u8BF4\u660E\u4F7F\u7528Controller Services\u6240\u9700\u7684\u5E95\u5C42\u7EC6\u8282\uFF0C\u8C08\u53CA\u8FD9\u4E9B\u4E3B\u8981\u6709\u4E24\u4E2A\u539F\u56E0\uFF1A</p><ol><li>\u5728NiFi 1.0.0\u4E4B\u524D\uFF0C\u811A\u672CNAR(\u5305\u62ECExecuteScript\u548CInvokeScriptedProcessor)\u672A\u5C06nifi-standard-services-api-nar\u6307\u5B9A\u4E3A\u5176\u7236\u7EA7\u3002\u8FD9\u610F\u5473\u7740\u53EA\u80FD\u5C06\u9690\u5F0F\u5F15\u7528\u7528\u4E8EControllerServices\u63A5\u53E3(\u53CA\u5176\u5B9E\u73B0)\uFF0C\u5E76\u4E14\u51FA\u4E8E\u76F8\u540C\u7684\u539F\u56E0\uFF0C\u53EA\u80FD\u4F7F\u7528\u4E0D\u9700\u8981\u5176\u4ED6\u4E0D\u53EF\u7528\u7C7B\u7684\u63A5\u53E3\u65B9\u6CD5\u3002\u8FD9\u9650\u5236\u4E86ExecuteScript\u5728\u4F7F\u7528Controller Services\u65B9\u9762\u7684\u7528\u9014\u3002</li><li>\u4ECENiFi 1.0.0\u5F00\u59CB\uFF0C\u811A\u672C\u5904\u7406\u5668\u53EF\u4EE5\u8BBF\u95EEnifi-standard-services-api-nar\u4E2D\u7684\u67D0\u4E9BController Service\u63A5\u53E3(\u548C\u5173\u8054\u7684\u7C7B)\u3002\u8FD9\u4E9B\u5305\u62ECDBCPService\uFF0CDistributedMapCacheClient\uFF0CDistributedSetCacheClient\uFF0CHttpContextMap\u548CSSLContextService\u3002</li></ol><p>\u9700\u8981\u4F7F\u7528Controller Service\u5B9E\u4F8B\u7684\u5904\u7406\u5668\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5C5E\u6027(\u5373PropertyDescriptor\u5BF9\u8C61)\u5E76\u5728\u5176\u4E0A\u8C03\u7528identificationControllerService(class)\u3002\u5176\u5448\u73B0\u7684UI\u754C\u9762\u662F\u5341\u5206\u6709\u597D\u7684(\u4E0B\u62C9\u6846\u9009\u62E9)\u3002</p><p>\u4F46\u662F\uFF0C\u5BF9\u4E8EExecuteScript\uFF0C\u6211\u4EEC\u9700\u8981\u8BA9\u7528\u6237\u6307\u5B9AController Service\u7684\u540D\u79F0\u6216ID\uFF0C\u4ECE\u800C\u8BA9\u7528\u6237\u9009\u62E9Controller Service\u5B9E\u4F8B\u3002\u5982\u679C\u6211\u4EEC\u5141\u8BB8\u7528\u6237\u6307\u5B9A\u540D\u79F0\uFF0C\u5219\u811A\u672C\u5C06\u5FC5\u987B\u6267\u884C\u67E5\u627E\uFF0C\u4EE5\u5C1D\u8BD5\u5C06\u8BE5\u540D\u79F0\u4E0E\u8BE5\u7C7B\u578B\u7684Controller Service\u5B9E\u4F8B\u5217\u8868\u4E2D\u7684(\u53EA\u80FD\u662F\u4E00\u4E2A)\u5143\u7D20\u8FDB\u884C\u5339\u914D\u3002\u5982\u679C\u7528\u6237\u8F93\u5165\u5B9E\u4F8B\u7684ID\uFF0C\u5219(\u4ECENiFi 1.0.0\u5F00\u59CB)\uFF0C\u8BBF\u95EE\u8BE5\u5BF9\u8C61\u8981\u5BB9\u6613\u5F97\u591A\u3002</p><p>\u5982\u4E0B\u6240\u793A\u3002\u8FD9\u4E9B\u793A\u4F8B\u5C06\u4F7F\u7528\u4E00\u4E2A\u540D\u4E3A&quot;distMapClient&quot;\u7684DistributedMapCacheClientService\u5B9E\u4F8B(\u7F13\u5B58\u670D\u52A1)\uFF0C\u8FDE\u63A5\u5230\u4E00\u4E2ADistributedMapCacheServer\u5B9E\u4F8B(\u6807\u51C6\u9ED8\u8BA4\u503C\u4E3Alocalhost\uFF1A4557\uFF0C\u672C\u5730\u542F\u52A8\u7684\u4E00\u4E2A\u7F13\u5B58\u670D\u52A1\u5668)\uFF0C\u5176\u4E2D\u8BE5\u5BA2\u6237\u7AEF\u5B9E\u4F8B\u7684ID\u4E3A93db6734-0159-1000-b46f-78a8af3b69ed\uFF1A</p><p><img src="`+r+'" alt="" loading="lazy"></p><p>\u5728ExecuteScript\u914D\u7F6E\u4E2D\uFF0C\u521B\u5EFA\u4E00\u4E2A\u52A8\u6001\u5C5E\u6027\uFF0C\u79F0\u4E3A&quot;clientServiceId&quot;\uFF0C\u5E76\u5C06\u5176\u8BBE\u7F6E\u4E3A93db6734-0159-1000-b46f-78a8af3b69ed\uFF1A</p><p><img src="'+k+`" alt="" loading="lazy"></p><p>\u7136\u540E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528clientServiceId.asControllerService(DistributedMapCacheClient)\uFF0C\u65B9\u6CD5\u4E2D\u7684\u53C2\u6570\u662F\u5BF9DistributedMapCacheClient\u7684Class\u5BF9\u8C61\u7684\u5F15\u7528\u3002</p><p>\u4E00\u65E6\u6709\u4E86DistributedMapCacheClient\u5B9E\u4F8B\uFF0C\u5219\u53EF\u4EE5\u8C03\u7528\u5176get(key\uFF0Cserializer\uFF0Cdeserializer)\u65B9\u6CD5\u6765\u68C0\u7D22\u503C\u3002</p><p>\u5728\u6211\u4EEC\u7684\u4F8B\u5B50\u4E2D\uFF0C\u56E0\u4E3A\u952E\u548C\u503C\u662F\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EA\u9700\u8981<code>Serializer &lt;String&gt;</code>\u548C<code>Deserializer &lt;String&gt;</code>\u7684\u5B9E\u4F8B\u5373\u53EF\u4F20\u9012\u7ED9get()\u65B9\u6CD5\u3002\u6240\u6709\u8BED\u8A00\u7684\u65B9\u6CD5\u90FD\u7C7B\u4F3C\u4E8E\u672C\u6587\u7B2C2\u7AE0\u4E2D\u63CF\u8FF0\u7684StreamCallback\u5B9E\u4F8B\u7684\u521B\u5EFA\u3002\u8FD9\u4E9B\u793A\u4F8B\u5C06\u4ECE\u9884\u5148\u586B\u5145\u7684\u7F13\u5B58\u670D\u52A1\u5668\u4E2D\u83B7\u53D6\u952E&quot;a&quot;\u7684\u503C\u5E76\u4EE5\u65E5\u5FD7\u7684\u5F62\u5F0F\u8BB0\u5F55\u7ED3\u679C(&quot;Result = hello&quot;)</p><h4 id="\u83B7\u53D6\u5B58\u50A8\u5728distributedmapcacheserver\u4E2D\u7684\u5C5E\u6027\u7684\u503C" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5B58\u50A8\u5728distributedmapcacheserver\u4E2D\u7684\u5C5E\u6027\u7684\u503C" aria-hidden="true">#</a> \u83B7\u53D6\u5B58\u50A8\u5728DistributedMapCacheServer\u4E2D\u7684\u5C5E\u6027\u7684\u503C</h4><p>\u65B9\u6CD5\uFF1A\u4F7F\u7528\u4E0A\u8FF0\u65B9\u6CD5\uFF0C\u521B\u5EFA\u4E00\u4E2AStringSerializer\u548CStringDeserializer\u5BF9\u8C61\uFF0C\u7136\u540E\u901A\u8FC7ID\u83B7\u53D6DistributedMapCacheClientService\u5B9E\u4F8B\uFF0C\u7136\u540E\u5728\u670D\u52A1\u4E0A\u8C03\u7528get()\u3002</p><p>\u4E3A\u4E86\u65B9\u4FBF\u8D77\u89C1\uFF0C\u8FD9\u91CC\u76F4\u63A5\u4F7F\u7528\u65E5\u5FD7\u7684\u5F62\u5F0F\u6253\u5370\u51FA\u7ED3\u679C\u3002</p><p>Examples:</p><p><strong>Groovy</strong></p><div class="language-groovy ext-groovy line-numbers-mode"><pre class="language-groovy"><code><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client<span class="token punctuation">.</span>DistributedMapCacheClient
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client<span class="token punctuation">.</span>Serializer
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client<span class="token punctuation">.</span>Deserializer
<span class="token keyword">import</span> java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets

<span class="token keyword">def</span> StringSerializer <span class="token operator">=</span> <span class="token punctuation">{</span>value<span class="token punctuation">,</span> out <span class="token operator">-&gt;</span> out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Serializer<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span>
<span class="token keyword">def</span> StringDeserializer <span class="token operator">=</span> <span class="token punctuation">{</span> bytes <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token keyword">as</span> Deserializer<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span>

<span class="token keyword">def</span> myDistClient <span class="token operator">=</span> clientServiceId<span class="token punctuation">.</span><span class="token function">asControllerService</span><span class="token punctuation">(</span>DistributedMapCacheClient<span class="token punctuation">)</span>
<span class="token keyword">def</span> result <span class="token operator">=</span> myDistClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> StringSerializer<span class="token punctuation">,</span> StringDeserializer<span class="token punctuation">)</span>
log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;Result = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">result</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Jython</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> org<span class="token punctuation">.</span>python<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util <span class="token keyword">import</span> StringUtil
<span class="token keyword">from</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client <span class="token keyword">import</span> DistributedMapCacheClient<span class="token punctuation">,</span> Serializer<span class="token punctuation">,</span> Deserializer

<span class="token comment"># Define a subclass of Serializer for use in the client&#39;s get() method</span>
<span class="token keyword">class</span> <span class="token class-name">StringSerializer</span><span class="token punctuation">(</span>Serializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
  <span class="token keyword">def</span> <span class="token function">serialize</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">:</span>
       out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>value<span class="token punctuation">)</span>

<span class="token comment"># Define a subclass of Deserializer for use in the client&#39;s get() method</span>
<span class="token keyword">class</span> <span class="token class-name">StringDeserializer</span><span class="token punctuation">(</span>Deserializer<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
  <span class="token keyword">def</span> <span class="token function">deserialize</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>  <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> StringUtil<span class="token punctuation">.</span>fromBytes<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">)</span>

myDistClient <span class="token operator">=</span> clientServiceId<span class="token punctuation">.</span>asControllerService<span class="token punctuation">(</span>DistributedMapCacheClient<span class="token punctuation">)</span>
result <span class="token operator">=</span> myDistClient<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> StringSerializer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> StringDeserializer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;Result = &#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Javascript</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> DistributedMapCacheClient <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;org.apache.nifi.distributed.cache.client.DistributedMapCacheClient&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> Serializer <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;org.apache.nifi.distributed.cache.client.Serializer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> Deserializer <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;org.apache.nifi.distributed.cache.client.Deserializer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> StandardCharsets <span class="token operator">=</span> Java<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;java.nio.charset.StandardCharsets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> StringSerializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Serializer</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> out</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>StandardCharsets<span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> StringDeserializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Deserializer</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// For some reason I had to build a string from the character codes in the &quot;arr&quot; array</span>
  <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s <span class="token operator">=</span> s <span class="token operator">+</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> myDistClient <span class="token operator">=</span> clientServiceId<span class="token punctuation">.</span><span class="token function">asControllerService</span><span class="token punctuation">(</span>DistributedMapCacheClient<span class="token punctuation">.</span>class<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> myDistClient<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> StringSerializer<span class="token punctuation">,</span> StringDeserializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Result = &quot;</span><span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>JRuby</strong></p><div class="language-ruby ext-rb line-numbers-mode"><pre class="language-ruby"><code>java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client<span class="token punctuation">.</span>DistributedMapCacheClient
java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client<span class="token punctuation">.</span>Serializer
java_import org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>nifi<span class="token punctuation">.</span>distributed<span class="token punctuation">.</span>cache<span class="token punctuation">.</span>client<span class="token punctuation">.</span>Deserializer
java_import java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span>StandardCharsets

<span class="token comment"># Define a subclass of Serializer for use in the client&#39;s get() method</span>
<span class="token keyword">class</span> <span class="token class-name">StringSerializer</span>
  <span class="token keyword">include</span> Serializer
  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">serialize</span></span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> out<span class="token punctuation">)</span>
       out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>value<span class="token punctuation">.</span>to_java<span class="token punctuation">.</span>getBytes<span class="token punctuation">(</span>StandardCharsets<span class="token double-colon punctuation">::</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token comment"># Define a subclass of Deserializer for use in the client&#39;s get() method</span>
<span class="token keyword">class</span> <span class="token class-name">StringDeserializer</span>
  <span class="token keyword">include</span> Deserializer
  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">deserialize</span></span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
       bytes<span class="token punctuation">.</span>to_s
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

myDistClient <span class="token operator">=</span> clientServiceId<span class="token punctuation">.</span>asControllerService<span class="token punctuation">(</span>DistributedMapCacheClient<span class="token punctuation">.</span>java_class<span class="token punctuation">)</span>
result <span class="token operator">=</span> myDistClient<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;a&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">StringSerializer</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">,</span> <span class="token class-name">StringDeserializer</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">)</span>
log<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Result = &#39;</span></span> <span class="token operator">+</span> result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,309);function h(S,F){const t=p("ExternalLinkIcon");return o(),c("div",null,[v,n("p",null,[m,b,n("a",g,[y,i(t)]),f]),w])}var M=e(d,[["render",h],["__file","023-ExecuteScript\u811A\u672C\u6559\u7A0B.html.vue"]]);export{M as default};
