import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as c,c as o,a as n,b as t,F as l,e as s,d as i}from"./app.22146848.js";const u={},k=s("\u8F6C\u81EA\uFF1A"),r={href:"http://blog.csdn.net/zhaoyanjun6/article/details/54911237",target:"_blank",rel:"noopener noreferrer"},d=s("http://blog.csdn.net/zhaoyanjun6/article/details/54911237"),m=n("br",null,null,-1),v=s(" \u672C\u6587\u51FA\u81EA"),b={href:"http://blog.csdn.net/zhaoyanjun6/",target:"_blank",rel:"noopener noreferrer"},f=s("\u3010\u8D75\u5F66\u519B\u7684\u535A\u5BA2\u3011"),w=i(`<ul><li>\u7C7B\u7684\u7EE7\u627F\u5173\u7CFB</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Reader
|__ BufferedReader\u3001StringReader\u3001InputStreamReader
                                      |__ FileReader
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Writer
|__ BufferedWriter\u3001StringWriter\u3001OutputStreamWriter
                                      |__ FileWriter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>BufferedReader</code></strong></p><ul><li>\u6784\u9020\u51FD\u6570</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token class-name">Reader</span> in<span class="token punctuation">,</span> <span class="token keyword">int</span> sz<span class="token punctuation">)</span> <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u4F7F\u7528\u6307\u5B9A\u5927\u5C0F\u8F93\u5165\u7F13\u51B2\u533A\u7684\u7F13\u51B2\u5B57\u7B26\u8F93\u5165\u6D41\u3002 </span>

<span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token class-name">Reader</span> in<span class="token punctuation">)</span> <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u4F7F\u7528\u9ED8\u8BA4\u5927\u5C0F\u8F93\u5165\u7F13\u51B2\u533A\u7684\u7F13\u51B2\u5B57\u7B26\u8F93\u5165\u6D41\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u65B9\u6CD5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span>  <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u8BFB\u53D6\u5355\u4E2A\u5B57\u7B26\u3002</span>
<span class="token keyword">int</span>  <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span>  <span class="token comment">//\u5C06\u5B57\u7B26\u8BFB\u5165\u6570\u7EC4\u7684\u67D0\u4E00\u90E8\u5206\u3002</span>
<span class="token class-name">String</span>  <span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u8BFB\u53D6\u4E00\u4E2A\u6587\u672C\u884C\u3002</span>
<span class="token keyword">boolean</span>	 <span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u5224\u65AD\u6B64\u6D41\u662F\u5426\u5DF2\u51C6\u5907\u597D\u88AB\u8BFB\u53D6\u3002</span>
<span class="token keyword">void</span>  <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u5C06\u6D41\u91CD\u7F6E\u5230\u6700\u65B0\u7684\u6807\u8BB0\u3002</span>
<span class="token keyword">long</span>  <span class="token function">skip</span><span class="token punctuation">(</span><span class="token keyword">long</span> n<span class="token punctuation">)</span>  <span class="token comment">//\u8DF3\u8FC7\u5B57\u7B26\u3002</span>
<span class="token keyword">void</span>  <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5173\u95ED\u8BE5\u6D41\u5E76\u91CA\u653E\u4E0E\u4E4B\u5173\u8054\u7684\u6240\u6709\u8D44\u6E90\u3002</span>
<span class="token keyword">void</span>  <span class="token function">mark</span><span class="token punctuation">(</span><span class="token keyword">int</span> readAheadLimit<span class="token punctuation">)</span> <span class="token comment">//\u6807\u8BB0\u6D41\u4E2D\u7684\u5F53\u524D\u4F4D\u7F6E\u3002</span>
<span class="token keyword">boolean</span>  <span class="token function">markSupported</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5224\u65AD\u6B64\u6D41\u662F\u5426\u652F\u6301 mark() \u64CD\u4F5C\uFF08\u5B83\u4E00\u5B9A\u652F\u6301\uFF09\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>BufferedWriter</code></strong></p><ul><li>\u6784\u9020\u51FD\u6570</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token class-name">Writer</span> out<span class="token punctuation">,</span> <span class="token keyword">int</span> sz<span class="token punctuation">)</span> <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u4F7F\u7528\u7ED9\u5B9A\u5927\u5C0F\u8F93\u51FA\u7F13\u51B2\u533A\u7684\u65B0\u7F13\u51B2\u5B57\u7B26\u8F93\u51FA\u6D41\u3002</span>

<span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token class-name">Writer</span> out<span class="token punctuation">)</span> <span class="token comment">//\u5EFA\u4E00\u4E2A\u4F7F\u7528\u9ED8\u8BA4\u5927\u5C0F\u8F93\u51FA\u7F13\u51B2\u533A\u7684\u7F13\u51B2\u5B57\u7B26\u8F93\u51FA\u6D41\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u65B9\u6CD5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span>  <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// \u5173\u95ED\u6B64\u6D41\uFF0C\u4F46\u8981\u5148\u5237\u65B0\u5B83\u3002</span>
<span class="token keyword">void</span>  <span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//\u5237\u65B0\u8BE5\u6D41\u7684\u7F13\u51B2\u3002</span>
<span class="token keyword">void</span>  <span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u5199\u5165\u4E00\u4E2A\u884C\u5206\u9694\u7B26\u3002</span>
<span class="token keyword">void</span>  <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token comment">//\u5199\u5165\u5B57\u7B26\u6570\u7EC4\u7684\u67D0\u4E00\u90E8\u5206\u3002</span>
<span class="token keyword">void</span>  <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token comment">//\u5199\u5165\u5355\u4E2A\u5B57\u7B26\u3002</span>
<span class="token keyword">void</span>  <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span> <span class="token comment">//\u5199\u5165\u5B57\u7B26\u4E32\u7684\u67D0\u4E00\u90E8\u5206\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5B9E\u6218\u6F14\u7EC3</strong><br> \u590D\u5236F\u76D8\u91CC\u9762\u7684\u4E00\u4E2Atxt\u6587\u672C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedWriter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileWriter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Reader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Writer</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A4</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;F:/123.txt&quot;</span> <span class="token punctuation">;</span>
		<span class="token class-name">String</span> filePath2 <span class="token operator">=</span> <span class="token string">&quot;F:/abc.txt&quot;</span> <span class="token punctuation">;</span>

		<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token class-name">File</span> file2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath2 <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token function">copyFile</span><span class="token punctuation">(</span> file <span class="token punctuation">,</span> file2 <span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyFile</span><span class="token punctuation">(</span> <span class="token class-name">File</span> oldFile <span class="token punctuation">,</span> <span class="token class-name">File</span> newFile <span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>
		<span class="token class-name">BufferedReader</span> bufferedReader <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>

		<span class="token class-name">Writer</span> writer <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>
		<span class="token class-name">BufferedWriter</span> bufferedWriter  <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span> oldFile <span class="token punctuation">)</span> <span class="token punctuation">;</span>
			bufferedReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span> reader <span class="token punctuation">)</span> <span class="token punctuation">;</span>

			writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span> newFile <span class="token punctuation">)</span> <span class="token punctuation">;</span>
			bufferedWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span> writer <span class="token punctuation">)</span> <span class="token punctuation">;</span>

			<span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span> <span class="token comment">//\u6BCF\u6B21\u8BFB\u53D6\u4E00\u884C\u7684\u5185\u5BB9</span>
			<span class="token keyword">while</span> <span class="token punctuation">(</span>  <span class="token punctuation">(</span>result <span class="token operator">=</span> bufferedReader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				bufferedWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span> result <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u628A\u5185\u5BB9\u5199\u5165\u6587\u4EF6</span>
				bufferedWriter<span class="token punctuation">.</span><span class="token function">newLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u6362\u884C\uFF0Cresult \u662F\u4E00\u884C\u6570\u636E\uFF0C\u6240\u4EE5\u6CA1\u5199\u4E00\u884C\u5C31\u8981\u6362\u884C </span>
			<span class="token punctuation">}</span>

			bufferedWriter<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u5F3A\u5236\u628A\u6570\u7EC4\u5185\u5BB9\u5199\u5165\u6587\u4EF6</span>

		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				bufferedWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u5173\u95ED\u8F93\u51FA\u6D41</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				bufferedReader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u5173\u95ED\u8F93\u5165\u6D41</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A<br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwMjA3MTU0MTQ1MTQ5?x-oss-process=image/format,png" alt="\u8FD9\u91CC\u5199\u56FE\u7247\u63CF\u8FF0" loading="lazy"></p>`,16);function y(g,_){const a=p("ExternalLinkIcon");return c(),o(l,null,[n("blockquote",null,[n("p",null,[k,n("a",r,[d,t(a)]),m,v,n("a",b,[f,t(a)])])]),w],64)}var j=e(u,[["render",y],["__file","04-\u7F13\u51B2\u6D41BufferedReader\u4E0EBufferedWriter.html.vue"]]);export{j as default};
