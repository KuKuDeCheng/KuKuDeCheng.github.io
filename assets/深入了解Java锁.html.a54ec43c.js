import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as e,c as p,a as c,b as o,w as l,F as u,e as n,d as i}from"./app.9c037f97.js";const k={},r=n("\u7EE7"),d=n("\u6253\u5370Java\u5BF9\u8C61\u5934"),v=n("\uFF0C\u6211\u4EEC\u518D\u6DF1\u5165\u63A2\u7D22\u4E00\u4E0BJava\u9501\u3002\u65E0\u9501\u72B6\u6001\u6211\u4EEC\u5C31\u4E0D\u8BF4\u4E86\uFF0C\u4E0B\u9762\u6211\u4EEC\u4E00\u4E00\u6253\u5370\u504F\u5411\u9501\u3001\u8F7B\u91CF\u9501\uFF0C\u91CD\u91CF\u9501\u7684\u5BF9\u8C61\u5934\u3002"),m=i(`<h2 id="\u6253\u5370\u504F\u5411\u9501" tabindex="-1"><a class="header-anchor" href="#\u6253\u5370\u504F\u5411\u9501" aria-hidden="true">#</a> \u6253\u5370\u504F\u5411\u9501</h2><p>\u4FEE\u6539\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           05 10 80 72 (00000101 00010000 10000000 01110010) (1920995333)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           ca 7f 00 00 (11001010 01111111 00000000 00000000) (32714)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>00000101</code>\u8868\u660E\u662F\u504F\u5411\u9501\u3002</p><h2 id="\u6253\u5370\u8F7B\u91CF\u9501" tabindex="-1"><a class="header-anchor" href="#\u6253\u5370\u8F7B\u91CF\u9501" aria-hidden="true">#</a> \u6253\u5370\u8F7B\u91CF\u9501</h2><p>\u4FEE\u6539\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> thread1<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;thread1 locking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main locking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">thread1</span> <span class="token value attr-value">locking</span>
<span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           05 58 94 86 (00000101 01011000 10010100 10000110) (-2037098491)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           db 7f 00 00 (11011011 01111111 00000000 00000000) (32731)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>

<span class="token key attr-name">main</span> <span class="token value attr-value">locking</span>
<span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           88 d9 69 0e (10001000 11011001 01101001 00001110) (241817992)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           00 70 00 00 (00000000 01110000 00000000 00000000) (28672)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>00000101</code>\u8868\u793A\u8FD9\u662F\u504F\u5411\u9501\uFF0C<code>10001000</code>\u540E\u4E24\u4F4D<code>00</code>\u8868\u793A\u8FD9\u662F\u8F7B\u91CF\u9501\u3002</p><blockquote><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u6B64\u65F6\u9501\u53D1\u751F\u4E86\u5347\u7EA7\uFF0C\u7531\u504F\u5411\u9501\u5347\u7EA7\u5230\u4E86\u8F7B\u91CF\u9501\u3002</p></blockquote><p>\u4FEE\u6539\u4EE3\u7801\uFF1A\u5047\u8BBEthread1\u4E0D\u5B58\u5728\u4E86\uFF0C\u518D\u542F\u52A8thread2\uFF0C\u89C2\u5BDF\u5B9E\u4F8Ba\u662F\u4EC0\u4E48\u9501\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;thread1 locking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> thread1Id <span class="token operator">=</span> thread1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>thread1<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6DFB\u52A0\u4E00\u6BB5\u4EE3\u7801  \u6709\u6982\u7387\u4F1A\u5728thread1\u4E0D\u5B58\u5728\u4E86\u518D\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C</span>
    <span class="token keyword">boolean</span> isThread1NotOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>isThread1NotOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> activeThreadNum <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getThreadGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">activeCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token punctuation">]</span> currentThreads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">[</span>activeThreadNum<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getThreadGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span>currentThreads<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> findThread1 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span> thread <span class="token operator">:</span> currentThreads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> thread1Id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                findThread1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        isThread1NotOut <span class="token operator">=</span> findThread1<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;thread2 locking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread2<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C(\u6709\u65F6\u5019\u7684\u7ED3\u679C\u5982\u4E0B\uFF0C\u5F88\u96BE\u77E5\u9053\u4EC0\u4E48\u65F6\u5019\u7EBF\u7A0Bthread1\u4F1A\u4E0D\u5B58\u5728)\uFF1A</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">thread1</span> <span class="token value attr-value">locking</span>
<span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           05 80 84 9b (00000101 10000000 10000100 10011011) (-1685815291)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           f0 7f 00 00 (11110000 01111111 00000000 00000000) (32752)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>

TERMINATED
<span class="token key attr-name">thread2</span> <span class="token value attr-value">locking</span>
<span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           05 80 84 9b (00000101 10000000 10000100 10011011) (-1685815291)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           f0 7f 00 00 (11110000 01111111 00000000 00000000) (32752)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>00000101</code>\u53EF\u4EE5\u770B\u5230thread1\u4E0Ethread2\u8FD0\u884C\u4E2D\uFF0Ca\u90FD\u662F\u504F\u5411\u9501\uFF0C\u5E76\u6CA1\u6709\u5347\u7EA7\u3002\u5F53\u7136\u5347\u7EA7\u4E3A\u8F7B\u91CF\u9501\u7684\u6982\u7387\u8FD8\u662F\u5F88\u5927\u7684\u3002</p><blockquote><p>\u6240\u4EE5\u6211\u4EEC\u53CD\u63A8\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u5728\u7B2C\u4E00\u6B21\u8FDB\u5165\u540C\u6B65\u5757\u65F6\uFF0C\u4F1A\u5728\u5BF9\u8C61\u5934\u548C\u6808\u5E27\u4E2D\u7684\u9501\u8BB0\u5F55\u91CC\u5B58\u50A8\u9501\u7684\u504F\u5411\u7684\u7EBF\u7A0BID\u3002\u5F53\u4E0B\u6B21\u8BE5\u7EBF\u7A0B\u8FDB\u5165\u8FD9\u4E2A\u540C\u6B65\u5757\u65F6\uFF0C\u4F1A\u53BB\u68C0\u67E5\u9501\u7684Mark Word\u91CC\u9762\u662F\u4E0D\u662F\u653E\u7684\u81EA\u5DF1\u7684\u7EBF\u7A0BID\u3002\u5982\u679C\u662F\uFF0C\u8868\u660E\u8BE5\u7EBF\u7A0B\u5DF2\u7ECF\u83B7\u5F97\u4E86\u9501\uFF0C\u4EE5\u540E\u8BE5\u7EBF\u7A0B\u5728\u8FDB\u5165\u548C\u9000\u51FA\u540C\u6B65\u5757\u65F6\u4E0D\u9700\u8981\u82B1\u8D39CAS\u64CD\u4F5C\u6765\u52A0\u9501\u548C\u89E3\u9501 \uFF1B\u5982\u679C\u4E0D\u662F\uFF0C\u5C31\u4EE3\u8868\u6709\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u6765\u7ADE\u4E89\u8FD9\u4E2A\u504F\u5411\u9501\u3002\u8FD9\u4E2A\u65F6\u5019\u4F1A\u5C1D\u8BD5\u4F7F\u7528CAS\u6765\u66FF\u6362Mark Word\u91CC\u9762\u7684\u7EBF\u7A0BID\u4E3A\u65B0\u7EBF\u7A0B\u7684ID\uFF0C\u8FD9\u4E2A\u65F6\u5019\u8981\u5206\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ul><li>\u6210\u529F\uFF0C\u8868\u793A\u4E4B\u524D\u7684\u7EBF\u7A0B\u4E0D\u5B58\u5728\u4E86\uFF0C Mark Word\u91CC\u9762\u7684\u7EBF\u7A0BID\u4E3A\u65B0\u7EBF\u7A0B\u7684ID\uFF0C\u9501\u4E0D\u4F1A\u5347\u7EA7\uFF0C\u4ECD\u7136\u4E3A\u504F\u5411\u9501\uFF1B</li><li>\u5931\u8D25\uFF0C\u8868\u793A\u4E4B\u524D\u7684\u7EBF\u7A0B\u4ECD\u7136\u5B58\u5728\uFF0C\u90A3\u4E48\u6682\u505C\u4E4B\u524D\u7684\u7EBF\u7A0B\uFF0C\u8BBE\u7F6E\u504F\u5411\u9501\u6807\u8BC6\u4E3A0\uFF0C\u5E76\u8BBE\u7F6E\u9501\u6807\u5FD7\u4F4D\u4E3A00\uFF0C\u5347\u7EA7\u4E3A\u8F7B\u91CF\u7EA7\u9501\uFF0C\u4F1A\u6309\u7167\u8F7B\u91CF\u7EA7\u9501\u7684\u65B9\u5F0F\u8FDB\u884C\u7ADE\u4E89\u9501\u3002</li></ul></blockquote><h2 id="\u6253\u5370\u91CD\u91CF\u9501" tabindex="-1"><a class="header-anchor" href="#\u6253\u5370\u91CD\u91CF\u9501" aria-hidden="true">#</a> \u6253\u5370\u91CD\u91CF\u9501</h2><p>\u4FEE\u6539\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">A</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;thread1 locking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u504F\u5411\u9501</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u8BA9\u7EBF\u7A0B\u665A\u70B9\u513F\u6B7B\u4EA1\uFF0C\u9020\u6210\u9501\u7684\u7ADE\u4E89</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;thread2 locking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ClassLayout</span><span class="token punctuation">.</span><span class="token function">parseInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrintable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u504F\u5411\u9501</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u8BA9\u7EBF\u7A0B\u665A\u70B9\u513F\u6B7B\u4EA1\uFF0C\u9020\u6210\u9501\u7684\u7ADE\u4E89</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">thread1</span> <span class="token value attr-value">locking</span>
<span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           0a c8 00 d8 (00001010 11001000 00000000 11011000) (-671037430)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           cc 7f 00 00 (11001100 01111111 00000000 00000000) (32716)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>

<span class="token key attr-name">thread2</span> <span class="token value attr-value">locking</span>
<span class="token key attr-name">A</span> <span class="token value attr-value">object internals:</span>
<span class="token key attr-name"> OFFSET</span> <span class="token value attr-value"> SIZE      TYPE DESCRIPTION                               VALUE</span>
<span class="token key attr-name">      0</span> <span class="token value attr-value">    4           (object header)                           0a c8 00 d8 (00001010 11001000 00000000 11011000) (-671037430)</span>
<span class="token key attr-name">      4</span> <span class="token value attr-value">    4           (object header)                           cc 7f 00 00 (11001100 01111111 00000000 00000000) (32716)</span>
<span class="token key attr-name">      8</span> <span class="token value attr-value">    4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span>
<span class="token key attr-name">     12</span> <span class="token value attr-value">    1   boolean A.flag                                    false</span>
<span class="token key attr-name">     13</span> <span class="token value attr-value">    3           (loss due to the next object alignment)</span>
<span class="token key attr-name">Instance</span> <span class="token value attr-value">size: 16 bytes</span>
<span class="token key attr-name">Space</span> <span class="token value attr-value">losses: 0 bytes internal + 3 bytes external = 3 bytes total</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>00001010</code>\u8868\u660E\u8FD9\u4E2Aa\u5DF2\u7ECF\u5347\u7EA7\u4E3A\u91CD\u91CF\u9501\u3002</p>`,25);function b(y,h){const s=t("RouterLink");return e(),p(u,null,[c("p",null,[r,o(s,{to:"/JAVA/%E6%89%93%E5%8D%B0Java%E5%AF%B9%E8%B1%A1%E5%A4%B4.html"},{default:l(()=>[d]),_:1}),v]),m],64)}var T=a(k,[["render",b],["__file","\u6DF1\u5165\u4E86\u89E3Java\u9501.html.vue"]]);export{T as default};
