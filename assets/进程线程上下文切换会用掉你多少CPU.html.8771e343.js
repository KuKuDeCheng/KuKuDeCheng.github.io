import{_ as n,a as s}from"./\u4E0A\u4E0B\u6587\u5207\u63622.95c0f045.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as t,d as e}from"./app.0a7c44f6.js";const c={},o=e('<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>\u8FDB\u7A0B\u662F\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4F1F\u5927\u53D1\u660E\u4E4B\u4E00\uFF0C\u5BF9\u5E94\u7528\u7A0B\u5E8F\u5C4F\u853D\u4E86CPU\u8C03\u5EA6\u3001\u5185\u5B58\u7BA1\u7406\u7B49\u786C\u4EF6\u7EC6\u8282\uFF0C\u800C\u62BD\u8C61\u51FA\u4E00\u4E2A\u8FDB\u7A0B\u7684\u6982\u5FF5\uFF0C\u8BA9\u5E94\u7528\u7A0B\u5E8F\u4E13\u5FC3\u4E8E\u5B9E\u73B0\u81EA\u5DF1\u7684\u4E1A\u52A1\u903B\u8F91\u65E2\u53EF\uFF0C\u800C\u4E14\u5728\u6709\u9650\u7684CPU\u4E0A\u53EF\u4EE5\u201C\u540C\u65F6\u201D\u8FDB\u884C\u8BB8\u591A\u4E2A\u4EFB\u52A1\u3002\u4F46\u662F\u5B83\u4E3A\u7528\u6237\u5E26\u6765\u65B9\u4FBF\u7684\u540C\u65F6\uFF0C\u4E5F\u5F15\u5165\u4E86\u4E00\u4E9B\u989D\u5916\u7684\u5F00\u9500\u3002\u5982\u4E0B\u56FE\uFF0C\u5728\u8FDB\u7A0B\u8FD0\u884C\u4E2D\u95F4\u7684\u65F6\u95F4\u91CC\uFF0C\u867D\u7136CPU\u4E5F\u5728\u5FD9\u4E8E\u5E72\u6D3B\uFF0C\u4F46\u662F\u5374\u6CA1\u6709\u5B8C\u6210\u4EFB\u4F55\u7684\u7528\u6237\u5DE5\u4F5C\uFF0C\u8FD9\u5C31\u662F\u8FDB\u7A0B\u673A\u5236\u5E26\u6765\u7684\u989D\u5916\u5F00\u9500\u3002</p><p><img src="'+n+'" alt="" loading="lazy"></p><p>\u5728\u8FDB\u7A0BA\u5207\u6362\u5230\u8FDB\u7A0BB\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5148\u4FDD\u5B58A\u8FDB\u7A0B\u7684\u4E0A\u4E0B\u6587\uFF0C\u4EE5\u4FBF\u4E8E\u7B49A\u6062\u590D\u8FD0\u884C\u7684\u65F6\u5019\uFF0C\u80FD\u591F\u77E5\u9053A\u8FDB\u7A0B\u7684\u4E0B\u4E00\u6761\u6307\u4EE4\u662F\u5565\u3002\u7136\u540E\u5C06\u8981\u8FD0\u884C\u7684B\u8FDB\u7A0B\u7684\u4E0A\u4E0B\u6587\u6062\u590D\u5230\u5BC4\u5B58\u5668\u4E2D\u3002\u8FD9\u4E2A\u8FC7\u7A0B\u88AB\u79F0\u4E3A\u4E0A\u4E0B\u6587\u5207\u6362\u3002\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u5728\u8FDB\u7A0B\u4E0D\u591A\u3001\u5207\u6362\u4E0D\u9891\u7E41\u7684\u5E94\u7528\u573A\u666F\u4E0B\u95EE\u9898\u4E0D\u5927\u3002\u4F46\u662F\u73B0\u5728Linux\u64CD\u4F5C\u7CFB\u7EDF\u88AB\u7528\u5230\u4E86\u9AD8\u5E76\u53D1\u7684\u7F51\u7EDC\u7A0B\u5E8F\u540E\u7AEF\u670D\u52A1\u5668\u3002\u5728\u5355\u673A\u652F\u6301\u6210\u5343\u4E0A\u4E07\u4E2A\u7528\u6237\u8BF7\u6C42\u7684\u65F6\u5019\uFF0C\u8FD9\u4E2A\u5F00\u9500\u5C31\u5F97\u62FF\u51FA\u6765\u8BF4\u9053\u8BF4\u9053\u4E86\u3002\u56E0\u4E3A\u7528\u6237\u8FDB\u7A0B\u5728\u8BF7\u6C42Redis\u3001Mysql\u6570\u636E\u7B49\u7F51\u7EDCIO<code>\u963B\u585E\u6389</code>\u7684\u65F6\u5019\uFF0C\u6216\u8005\u5728<code>\u8FDB\u7A0B\u65F6\u95F4\u7247\u5230\u4E86</code>\uFF0C\u90FD\u4F1A<code>\u5F15\u53D1\u4E0A\u4E0B\u6587\u5207\u6362</code>\u3002</p><p><img src="'+s+`" alt="" loading="lazy"></p><h2 id="\u4E00\u4E2A\u7B80\u5355\u7684\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u6D4B\u8BD5\u5B9E\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u7B80\u5355\u7684\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u6D4B\u8BD5\u5B9E\u9A8C" aria-hidden="true">#</a> \u4E00\u4E2A\u7B80\u5355\u7684\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u6D4B\u8BD5\u5B9E\u9A8C</h2><p>\u6211\u4EEC\u5148\u7528\u4E2A\u5B9E\u9A8C\u6D4B\u8BD5\u4E00\u4E0B\uFF0C\u5230\u5E95\u4E00\u6B21\u4E0A\u4E0B\u6587\u5207\u6362\u9700\u8981\u591A\u957F\u7684CPU\u65F6\u95F4\uFF01\u5B9E\u9A8C\u65B9\u6CD5\u662F\u521B\u5EFA\u4E24\u4E2A\u8FDB\u7A0B\u5E76\u5728\u5B83\u4EEC\u4E4B\u95F4\u4F20\u9001\u4E00\u4E2A\u4EE4\u724C\u3002\u5176\u4E2D\u4E00\u4E2A\u8FDB\u7A0B\u5728\u8BFB\u53D6\u4EE4\u724C\u65F6\u5C31\u4F1A\u5F15\u8D77\u963B\u585E\u3002\u53E6\u4E00\u4E2A\u8FDB\u7A0B\u53D1\u9001\u4EE4\u724C\u540E\u7B49\u5F85\u5176\u8FD4\u56DE\u65F6\u4E5F\u5904\u4E8E\u963B\u585E\u72B6\u6001\u3002\u5982\u6B64\u5F80\u8FD4\u4F20\u9001\u4E00\u5B9A\u7684\u6B21\u6570\uFF0C\u7136\u540E\u7EDF\u8BA1\u4ED6\u4EEC\u7684\u5E73\u5747\u5355\u6B21\u5207\u6362\u65F6\u95F4\u5F00\u9500\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/time.h&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sched.h&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span>  </span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span>      <span class="token comment">//pipe()  </span></span>
  
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
<span class="token punctuation">{</span>  
    <span class="token keyword">int</span> x<span class="token punctuation">,</span> i<span class="token punctuation">,</span> fd<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
    <span class="token keyword">char</span> send    <span class="token operator">=</span> <span class="token char">&#39;s&#39;</span><span class="token punctuation">;</span>  
    <span class="token keyword">char</span> receive<span class="token punctuation">;</span>  
    <span class="token function">pipe</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token function">pipe</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">struct</span> <span class="token class-name">timeval</span> tv<span class="token punctuation">;</span>  
    <span class="token keyword">struct</span> <span class="token class-name">sched_param</span> param<span class="token punctuation">;</span>  
    param<span class="token punctuation">.</span>sched_priority <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token function">sched_setscheduler</span><span class="token punctuation">(</span><span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SCHED_FIFO<span class="token punctuation">,</span> <span class="token operator">&amp;</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tv<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before Context Switch Time%u s, %u us\\n&quot;</span><span class="token punctuation">,</span> tv<span class="token punctuation">.</span>tv_sec<span class="token punctuation">,</span> tv<span class="token punctuation">.</span>tv_usec<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">read</span><span class="token punctuation">(</span>fd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>receive<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token function">write</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>send<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">else</span> <span class="token punctuation">{</span>  
        <span class="token function">sched_setscheduler</span><span class="token punctuation">(</span><span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> SCHED_FIFO<span class="token punctuation">,</span> <span class="token operator">&amp;</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token function">write</span><span class="token punctuation">(</span>fd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>send<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token function">read</span><span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>receive<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tv<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;After Context SWitch Time%u s, %u us\\n&quot;</span><span class="token punctuation">,</span> tv<span class="token punctuation">.</span>tv_sec<span class="token punctuation">,</span> tv<span class="token punctuation">.</span>tv_usec<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># gcc main.c -o main
# ./main./main
Before Context Switch Time1565352257 s, 774767 us
After Context SWitch Time1565352257 s, 842852 us
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u6B21\u6267\u884C\u7684\u65F6\u95F4\u4F1A\u6709\u5DEE\u5F02\uFF0C\u591A\u6B21\u8FD0\u884C\u540E\u5E73\u5747\u6BCF\u6B21\u4E0A\u4E0B\u6587\u5207\u6362\u8017\u65F63.5us\u5DE6\u53F3\u3002\u5F53\u7136\u4E86\u8FD9\u4E2A\u6570\u5B57\u56E0\u673A\u5668\u800C\u5F02\uFF0C\u800C\u4E14\u5EFA\u8BAE\u5728\u5B9E\u673A\u4E0A\u6D4B\u8BD5\u3002</p><blockquote><p>1s = 1000 ms; 1ms = 1000us; 1us = 1000ns;</p></blockquote><p>\u524D\u9762\u6211\u4EEC\u6D4B\u8BD5\u7CFB\u7EDF\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u6700\u4F4E\u503C\u662F200ns\u3002\u53EF\u89C1\uFF0C<code>\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u8981\u6BD4\u7CFB\u7EDF\u8C03\u7528\u7684\u5F00\u9500\u8981\u5927</code>\u3002<code>\u7CFB\u7EDF\u8C03\u7528\u53EA\u662F\u5728\u8FDB\u7A0B\u5185\u5C06\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\uFF0C\u7136\u540E\u518D\u5207\u56DE\u6765\uFF0C\u800C\u4E0A\u4E0B\u6587\u5207\u6362\u53EF\u662F\u76F4\u63A5\u4ECE\u8FDB\u7A0BA\u5207\u6362\u5230\u4E86\u8FDB\u7A0BB\u3002</code>\u663E\u7136\u8FD9\u4E2A\u4E0A\u4E0B\u6587\u5207\u6362\u9700\u8981\u5B8C\u6210\u7684\u5DE5\u4F5C\u91CF\u66F4\u5927\u3002</p><h2 id="\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u90FD\u6709\u54EA\u4E9B" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u90FD\u6709\u54EA\u4E9B" aria-hidden="true">#</a> \u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u90FD\u6709\u54EA\u4E9B</h2><p>\u90A3\u4E48\u4E0A\u4E0B\u6587\u5207\u6362\u7684\u65F6\u5019\uFF0CCPU\u7684\u5F00\u9500\u90FD\u5177\u4F53\u6709\u54EA\u4E9B\u5462\uFF1F\u5F00\u9500\u5206\u6210\u4E24\u79CD\uFF0C\u4E00\u79CD\u662F\u76F4\u63A5\u5F00\u9500\u3001\u4E00\u79CD\u662F\u95F4\u63A5\u5F00\u9500\u3002</p><p><code>\u76F4\u63A5\u5F00\u9500</code>\u5C31\u662F\u5728\u5207\u6362\u65F6\uFF0Ccpu\u5FC5\u987B\u505A\u7684\u4E8B\u60C5\uFF0C\u5305\u62EC\uFF1A</p><ul><li><p>1\u3001\u5207\u6362\u9875\u8868\u5168\u5C40\u76EE\u5F55</p></li><li><p>2\u3001\u5207\u6362\u5185\u6838\u6001\u5806\u6808</p></li><li><p>3\u3001\u5207\u6362\u786C\u4EF6\u4E0A\u4E0B\u6587\uFF08\u8FDB\u7A0B\u6062\u590D\u524D\uFF0C<code>\u5FC5\u987B\u88C5\u5165\u5BC4\u5B58\u5668\u7684\u6570\u636E\u7EDF\u79F0\u4E3A\u786C\u4EF6\u4E0A\u4E0B\u6587</code>\uFF09</p><ul><li>ip(instruction pointer)\uFF1A\u6307\u5411\u5F53\u524D\u6267\u884C\u6307\u4EE4\u7684\u4E0B\u4E00\u6761\u6307\u4EE4</li><li>bp(base pointer): \u7528\u4E8E\u5B58\u653E\u6267\u884C\u4E2D\u7684\u51FD\u6570\u5BF9\u5E94\u7684\u6808\u5E27\u7684\u6808\u5E95\u5730\u5740</li><li>sp(stack poinger): \u7528\u4E8E\u5B58\u653E\u6267\u884C\u4E2D\u7684\u51FD\u6570\u5BF9\u5E94\u7684\u6808\u5E27\u7684\u6808\u9876\u5730\u5740</li><li>cr3:\u9875\u76EE\u5F55\u57FA\u5740\u5BC4\u5B58\u5668\uFF0C\u4FDD\u5B58\u9875\u76EE\u5F55\u8868\u7684\u7269\u7406\u5730\u5740</li><li>......</li></ul></li><li><p>4\u3001\u5237\u65B0TLB\uFF1A<code>(Translation Lookaside Buffer)\u8F6C\u6362\u68C0\u6D4B\u7F13\u51B2\u533A\u662F\u4E00\u4E2A\u5185\u5B58\u7BA1\u7406\u5355\u5143,\u7528\u4E8E\u6539\u8FDB\u865A\u62DF\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u8F6C\u6362\u901F\u5EA6\u7684\u7F13\u5B58\u3002</code></p></li><li><p>5\u3001\u7CFB\u7EDF\u8C03\u5EA6\u5668\u7684\u4EE3\u7801\u6267\u884C</p></li></ul><p><code>\u95F4\u63A5\u5F00\u9500</code>\u4E3B\u8981\u6307\u7684\u662F\u867D\u7136\u5207\u6362\u5230\u4E00\u4E2A\u65B0\u8FDB\u7A0B\u540E\uFF0C\u7531\u4E8E\u5404\u79CD<code>\u7F13\u5B58\u5E76\u4E0D\u70ED</code>\uFF0C\u901F\u5EA6\u8FD0\u884C\u4F1A\u6162\u4E00\u4E9B\u3002\u5982\u679C\u8FDB\u7A0B\u59CB\u7EC8\u90FD\u5728\u4E00\u4E2ACPU\u4E0A\u8C03\u5EA6\u8FD8\u597D\u4E00\u4E9B\uFF0C\u5982\u679C<code>\u8DE8CPU</code>\u7684\u8BDD\uFF0C\u4E4B\u524D\u70ED\u8D77\u6765\u7684TLB\u3001L1\u3001L2\u3001L3\u56E0\u4E3A\u8FD0\u884C\u7684\u8FDB\u7A0B\u5DF2\u7ECF\u53D8\u4E86\uFF0C\u6240\u4EE5\u4EE5\u5C40\u90E8\u6027\u539F\u7406cache\u8D77\u6765\u7684\u4EE3\u7801\u3001\u6570\u636E\u4E5F\u90FD\u6CA1\u6709\u7528\u4E86\uFF0C\u5BFC\u81F4\u65B0\u8FDB\u7A0B\u7A7F\u900F\u5230\u5185\u5B58\u7684IO\u4F1A\u53D8\u591A\u3002 \u5176\u5B9E\u6211\u4EEC\u4E0A\u9762\u7684\u5B9E\u9A8C\u5E76\u6CA1\u6709\u5F88\u597D\u5730\u6D4B\u91CF\u5230\u8FD9\u79CD\u60C5\u51B5\uFF0C\u6240\u4EE5\u5B9E\u9645\u7684\u4E0A\u4E0B\u6587\u5207\u6362\u5F00\u9500\u53EF\u80FD\u6BD43.5us\u8981\u5927\u3002</p><h2 id="\u4E00\u4E2A\u66F4\u4E3A\u4E13\u4E1A\u7684\u6D4B\u8BD5\u5DE5\u5177-lmbench" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u66F4\u4E3A\u4E13\u4E1A\u7684\u6D4B\u8BD5\u5DE5\u5177-lmbench" aria-hidden="true">#</a> \u4E00\u4E2A\u66F4\u4E3A\u4E13\u4E1A\u7684\u6D4B\u8BD5\u5DE5\u5177-lmbench</h2><p>lmbench\u7528\u4E8E\u8BC4\u4EF7\u7CFB\u7EDF\u7EFC\u5408\u6027\u80FD\u7684\u591A\u5E73\u53F0\u5F00\u6E90benchmark\uFF0C\u80FD\u591F\u6D4B\u8BD5\u5305\u62EC\u6587\u6863\u8BFB\u5199\u3001\u5185\u5B58\u64CD\u4F5C\u3001\u8FDB\u7A0B\u521B\u5EFA\u9500\u6BC1\u5F00\u9500\u3001\u7F51\u7EDC\u7B49\u6027\u80FD\u3002\u4F7F\u7528\u65B9\u6CD5\u7B80\u5355\uFF0C\u4F46\u5C31\u662F\u8DD1\u6709\u70B9\u6162\uFF0C\u611F\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u81EA\u5DF1\u8BD5\u4E00\u8BD5\u3002 \u8FD9\u4E2A\u5DE5\u5177\u7684\u4F18\u52BF\u662F\u662F\u8FDB\u884C\u4E86\u591A\u7EC4\u5B9E\u9A8C\uFF0C\u6BCF\u7EC42\u4E2A\u8FDB\u7A0B\u30018\u4E2A\u300116\u4E2A\u3002\u6BCF\u4E2A\u8FDB\u7A0B\u4F7F\u7528\u7684\u6570\u636E\u5927\u5C0F\u4E5F\u5728\u53D8\uFF0C\u5145\u5206\u6A21\u62DFcache miss\u9020\u6210\u7684\u5F71\u54CD\u3002\u6211\u7528\u4ED6\u6D4B\u4E86\u4E00\u4E0B\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-------------------------------------------------------------------------
Host                 OS  2p/0K 2p/16K 2p/64K 8p/16K 8p/64K 16p/16K 16p/64K  
                         ctxsw  ctxsw  ctxsw ctxsw  ctxsw   ctxsw   ctxsw  
--------- ------------- ------ ------ ------ ------ ------ ------- -------  
bjzw_46_7 Linux 2.6.32- 2.7800 2.7800 2.7000 4.3800 4.0400 4.75000 5.48000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>lmbench\u663E\u793A\u7684\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u8017\u65F6\u4ECE2.7us\u52305.48\u4E4B\u95F4\u3002</p><h2 id="\u7EBF\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u8017\u65F6" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u8017\u65F6" aria-hidden="true">#</a> \u7EBF\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u8017\u65F6</h2><p>\u524D\u9762\u6211\u4EEC\u6D4B\u8BD5\u4E86\u8FDB\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u7684\u5F00\u9500\uFF0C\u6211\u4EEC\u518D\u7EE7\u7EED\u5728Linux\u6D4B\u8BD5\u4E00\u4E0B\u7EBF\u7A0B\u3002\u770B\u770B\u7A76\u7ADF\u6BD4\u8FDB\u7A0B\u80FD\u4E0D\u80FD\u5FEB\u4E00\u4E9B\uFF0C\u5FEB\u7684\u8BDD\u80FD\u5FEB\u591A\u5C11\u3002</p><p>\u5728Linux\u4E0B\u5176\u5B9E\u672C\u5E76\u6CA1\u6709\u7EBF\u7A0B\uFF0C\u53EA\u662F\u4E3A\u4E86\u8FCE\u5408\u5F00\u53D1\u8005\u53E3\u5473\uFF0C\u641E\u4E86\u4E2A\u8F7B\u91CF\u7EA7\u8FDB\u7A0B\u51FA\u6765\u5C31\u53EB\u505A\u4E86\u7EBF\u7A0B\u3002\u8F7B\u91CF\u7EA7\u8FDB\u7A0B\u548C\u8FDB\u7A0B\u4E00\u6837\uFF0C\u90FD\u6709\u81EA\u5DF1\u72EC\u7ACB\u7684task_struct\u8FDB\u7A0B\u63CF\u8FF0\u7B26\uFF0C\u4E5F\u90FD\u6709\u81EA\u5DF1\u72EC\u7ACB\u7684pid\u3002\u4ECE\u64CD\u4F5C\u7CFB\u7EDF\u89C6\u89D2\u770B\uFF0C\u8C03\u5EA6\u4E0A\u548C\u8FDB\u7A0B\u6CA1\u6709\u4EC0\u4E48\u533A\u522B\uFF0C\u90FD\u662F\u5728\u7B49\u5F85\u961F\u5217\u7684\u53CC\u5411\u94FE\u8868\u91CC\u9009\u62E9\u4E00\u4E2Atask_struct\u5207\u5230\u8FD0\u884C\u6001\u800C\u5DF2\u3002\u53EA\u4E0D\u8FC7\u8F7B\u91CF\u7EA7\u8FDB\u7A0B\u548C\u666E\u901A\u8FDB\u7A0B\u7684\u533A\u522B\u662F\u53EF\u4EE5\u5171\u4EAB\u540C\u4E00\u5185\u5B58\u5730\u5740\u7A7A\u95F4\u3001\u4EE3\u7801\u6BB5\u3001\u5168\u5C40\u53D8\u91CF\u3001\u540C\u4E00\u6253\u5F00\u6587\u4EF6\u96C6\u5408\u800C\u5DF2\u3002</p><blockquote><p>\u540C\u4E00\u8FDB\u7A0B\u4E0B\u7684\u7EBF\u7A0B\u4E4B\u6240\u6709getpid()\u770B\u5230\u7684pid\u662F\u4E00\u6837\u7684\uFF0C\u5176\u5B9Etask_struct\u91CC\u8FD8\u6709\u4E00\u4E2Atgid\u5B57\u6BB5\u3002 \u5BF9\u4E8E\u591A\u7EBF\u7A0B\u7A0B\u5E8F\u6765\u8BF4\uFF0Cgetpid()\u7CFB\u7EDF\u8C03\u7528\u83B7\u53D6\u7684\u5B9E\u9645\u4E0A\u662F\u8FD9\u4E2Atgid\uFF0C\u56E0\u6B64\u96B6\u5C5E\u540C\u4E00\u8FDB\u7A0B\u7684\u591A\u7EBF\u7A0B\u770B\u8D77\u6765PID\u76F8\u540C\u3002</p></blockquote><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/time.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;pthread.h&gt;</span></span>

<span class="token keyword">int</span> pipes<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> buffer<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> running <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">inti</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">pipe</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pipes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">distroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">close</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">close</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">double</span> <span class="token function">self_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">20000</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">timeval</span> start<span class="token punctuation">,</span> end<span class="token punctuation">;</span>
    <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>start<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">write</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">read</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>end<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1000000</span><span class="token operator">*</span><span class="token punctuation">(</span>end<span class="token punctuation">.</span>tv_sec<span class="token operator">-</span>start<span class="token punctuation">.</span>tv_sec<span class="token punctuation">)</span><span class="token operator">+</span> end<span class="token punctuation">.</span>tv_usec<span class="token operator">-</span>start<span class="token punctuation">.</span>tv_usec<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">20000</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">_test</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span>arg<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> in <span class="token operator">=</span> pipes<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> to <span class="token operator">=</span> pipes<span class="token punctuation">[</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>running<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">read</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">write</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">double</span> <span class="token function">threading_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">timeval</span> start<span class="token punctuation">,</span> end<span class="token punctuation">;</span>
    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">--</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>_test<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>pipes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    i <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
    <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>start<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">write</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">read</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>end<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    running <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">write</span><span class="token punctuation">(</span>pipes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>buffer<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1000000</span><span class="token operator">*</span><span class="token punctuation">(</span>end<span class="token punctuation">.</span>tv_sec<span class="token operator">-</span>start<span class="token punctuation">.</span>tv_sec<span class="token punctuation">)</span><span class="token operator">+</span> end<span class="token punctuation">.</span>tv_usec<span class="token operator">-</span>start<span class="token punctuation">.</span>tv_usec<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10000</span><span class="token operator">/</span><span class="token number">20</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">inti</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%6.6f\\n&quot;</span><span class="token punctuation">,</span><span class="token function">self_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%6.6f\\n&quot;</span><span class="token punctuation">,</span><span class="token function">threading_test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">distroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u539F\u7406\u548C\u8FDB\u7A0B\u6D4B\u8BD5\u5DEE\u4E0D\u591A\uFF0C\u521B\u5EFA\u4E8620\u4E2A\u7EBF\u7A0B\uFF0C\u5728\u7EBF\u7A0B\u4E4B\u95F4\u901A\u8FC7\u7BA1\u9053\u6765\u4F20\u9012\u4FE1\u53F7\u3002\u63A5\u5230\u4FE1\u53F7\u5C31\u5524\u9192\uFF0C\u7136\u540E\u518D\u4F20\u9012\u4FE1\u53F7\u7ED9\u4E0B\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u81EA\u5DF1\u7761\u7720\u3002 \u8FD9\u4E2A\u5B9E\u9A8C\u91CC\u5355\u72EC\u8003\u8651\u4E86\u7ED9\u7BA1\u9053\u4F20\u9012\u4FE1\u53F7\u7684\u989D\u5916\u5F00\u9500\uFF0C\u5E76\u5728\u7B2C\u4E00\u6B65\u5C31\u7EDF\u8BA1\u4E86\u51FA\u6765\uFF0C\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># gcc -lpthread main.c -o main
0.508250  
4.363495
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u6B21\u5B9E\u9A8C\u7ED3\u679C\u4F1A\u6709\u4E00\u4E9B\u5DEE\u5F02\uFF0C\u4E0A\u9762\u7684\u7ED3\u679C\u662F\u53D6\u4E86\u591A\u6B21\u7684\u7ED3\u679C\u4E4B\u540E\u7136\u540E\u5E73\u5747\u7684\uFF0C\u5927\u7EA6\u6BCF\u6B21\u7EBF\u7A0B\u5207\u6362\u5F00\u9500\u5927\u7EA6\u662F3.8us\u5DE6\u53F3\u3002<code>\u4ECE\u4E0A\u4E0B\u6587\u5207\u6362\u7684\u8017\u65F6\u4E0A\u6765\u770B\uFF0CLinux\u7EBF\u7A0B\uFF08\u8F7B\u91CF\u7EA7\u8FDB\u7A0B\uFF09\u5176\u5B9E\u548C\u8FDB\u7A0B\u5DEE\u522B\u4E0D\u592A\u5927\u3002</code></p><h2 id="linux\u76F8\u5173\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#linux\u76F8\u5173\u547D\u4EE4" aria-hidden="true">#</a> Linux\u76F8\u5173\u547D\u4EE4</h2><p>\u65E2\u7136\u6211\u4EEC\u77E5\u9053\u4E86\u4E0A\u4E0B\u6587\u5207\u6362\u6BD4\u8F83\u7684\u6D88\u8017CPU\u65F6\u95F4\uFF0C\u90A3\u4E48\u6211\u4EEC\u901A\u8FC7\u4EC0\u4E48\u5DE5\u5177\u53EF\u4EE5\u67E5\u770B\u4E00\u4E0BLinux\u91CC\u7A76\u7ADF\u5728\u53D1\u751F\u591A\u5C11\u5207\u6362\u5462\uFF1F\u5982\u679C\u4E0A\u4E0B\u6587\u5207\u6362\u5DF2\u7ECF\u5F71\u54CD\u5230\u4E86\u7CFB\u7EDF\u6574\u4F53\u6027\u80FD\uFF0C\u6211\u4EEC\u6709\u6CA1\u6709\u529E\u6CD5\u628A\u6709\u95EE\u9898\u7684\u8FDB\u7A0B\u63EA\u51FA\u6765\uFF0C\u5E76\u628A\u5B83\u4F18\u5316\u6389\u5462\uFF1F</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># vmstat 1  
procs -----------memory---------- ---swap-- -----io---- --system--  -----cpu-----  
 r  b   swpd   free   buff  cache   si   so    bi    bo    in    cs us sy id wa st  
 2  0      0 595504   5724 190884    0    0   295   297     0     0 14  6 75  0  4  
 5  0      0 593016   5732 193288    0    0     0    92 19889 29104 20  6 67  0  7  
 3  0      0 591292   5732 195476    0    0     0     0 20151 28487 20  6 66  0  8  
 4  0      0 589296   5732 196800    0    0   116   384 19326 27693 20  7 67  0  7  
 4  0      0 586956   5740 199496    0    0   216    24 18321 24018 22  8 62  0  8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># sar -w 1  
proc/s  
     Total number of tasks created per second.  
cswch/s  
     Total number of context switches per second.  
11:19:20 AM    proc/s   cswch/s  
11:19:21 AM    110.28  23468.22  
11:19:22 AM    128.85  33910.58  
11:19:23 AM     47.52  40733.66  
11:19:24 AM     35.85  30972.64  
11:19:25 AM     47.62  24951.43  
11:19:26 AM     47.52  42950.50  
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u56FE\u7684\u73AF\u5883\u662F\u4E00\u53F0\u751F\u4EA7\u73AF\u5883\u673A\u5668\uFF0C\u914D\u7F6E\u662F8\u68388G\u7684KVM\u865A\u673A\uFF0C\u73AF\u5883\u662F\u5728nginx+fpm\u7684\uFF0Cfpm\u6570\u91CF\u4E3A1000\uFF0C\u5E73\u5747\u6BCF\u79D2\u5904\u7406\u7684\u7528\u6237\u63A5\u53E3\u8BF7\u6C42\u5927\u7EA6100\u5DE6\u53F3\u3002\u5176\u4E2Dcs\u5217\u8868\u793A\u7684\u5C31\u662F\u57281s\u5185\u7CFB\u7EDF\u53D1\u751F\u7684\u4E0A\u4E0B\u6587\u5207\u6362\u6B21\u6570\uFF0C\u5927\u7EA61s\u5207\u6362\u6B21\u6570\u90FD\u8FBE\u52304W\u6B21\u4E86\u3002\u7C97\u7565\u4F30\u7B97\u4E00\u4E0B\uFF0C\u6BCF\u6838\u5927\u7EA6\u6BCF\u79D2\u9700\u8981\u5207\u63625K\u6B21\uFF0C\u52191s\u5185\u9700\u8981\u82B1\u5C06\u8FD120ms\u5728\u4E0A\u4E0B\u6587\u5207\u6362\u4E0A\u3002\u8981\u77E5\u9053\u8FD9\u662F\u865A\u673A\uFF0C\u672C\u8EAB\u5728\u865A\u62DF\u5316\u4E0A\u8FD8\u4F1A\u6709\u4E00\u4E9B\u989D\u5916\u5F00\u9500\uFF0C\u800C\u4E14\u8FD8\u8981\u771F\u6B63\u6D88\u8017CPU\u5728\u7528\u6237\u63A5\u53E3\u903B\u8F91\u5904\u7406\u3001\u7CFB\u7EDF\u8C03\u7528\u5185\u6838\u903B\u8F91\u5904\u7406\u3001\u4EE5\u53CA\u7F51\u7EDC\u8FDE\u63A5\u7684\u5904\u7406\u4EE5\u53CA\u8F6F\u4E2D\u65AD\uFF0C\u6240\u4EE520ms\u7684\u5F00\u9500\u5B9E\u9645\u4E0A\u4E0D\u4F4E\u4E86\u3002</p><p>\u90A3\u4E48\u8FDB\u4E00\u6B65\uFF0C\u6211\u4EEC\u770B\u4E0B\u5230\u5E95\u662F\u54EA\u4E9B\u8FDB\u7A0B\u5BFC\u81F4\u4E86\u9891\u7E41\u7684\u4E0A\u4E0B\u6587\u5207\u6362\uFF1F</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># pidstat -w 1  
11:07:56 AM       PID   cswch/s nvcswch/s  Command
11:07:56 AM     32316      4.00      0.00  php-fpm  
11:07:56 AM     32508    160.00     34.00  php-fpm  
11:07:56 AM     32726    131.00      8.00  php-fpm  
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8Efpm\u662F\u540C\u6B65\u963B\u585E\u7684\u6A21\u5F0F\uFF0C\u6BCF\u5F53\u8BF7\u6C42Redis\u3001Memcache\u3001Mysql\u7684\u65F6\u5019\u5C31\u4F1A\u963B\u585E\u5BFC\u81F4cswch/s\u81EA\u613F\u4E0A\u4E0B\u6587\u5207\u6362\uFF0C\u800C\u53EA\u6709\u65F6\u95F4\u7247\u5230\u4E86\u4E4B\u540E\u624D\u4F1A\u89E6\u53D1nvcswch/s\u975E\u81EA\u613F\u5207\u6362\u3002\u53EF\u89C1fpm\u8FDB\u7A0B\u5927\u90E8\u5206\u7684\u5207\u6362\u90FD\u662F\u81EA\u613F\u7684\u3001\u975E\u81EA\u613F\u7684\u6BD4\u8F83\u5C11\u3002</p><p>\u5982\u679C\u60F3\u67E5\u770B\u5177\u4F53\u67D0\u4E2A\u8FDB\u7A0B\u7684\u4E0A\u4E0B\u6587\u5207\u6362\u603B\u60C5\u51B5\uFF0C\u53EF\u4EE5\u5728/proc\u63A5\u53E3\u4E0B\u76F4\u63A5\u770B\uFF0C\u4E0D\u8FC7\u8FD9\u4E2A\u662F\u603B\u503C\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>grep ctxt /proc/32583/status  
voluntary_ctxt_switches:        573066  
nonvoluntary_ctxt_switches:     89260
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u672C\u8282\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u672C\u8282\u7ED3\u8BBA" aria-hidden="true">#</a> \u672C\u8282\u7ED3\u8BBA</h2><p>\u4E0A\u4E0B\u6587\u5207\u6362\u5177\u4F53\u505A\u54EA\u4E9B\u4E8B\u60C5\u6211\u4EEC\u6CA1\u6709\u5FC5\u8981\u8BB0\uFF0C\u53EA\u9700\u8981\u8BB0\u4F4F\u4E00\u4E2A\u7ED3\u8BBA\u65E2\u53EF\uFF0C\u6D4B\u5F97\u4F5C\u8005\u5F00\u53D1\u673A\u4E0A\u4E0B\u6587\u5207\u6362\u7684\u5F00\u9500\u5927\u7EA6\u662F2.7-5.48us\u5DE6\u53F3\uFF0C\u4F60\u81EA\u5DF1\u7684\u673A\u5668\u53EF\u4EE5\u7528\u6211\u63D0\u4F9B\u7684\u4EE3\u7801\u6216\u5DE5\u5177\u8FDB\u884C\u4E00\u756A\u6D4B\u8BD5\u3002lmbench\u76F8\u5BF9\u66F4\u51C6\u786E\u4E00\u4E9B\uFF0C\u56E0\u4E3A\u8003\u8651\u4E86\u5207\u6362\u540ECache miss\u5BFC\u81F4\u7684\u989D\u5916\u5F00\u9500\u3002</p>`,42),i=[o];function l(u,k){return p(),t("div",null,i)}var m=a(c,[["render",l],["__file","\u8FDB\u7A0B\u7EBF\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u4F1A\u7528\u6389\u4F60\u591A\u5C11CPU.html.vue"]]);export{m as default};
