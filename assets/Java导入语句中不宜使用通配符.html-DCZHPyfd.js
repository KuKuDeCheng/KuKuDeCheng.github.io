import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o,b as t}from"./app-BuJj135v.js";const n={},i=t("ol",null,[t("li",null,"它有助于识别类名冲突：在不同包中具有相同名称的两个类。这可以用*import。"),t("li",null,"它使依赖关系变得明确，并且让代码的可读性变强。"),t("li",null,"它能加快编译速度，因为编译器不需要搜索整个包来识别依赖项，尽管这在现代编译器中通常不是什么大问题。"),t("li",null,"使用现代IDE可以将显式导入的不便方面降至最低。 大多数IDE允许您折叠导入部分，因此它不会妨碍，在需要时自动填充导入，并自动识别未使用的导入以帮助清除它们。")],-1),r=t("p",null,"所以显式导入作为编码标准的一部分",-1),l=[i,r];function c(p,m){return o(),a("div",null,l)}const E=e(n,[["render",c],["__file","Java导入语句中不宜使用通配符.html.vue"]]),h=JSON.parse('{"path":"/JAVA/Java%E5%AF%BC%E5%85%A5%E8%AF%AD%E5%8F%A5%E4%B8%AD%E4%B8%8D%E5%AE%9C%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6.html","title":"Java导入语句中不宜使用通配符","lang":"zh-CN","frontmatter":{"title":"Java导入语句中不宜使用通配符","date":"2020-05-29T00:00:00.000Z","category":"Java","description":"它有助于识别类名冲突：在不同包中具有相同名称的两个类。这可以用*import。 它使依赖关系变得明确，并且让代码的可读性变强。 它能加快编译速度，因为编译器不需要搜索整个包来识别依赖项，尽管这在现代编译器中通常不是什么大问题。 使用现代IDE可以将显式导入的不便方面降至最低。 大多数IDE允许您折叠导入部分，因此它不会妨碍，在需要时自动填充导入，并自动...","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/JAVA/Java%E5%AF%BC%E5%85%A5%E8%AF%AD%E5%8F%A5%E4%B8%AD%E4%B8%8D%E5%AE%9C%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"Java导入语句中不宜使用通配符"}],["meta",{"property":"og:description","content":"它有助于识别类名冲突：在不同包中具有相同名称的两个类。这可以用*import。 它使依赖关系变得明确，并且让代码的可读性变强。 它能加快编译速度，因为编译器不需要搜索整个包来识别依赖项，尽管这在现代编译器中通常不是什么大问题。 使用现代IDE可以将显式导入的不便方面降至最低。 大多数IDE允许您折叠导入部分，因此它不会妨碍，在需要时自动填充导入，并自动..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T11:40:02.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:published_time","content":"2020-05-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T11:40:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java导入语句中不宜使用通配符\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T11:40:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[],"git":{"createdTime":1719488402000,"updatedTime":1719488402000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":1}]},"readingTime":{"minutes":0.69,"words":206},"filePathRelative":"JAVA/Java导入语句中不宜使用通配符.md","localizedDate":"2020年5月29日","excerpt":"<ol>\\n<li>它有助于识别类名冲突：在不同包中具有相同名称的两个类。这可以用*import。</li>\\n<li>它使依赖关系变得明确，并且让代码的可读性变强。</li>\\n<li>它能加快编译速度，因为编译器不需要搜索整个包来识别依赖项，尽管这在现代编译器中通常不是什么大问题。</li>\\n<li>使用现代IDE可以将显式导入的不便方面降至最低。 大多数IDE允许您折叠导入部分，因此它不会妨碍，在需要时自动填充导入，并自动识别未使用的导入以帮助清除它们。</li>\\n</ol>\\n<p>所以显式导入作为编码标准的一部分</p>\\n","autoDesc":true}');export{E as comp,h as data};
