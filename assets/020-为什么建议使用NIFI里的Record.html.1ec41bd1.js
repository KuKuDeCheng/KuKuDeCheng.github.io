import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o,c,a as n,b as l,d as s,e as a}from"./app.0a7c44f6.js";var i="/assets/1.4bbe805f.png",r="/assets/2.de4d71fb.png",u="/assets/3.42e82883.png";const d={},k=s('<h2 id="\u5F15\u5B50" tabindex="-1"><a class="header-anchor" href="#\u5F15\u5B50" aria-hidden="true">#</a> \u5F15\u5B50</h2><p>\u8BB8\u591A\u7B2C\u4E00\u6B21\u63A5\u89E6\u4F7F\u7528NIFI\u7684\u540C\u5B66\u5728\u540C\u6B65\u5173\u7CFB\u578B\u6570\u636E\u5E93\u7684\u67D0\u4E00\u5F20\u8868\u7684\u65F6\u5019\uFF0C\u53EF\u80FD\u4F1A\u62D6\u62FD\u51FA\u7C7B\u4F3C\u4E8E\u4E0B\u9762\u7684\u4E00\u4E2A\u6D41\u7A0B\u3002</p><p><img src="'+i+'" alt="" loading="lazy"></p><p>\u8FD9\u4E2A\u6D41\u7A0B\u5927\u4F53\u7684\u4F5C\u7528\u5C31\u662F\uFF1A\u76D1\u542C\u589E\u91CF\u5B57\u6BB5\u5E76\u751F\u6210\u67E5\u8BE2SQL\uFF0C\u6267\u884CSQL\uFF0C\u8F6C\u6362\u6210JSON\u6570\u636E\uFF0C\u5C06JOSN\u8F6C\u6362\u6210\u63D2\u5165SQL\u8BED\u53E5\uFF0C\u5728\u76EE\u6807\u5E93\u6267\u884CSQL\u3002</p><p>\u8FD9\u663E\u7136\u662F\u6CA1\u4EC0\u4E48\u95EE\u9898\u7684\uFF0C\u4F46\u662F\u5982\u679C\u8BA9\u6211\u6765\u8BBE\u8BA1\uFF0C\u5C31\u53EA\u662F\u4E0B\u9762\u8FD9\u6837\u7684\u6D41\u7A0B\u3002</p><p><img src="'+r+'" alt="" loading="lazy"></p><h2 id="\u4E3A\u4EC0\u4E48\u5EFA\u8BAE\u4F7F\u7528nifi\u91CC\u7684record" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u5EFA\u8BAE\u4F7F\u7528nifi\u91CC\u7684record" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u5EFA\u8BAE\u4F7F\u7528NIFI\u91CC\u7684Record</h2><p>\u9996\u5148\uFF0CNIFI\u662F\u5728\u6846\u67B6\u7684\u57FA\u7840\u4E0A\uFF0C\u4F5C\u4E3A\u6269\u5C55\u529F\u80FD\uFF0C\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u9762\u5411record\u6570\u636E\u3001\u5904\u7406record\u6570\u636E\u7684\u80FD\u529B\u3002\u8FD9\u79CD\u8BBE\u8BA1\u7684\u521D\u8877\u662F\u65E0\u8BBA\u6211\u4EEC\u5E95\u5C42\u662F\u4EC0\u4E48\u683C\u5F0F\u7684\u6570\u636E(json?csv?avro?xml?\u7B49\u7B49)\uFF0C\u6211\u4EEC\u5728\u5904\u7406\u8FD9\u4E9B\u6570\u636E\u7684\u65F6\u5019\uFF0C\u90FD\u53EF\u4EE5\u4F7F\u7528\u4E00\u5957\u901A\u7528\u7684\u683C\u5F0F\u6216\u8005\u8BF4\u89C4\u5219\uFF0C\u5373record\u3002</p><p>\u90A3\u4E48\u4F7F\u7528record\u6709\u4EC0\u4E48\u597D\u5904\u5462\uFF1F</p><h3 id="\u597D\u59041-\u6D41\u7A0B\u8BBE\u8BA1\u4F7F\u7528\u7EC4\u4EF6\u66F4\u5C11" tabindex="-1"><a class="header-anchor" href="#\u597D\u59041-\u6D41\u7A0B\u8BBE\u8BA1\u4F7F\u7528\u7EC4\u4EF6\u66F4\u5C11" aria-hidden="true">#</a> \u597D\u59041-\u6D41\u7A0B\u8BBE\u8BA1\u4F7F\u7528\u7EC4\u4EF6\u66F4\u5C11</h3><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u66F4\u5C11\u7684\u7EC4\u4EF6\u6765\u8BBE\u8BA1\u6D41\u7A0B\uFF0C\u6765\u6EE1\u8DB3\u6211\u4EEC\u7684\u9700\u6C42\u3002\u901A\u5E38\u6211\u4EEC\u5728\u4F7F\u7528NIFI\u7684\u65F6\u5019\uFF0C\u4F1A\u9009\u62E9\u8BA9\u5B83\u4E2D\u95F4\u843D\u5730\uFF0C\u800C\u5BF9\u4E2D\u95F4\u843D\u5730\u7684\u6570\u636EIO\u64CD\u4F5C\u76F8\u5BF9\u800C\u8A00\u80AF\u5B9A\u662F\u8017\u65F6\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u5728\u8BBE\u8BA1\u6D41\u7A0B\u7684\u65F6\u5019\uFF0C\u5C3D\u53EF\u80FD\u7684\u505A\u5230\u51CF\u5C11\u4E0D\u5FC5\u8981\u7684\u5904\u7406FlowFIle\u7684\u7EC4\u4EF6\u3002\u901A\u8FC7\u4F7F\u7528record\u7C7B\u7684\u7EC4\u4EF6\uFF0C\u6211\u4EEC\u4E0D\u7528\u5173\u5FC3\u6570\u636E\u7684\u683C\u5F0F\u662F\u4EC0\u4E48\uFF0C\u53EA\u9700\u8981\u5728\u7EC4\u4EF6\u7684\u914D\u7F6E\u4E0A\u9009\u62E9\u76F8\u5E94\u7684RecordSetWriter\u548CRecordReader\u5C31\u53EF\u4EE5\u4E86\uFF0C\u4E5F\u4E0D\u7528\u518D\u53BB\u7279\u610F\u7684\u8F6C\u6362\u6570\u636E\u683C\u5F0F\uFF0C\u751A\u81F3\u5728\u6781\u81F4\u7684\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u53EA\u9700\u5173\u5FC3\u6570\u636E\u4ECE\u54EA\u91CC\u6765\uFF0C\u5230\u54EA\u91CC\u53BB\u5C31\u53EF\u4EE5\u4E86\u3002\u8FD9\u6837\u5C31\u4F1A\u4F7F\u6211\u4EEC\u7684\u6D41\u7A0B\u7684\u6570\u636E\u5904\u7406\u901F\u5EA6\u66F4\u5FEB\u3001NIFI\u6D88\u8017\u7684\u8D44\u6E90\u66F4\u5C11\u3002</p><h3 id="\u597D\u59042-recordpath" tabindex="-1"><a class="header-anchor" href="#\u597D\u59042-recordpath" aria-hidden="true">#</a> \u597D\u59042-RecordPath</h3><p><img src="'+u+'" alt="" loading="lazy"></p><p>NIFI\u5728Record\u7684\u57FA\u7840\u4E0A\uFF0C\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u5957\u5904\u7406Record\u7684EL\u8868\u8FBE\u5F0F\uFF0C\u63D0\u4F9BRecordPath\u6211\u4EEC\u53EF\u4EE5\u66F4\u7075\u6D3B\u7684\u53BB\u5904\u7406record\u6570\u636E\u3002</p>',14),m=a("\u5173\u4E8ERecordPath\u8BF7\u67E5\u770B\u4F5C\u8005NIFI\u4E2D\u6587\u6587\u6863"),v={href:"https://nifichina.github.io/general/RecordPathGuide.html",target:"_blank",rel:"noopener noreferrer"},b=a("https://nifichina.github.io/general/RecordPathGuide.html"),h=s(`<h3 id="\u597D\u59043-\u8D44\u6E90\u6D88\u8017\u5C11" tabindex="-1"><a class="header-anchor" href="#\u597D\u59043-\u8D44\u6E90\u6D88\u8017\u5C11" aria-hidden="true">#</a> \u597D\u59043-\u8D44\u6E90\u6D88\u8017\u5C11</h3><p>\u6211\u4EEC\u8FD9\u91CC\u5148\u4E0D\u5173\u6CE8\u5177\u4F53\u7684\u5B9E\u73B0\uFF0C\u53EA\u770B\u4E0BRecord\u7684\u63A5\u53E3\u5B9A\u4E49</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RecordSet</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@return</span> the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">RecordSchema</span></span><span class="token punctuation">}</span> that applies to the records in this RecordSet
     */</span>
    <span class="token class-name">RecordSchema</span> <span class="token function">getSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@return</span> the next <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Record</span></span><span class="token punctuation">}</span> in the set or <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> if there are no more records
     */</span>
    <span class="token class-name">Record</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RecordReader</span> <span class="token keyword">extends</span> <span class="token class-name">Closeable</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Returns the next record in the stream or <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> if no more records are available. Types will be coerced and any unknown fields will be dropped.
     *
     * <span class="token keyword">@return</span> the next record in the stream or <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> if no more records are available.
     *
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span> if unable to read from the underlying data
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">MalformedRecordException</span></span> if an unrecoverable failure occurs when trying to parse a record
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">SchemaValidationException</span></span> if a Record contains a field that violates the schema and cannot be coerced into the appropriate field type.
     */</span>
    <span class="token keyword">default</span> <span class="token class-name">Record</span> <span class="token function">nextRecord</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">MalformedRecordException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">nextRecord</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230<code>next()</code> <code>nextRecord()</code>\u65B9\u6CD5\u6211\u4EEC\u57FA\u672C\u53EF\u4EE5\u731C\u6D4B\uFF0C\u5B83\u662F\u4E0D\u9700\u8981\u628A\u6240\u6709\u7684\u6570\u636E\u90FD\u52A0\u8F7D\u5230\u5185\u5B58\u4E2D\u7684\uFF0C\u800C\u662F\u7C7B\u4F3C\u4E8E\u6211\u4EEC\u5E38\u89C1\u7684ResultSet\u4E00\u6837\u6709\u4E2A\u6E38\u6807\uFF0C\u53EF\u4EE5\u4E00\u6761\u4E00\u6761\u8FD4\u56DErecord\uFF0C\u8FD9\u6837\u7684\u8BDD\uFF0C\u6211\u4EEC\u4F7F\u7528Record\u65B9\u5F0F\u53BB\u5904\u7406\u4E00\u4E2Ajson\u6570\u7EC4\u76F4\u63A5<code>next()</code>\u5FAA\u73AF\u8BFB\u53D6\uFF0C\u8FDB\u884C\u5904\u7406\uFF0C\u4F7F\u7528\u5BF9\u5E94\u7684RecordSetWriter\u5199\u8FDBFlowFIle\uFF0C\u5BF9\u6BD4\u76F4\u63A5\u52A0\u8F7Djson\u6570\u636E\u5230\u5185\u5B58\uFF0C\u7136\u540E\u5728\u5FAA\u73AF\u5904\u7406\u6BCF\u4E00\u6761json\uFF0C\u663E\u7136\u662Frecord\u65B9\u5F0F\u5185\u5B58\u5360\u7528\u66F4\u5C11\uFF0C\u66F4\u4E0D\u5BB9\u6613\u5F15\u8D77OOM\u3002</p><p>\u8FD9\u91CC\u7B80\u5355\u770B\u4E0Bjson\u7684JsonPathReader\u7684\u4EE3\u7801\u5B9E\u73B0\uFF0CJsonPathReader\u91CC</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">RecordReader</span> <span class="token function">createRecordReader</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> variables<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">InputStream</span> in<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">long</span> inputLength<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ComponentLog</span> logger<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">MalformedRecordException</span><span class="token punctuation">,</span> <span class="token class-name">SchemaNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">InputStream</span> bufferedIn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">RecordSchema</span> schema <span class="token operator">=</span> <span class="token function">getSchema</span><span class="token punctuation">(</span>variables<span class="token punctuation">,</span> bufferedIn<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JsonPathRowRecordReader</span><span class="token punctuation">(</span>jsonPaths<span class="token punctuation">,</span> schema<span class="token punctuation">,</span> bufferedIn<span class="token punctuation">,</span> logger<span class="token punctuation">,</span> dateFormat<span class="token punctuation">,</span> timeFormat<span class="token punctuation">,</span> timestampFormat<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6838\u5FC3\u7684RecordReader\u5B9E\u73B0\u7C7B\u662F\u8FD9\u4E2A<code>JsonPathRowRecordReader</code>\uFF0C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Record</span> <span class="token function">nextRecord</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">boolean</span> coerceTypes<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> dropUnknownFields<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">MalformedRecordException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">JsonNode</span> nextNode <span class="token operator">=</span> <span class="token function">getNextJsonNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nextNode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">final</span> <span class="token class-name">RecordSchema</span> schema <span class="token operator">=</span> <span class="token function">getSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">convertJsonNodeToRecord</span><span class="token punctuation">(</span>nextNode<span class="token punctuation">,</span> schema<span class="token punctuation">,</span> coerceTypes<span class="token punctuation">,</span> dropUnknownFields<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">JsonNode</span> <span class="token function">getNextJsonNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">MalformedRecordException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>firstObjectConsumed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        firstObjectConsumed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> firstJsonNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">JsonToken</span> token <span class="token operator">=</span> jsonParser<span class="token punctuation">.</span><span class="token function">nextToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> END_OBJECT<span class="token operator">:</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> START_OBJECT<span class="token operator">:</span>
                <span class="token keyword">return</span> jsonParser<span class="token punctuation">.</span><span class="token function">readValueAsTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> END_ARRAY<span class="token operator">:</span>
            <span class="token keyword">case</span> START_ARRAY<span class="token operator">:</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MalformedRecordException</span><span class="token punctuation">(</span><span class="token string">&quot;Expected to get a JSON Object but got a token of type &quot;</span> <span class="token operator">+</span> token<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800CjsonParser\u662Fjackson\u5DE5\u5177\u5305\u91CC\u7684\uFF0C\u7B80\u5355\u6765\u8BF4\u6839\u636E\u8F93\u5165\u6D41\u548Ctoken(<code>{,[,],}</code>\u7B49)\u6765\u4E00\u6761\u4E00\u6761\u8BFB\u53D6json\u3002</p>`,10);function w(f,y){const e=p("ExternalLinkIcon");return o(),c("div",null,[k,n("p",null,[m,n("a",v,[b,l(e)])]),h])}var x=t(d,[["render",w],["__file","020-\u4E3A\u4EC0\u4E48\u5EFA\u8BAE\u4F7F\u7528NIFI\u91CC\u7684Record.html.vue"]]);export{x as default};
