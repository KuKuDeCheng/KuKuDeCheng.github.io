import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as i,b as a,a as p,o}from"./app-yELfxIoD.js";const r="/assets/1-Dvip9lS1.png",s="/assets/2-BEeR_ePQ.png",n="/assets/3-DRkJ2e3I.png",c="/assets/4-DvNWZAgf.png",l="/assets/5-CDwjgcgD.png",g="/assets/6-DcI_C1os.png",u="/assets/7-Dsi02G-v.png",h="/assets/8-DLEMLirT.png",m="/assets/9-CZWxbIo0.png",d="/assets/10-CTMNsFIE.png",f="/assets/12-CknzzXzp.png",I="/assets/11-CAsK6HlY.png",b="/assets/13-B24kJSAi.png",_={},k=a("p",null,"简介：根据个人的一些提交代码的经历,分享一下给Apache社区贡献代码的小经验。",-1),N=p('<h2 id="apache-nifi使用的开发技术" tabindex="-1"><a class="header-anchor" href="#apache-nifi使用的开发技术"><span>Apache NIFI使用的开发技术</span></a></h2><p>Apache NiFi的后端是用Java编写的,Web层使用JAX-RS,并且JavaScript被广泛用于提供用户界面,依赖于多个第三方JavaScript库,其中包括D3和JQuery。使用Apache Maven构建,将Git用于版本控制系统。文档在AsciiDoc中创建。</p><h2 id="提交issue" tabindex="-1"><a class="header-anchor" href="#提交issue"><span>提交Issue</span></a></h2><p>首先,你应该拥有(注册)一个Apache JIRA的账号。在网上搜索一下JIRA地址</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击登录或者新注册一个用户</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入JIRA后,新建一个issue(新功能或者是bug描述等等)</p><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后再填写详细的描述信息</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>以我之前提的新增功能点的NIFI-7403为例(这个已经被合并到master分支,所以状态显示跟新建的会不一样)</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="fork源码" tabindex="-1"><a class="header-anchor" href="#fork源码"><span>Fork源码</span></a></h2><p>在GitHub上找到Apache NIFI的 项目,然后fork到自己的GitHub</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>把你自己GitHub账号里fork后的代码拉到你的开发环境,这里别忘了应该配置git的upstream,以便你可以同步Apache NIFI的最新代码</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>git remote add upstream https://github.com/apache/nifi.git</p></blockquote><p>现在我们在自己fork的master这个分支,以后这个分支就留作跟踪 upstream 的远程代码</p><blockquote><p>git pull upstream master</p></blockquote><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="开发代码" tabindex="-1"><a class="header-anchor" href="#开发代码"><span>开发代码</span></a></h2><p>按照开发惯例,我们一般不在自己代码仓库的master上提交新的代码,而是需要为每一个新增的功能或者bugfix新增一个新的branch,新分支名称与你在JIRA新建的issue的编号一样。</p><p>创建新的分支,现在我们可以在这个分支上更改代码:</p><blockquote><p>git checkout -b NIFI-7403</p></blockquote><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>开发完成后,commit push到自己的分支。</p><p>这里有几个注意点：</p><ol><li>代码风格要与源码一致 常见的有空格、不允许import.*、文档及注释清洗</li><li>单元测试很重要,NIFI提供了强大的mock,你需要仔细设计Unit Test,尽可能的覆盖所有的功能测试</li><li>PR前尽量不要频繁的去commit,仔细点,用心点(给人的感觉可能会好点,因为在PR后review中可能还要不断的修改)</li></ol><h2 id="提交pull-request前合并冲突" tabindex="-1"><a class="header-anchor" href="#提交pull-request前合并冲突"><span>提交Pull Request前合并冲突</span></a></h2><p>在我们提交完我们的代码更新之后,一个常见的问题是远程的upstream（即apache/nifi)已经有了新的更新,从而会导致我们提交Pull Request时会导致conflict。为此我们可以在提交自己这段代码前手动先把远程其他开发者的commit与我们的commit合并。</p><p>本地开发环境切到自己的master分支</p><blockquote><p>git checkout master</p></blockquote><p>拉取Apache NIFI master分支最新代码：</p><blockquote><p>git pull upstream master</p></blockquote><p>切换回 NIFI-7403 分支,使用</p><blockquote><p>git checkout NIFI-7403 git rebase master</p></blockquote><p>然后把自己在NIFI-7403分支中的代码更新到在自己github代码仓库的NIFI-7403分支中去：</p><blockquote><p>git push origin NIFI-7403</p></blockquote><h2 id="提交pr-pull-request" tabindex="-1"><a class="header-anchor" href="#提交pr-pull-request"><span>提交PR(Pull Request)</span></a></h2><p>这时候可以在自己的Github仓库页面跳转到自己的NIFI-7403分支,然后点击 new pull request。(或者直接到NIFI的GitHub,会有PR自动提示)</p><p>尽可能的描述清楚你的PR(对于英语不好的人来说,不要束手束脚,也不用太在意语法,借助一些翻译工具就OK了,老外同志们都是能看懂的,重要的是让他们能Get到我们的点)</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>提交PR后会自动编译检测(期间会运行单元测试),一般上需要检测成功后才会被Review</p><figure><img src="'+I+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pr-review" tabindex="-1"><a class="header-anchor" href="#pr-review"><span>PR Review</span></a></h2><p>一般情况,社区会分配一个Reviewer给这个PR,但有时候社区的人会很忙,没有人来review,这时候你可以主动一些,在jira或Github里@一些人(如果是修改别人的代码,那就@那些作者是最好的),也可以在<code>dev@nifi.apache.org</code>里发邮件申请(发邮件很少见到有人这么做)</p><p>之后经过一些讨论和修改,顺利的话,你的代码就会被合并到Apache NIFI master分支上了。</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>一开始的时候,你可以适当的修改一些错误的文档来参与贡献,Apache NIFI的文档很多,更新迭代也很快,难免会有一些错误的地方,而且修改文档的PR处理起来很简单,风险也小。</p>',52);function A(F,y){return o(),t("div",null,[k,i(" more "),N])}const R=e(_,[["render",A],["__file","021-NIFI贡献代码.html.vue"]]),x=JSON.parse('{"path":"/ApacheNIFI%E6%95%99%E7%A8%8B/021-NIFI%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81.html","title":"如何给NIFI贡献代码","lang":"zh-CN","frontmatter":{"title":"如何给NIFI贡献代码","date":"2020-06-03T00:00:00.000Z","category":"ApacheNIFI教程","tag":"NIFI","order":21,"description":"简介：根据个人的一些提交代码的经历,分享一下给Apache社区贡献代码的小经验。","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/ApacheNIFI%E6%95%99%E7%A8%8B/021-NIFI%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"如何给NIFI贡献代码"}],["meta",{"property":"og:description","content":"简介：根据个人的一些提交代码的经历,分享一下给Apache社区贡献代码的小经验。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T13:31:00.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:tag","content":"NIFI"}],["meta",{"property":"article:published_time","content":"2020-06-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T13:31:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何给NIFI贡献代码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T13:31:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"Apache NIFI使用的开发技术","slug":"apache-nifi使用的开发技术","link":"#apache-nifi使用的开发技术","children":[]},{"level":2,"title":"提交Issue","slug":"提交issue","link":"#提交issue","children":[]},{"level":2,"title":"Fork源码","slug":"fork源码","link":"#fork源码","children":[]},{"level":2,"title":"开发代码","slug":"开发代码","link":"#开发代码","children":[]},{"level":2,"title":"提交Pull Request前合并冲突","slug":"提交pull-request前合并冲突","link":"#提交pull-request前合并冲突","children":[]},{"level":2,"title":"提交PR(Pull Request)","slug":"提交pr-pull-request","link":"#提交pr-pull-request","children":[]},{"level":2,"title":"PR Review","slug":"pr-review","link":"#pr-review","children":[]}],"git":{"createdTime":1719488402000,"updatedTime":1719495060000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":2}]},"readingTime":{"minutes":3.8,"words":1139},"filePathRelative":"ApacheNIFI教程/021-NIFI贡献代码.md","localizedDate":"2020年6月3日","excerpt":"<p>简介：根据个人的一些提交代码的经历,分享一下给Apache社区贡献代码的小经验。</p>\\n","autoDesc":true}');export{R as comp,x as data};
