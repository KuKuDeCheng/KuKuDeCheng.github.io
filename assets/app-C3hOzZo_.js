const __vite__fileDeps=["assets/index.html-hiZMb_m3.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/001-编译NIFI源码.html-DogF-sKt.js","assets/002-NIFI自定义开发规范.html-B76OAKqy.js","assets/003-Processor的一些方法.html-Cw38GyOd.js","assets/004-自定义Processor.html-CeQ-ibHw.js","assets/005-自定义ExpressionLanguage.html-D64zEdBD.js","assets/006-NIFI启动源码.html-Cz4QHNTi.js","assets/007-在HTTP模式下开启权限模块.html-Cr8IKv_Y.js","assets/008-JettyServer源码.html-DGNz6pBS.js","assets/009-NiFi源码.html-BXjm4EOQ.js","assets/010-nifi注解.html-Dy4-lfKL.js","assets/011-Debezium详细嵌入NIFI.html-CINKWy8A.js","assets/RunNiFi源码.html-SeWTWEzL.js","assets/nifi-env-sh.html-CWiBOYpF.js","assets/nifi-sh-start.html-DzNWmFVs.js","assets/nifi-sh.html-CP4YHDwv.js","assets/000-ApacheNIFI历史.html-Cm9das3T.js","assets/001-NiFi术语.html-C2URF3VV.js","assets/002-带你体验ApacheNIFI.html-CK2Ovo97.js","assets/003-NIFI入门.html-B9Em7E0S.js","assets/004-数据抽取的常见方法.html-CvHrMXAo.js","assets/005-基于增量字段同步数据.html-Bk3_t5EN.js","assets/006-NIFI各个NAR包功能概述.html-CxvOfyLC.js","assets/007-Nar包加载机制源码解读.html-Dmzvrndj.js","assets/008-Nar包下的MANIFEST.MF.html-NrsKUgKF.js","assets/009-Apache NIFI类资源隔离机制.html-BIETugyL.js","assets/010-Apache NIFI Processor情况.html-CMnp1ao6.js","assets/011-理解connection.html-6yfI0WUJ.js","assets/012-理解maxThread设置.html-BoOOW2n7.js","assets/013-RunDuration理解.html-Dj4WzIZH.js","assets/014-ContentRepositoryArchiving理解.html-4_mF_3FN.js","assets/015-Controller Services是守护进程.html-D7lvOoRG.js","assets/016-NIFI调度.html-B_L-yKf3.js","assets/017-NIFI高可用.html-CYidAwWo.js","assets/018-通过配置优化NiFi性能.html-Beh27LKF.js","assets/019-NIFI里的数据库连接池.html-DL8_sf00.js","assets/020-为什么建议使用NIFI里的Record.html-BRIkcun9.js","assets/021-NIFI贡献代码.html-CEdPsbjW.js","assets/022-NIFI开启HTTPS.html-CCfYeumE.js","assets/023-ExecuteScript脚本教程.html-BVIobfcC.js","assets/024-内容存储库原理.html-CrkYvqqW.js","assets/025-FlowFile存储库原理.html-B-QwnnCC.js","assets/026-预写日志(WAL).html-BTGlRwwU.js","assets/027-Provenance存储库原理.html-CLgLp3OQ.js","assets/028-NIFI架构.html-GAzEHvyH.js","assets/029-NIFI事务原理.html-D6VMEiL9.js","assets/030-数据库字段类型.html-DUwAlyI9.js","assets/031-1.14.html-CGqyx5Ze.js","assets/032-CaptureChangeMySQL.html-DFgTL5kE.js","assets/033-流程告警.html-DMvZWOfo.js","assets/034-JWT.html-BJKJA_Ah.js","assets/037-MySQL全字段测试.html-QjOOCYAM.js","assets/01-输入输出流.html-DkIEcDpk.js","assets/02-File.html-BujAumsr.js","assets/03-缓冲流BufferedInputStream与BufferedOutputStream.html-BcePuK1v.js","assets/04-缓冲流BufferedReader与BufferedWriter.html-dEJYQ6FK.js","assets/05-转换流InputStreamReader与OutputStreamWriter.html-CbYiWe1q.js","assets/06-ByteArrayInputStream与ByteArrayOutputStream.html-C1NNAcHg.js","assets/07-CommonsIO2.5-FileUtils.html-A0Vkkfp6.js","assets/ByteArrayOutputStream.html-BigUnRFH.js","assets/Java SPI机制.html-CZewdyc6.js","assets/Java8_JVM内存模型.html-DMtptNoS.js","assets/Java中atomic包中的原子操作类总结.html-BXf2lUJt.js","assets/Java中的锁.html-D1P7IGFL.js","assets/Java内存模型原理.html-DFhqpEh6.js","assets/Java反射.html-ClDKXSwe.js","assets/Java导入语句中不宜使用通配符.html-C-dLcDYP.js","assets/Java类加载器.html-CNw9guIa.js","assets/Java里带标签的break和continue.html-BHy4jlAO.js","assets/Jvm-dump-jstack-jmap-jstat.html-Ou5FntSR.js","assets/java注解.html-Dc4jfB0f.js","assets/web的发展历史.html-Ba2H4M-p.js","assets/代码设计原理.html-CC_Wj-Fh.js","assets/使用List.html-pcsbNSd8.js","assets/偏向锁批量重偏向与批量撤销.html-D2t3d3jq.js","assets/到底什么是classpath.html-CdYFPwp_.js","assets/动手体验JVM中Class对象的唯一性.html-kJacFTFg.js","assets/多线程基础知识总结.html-CK-0z8Na.js","assets/打印Java对象头.html-BkSxnT2M.js","assets/深入了解Java锁.html-DiXA5Vvl.js","assets/相对路径与绝对路径去读取文件.html-BI4NbWJs.js","assets/类加载机制.html-BIrrQz4Q.js","assets/线程通信.html-DJUlF1Ls.js","assets/让你彻底理解Synchronized.html-C1ijZg1Z.js","assets/JsonJolt教程.html-DDSGHZDq.js","assets/22-C1NxLFgr.js","assets/JsonJolt教程英文版.html-BB8Sygmy.js","assets/使用jolt替换值.html-DLnyRHI5.js","assets/001Spring基础知识.html-SgHpRHXE.js","assets/002Bean定义常见错误.html-C0Nodngf.js","assets/003依赖注入常见错误上.html-CR7A6Dd9.js","assets/004依赖注入常见错误下.html-Cw42jViP.js","assets/005Bean生命周期常见错误.html-CEvZyeef.js","assets/006SpringAOP常见错误上.html-DNQmouFT.js","assets/007SpringAOP常见错误下.html-B02KaT3n.js","assets/008Spring事件常见错误.html-B7A5RxiL.js","assets/001-管理OracleRedoLog.html-B4F7Dx8h.js","assets/BIT的字节序.html-CstJEDTE.js","assets/Oracle12cLogMiner分析Redo日志文件.html-GcIDaAKw.js","assets/基于水印的CDC框架.html-BspokES4.js","assets/01-进程与线程基本概念.html-BUjYfa_E.js","assets/02-Java多线程入门类和接口.html-C8XFDRp7.js","assets/03-线程组和线程优先级.html-UZqYqVA0.js","assets/04-Java线程的状态及主要转化方法.html-BjuKbC8j.js","assets/05-Java线程间的通信.html-C4tOJjFi.js","assets/06-Java内存模型基础知识.html-DcBJytB4.js","assets/07-重排序与happens-before.html-DNL5Hel6.js","assets/08-volatitle.html-CUNnWYn3.js","assets/09-synchronized与锁.html-wTpBnS8I.js","assets/10-CAS与原子操作.html-DwXxioJT.js","assets/11-AQS.html-Cy48yPl5.js","assets/12-线程池原理.html-Cu3w3hPb.js","assets/13-阻塞队列.html-CNKF-suq.js","assets/14-锁接口和类.html-CeM2lnMi.js","assets/15-并发容器集合.html-C4xBlVW6.js","assets/16-CopyOnWrite容器.html-CJCwUDAx.js","assets/17-通信工具类.html-B-E-0ca9.js","assets/18-Fork_Join框架.html-B6_aFQq6.js","assets/19-Java8Stream并行计算原理.html-h9urEpt1.js","assets/20-计划任务.html-DBQg0W8_.js","assets/深入浅出Java多线程.html-Bn2M1ktI.js","assets/sf.html-DluZAiJi.js","assets/二叉搜索树的前驱和后继节点.html-HQSq-Asf.js","assets/什么是红黑树.html-CAHrS0uw.js","assets/冒泡排序.html-CSj2NH6E.js","assets/十大经典排序算法最强总结.html-jNVH2qFW.js","assets/基于Java实现红黑树的基本操作.html-DwNS0Cyw.js","assets/并查集.html-CDetsNpU.js","assets/01-命名风格.html-CUIUQOmv.js","assets/02-常量定义.html-T0itypdE.js","assets/03-代码格式.html-CloFdb8y.js","assets/04-OOP规约.html-DXKpgU7V.js","assets/05-日期时间.html-BAUFxpdm.js","assets/06-集合处理.html-DV4MBpCO.js","assets/07-并发处理.html-CarY5Uah.js","assets/08-控制语句.html-BB7fjpp-.js","assets/09-注释规约.html-Cf-MN2z9.js","assets/10-其它.html-f_HT6iMK.js","assets/11-错误码.html-gBIptGCF.js","assets/12-异常处理.html-CIVPEgbU.js","assets/13-日志规约.html-BoED_fHI.js","assets/14-单元测试.html-Br-kpJL4.js","assets/15-安全规约.html-BJ9yfo16.js","assets/16-建表规约.html-Bd-xmpNJ.js","assets/17-索引规约.html-DVkZ2Ckd.js","assets/18-SQL语句.html-BrAtRCzf.js","assets/19-ORM映射.html-DCVvD-LR.js","assets/20-应用分层.html-BsRfdgWv.js","assets/21-二方库依赖.html-CiRm2Rru.js","assets/22-服务器.html-CneVEMdA.js","assets/23-设计规约.html-CE95F_jp.js","assets/24-专有名词解释.html-B8bEOiSy.js","assets/25-错误码列表.html-BkYzUkyO.js","assets/手抄版.html-DCMbYHyl.js","assets/404.html-V0hjt1Ve.js","assets/index.html-CC4iuST5.js","assets/index.html-MZ3QpB4E.js","assets/index.html-BXwaok11.js","assets/index.html-iWOq-sm5.js","assets/index.html-sOTwhthQ.js","assets/index.html-D2Xifwg2.js","assets/index.html-D07Dg_DC.js","assets/index.html-Cgu2KLqJ.js","assets/index.html-B3MbM2Co.js","assets/index.html-CXu5v_3w.js","assets/index.html-Duae6afY.js","assets/index.html-DrwcxWr9.js","assets/index.html-5_SyRr1R.js","assets/index.html-CHfkRuyF.js","assets/index.html-BNdR9iCn.js","assets/index.html-B_rNGm5Z.js","assets/index.html-DkQthL7O.js","assets/index.html-CGu7mdjW.js","assets/index.html-eyIRDnL8.js","assets/index.html-CiLzeJO_.js","assets/index.html-DFqdE5RZ.js","assets/index.html-DKqMZdsp.js","assets/index.html-DS5gatQa.js","assets/index.html-CVezFrlK.js","assets/index.html-DrnQL6BI.js","assets/index.html-BiwKskjj.js","assets/index.html-xIHMTvJZ.js","assets/index.html-CMBWwZUJ.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
var mr=Object.defineProperty;var Dr=(s,i,a)=>i in s?mr(s,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):s[i]=a;var Pl=(s,i,a)=>Dr(s,typeof i!="symbol"?i+"":i,a);/**
* @vue/shared v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Lt(s,i){const a=new Set(s.split(","));return n=>a.has(n)}const ms={},fa=[],hi=()=>{},fr=()=>!1,vn=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),xt=s=>s.startsWith("onUpdate:"),Ss=Object.assign,Rt=(s,i)=>{const a=s.indexOf(i);a>-1&&s.splice(a,1)},br=Object.prototype.hasOwnProperty,ps=(s,i)=>br.call(s,i),is=Array.isArray,Ya=s=>El(s)==="[object Map]",_r=s=>El(s)==="[object Set]",ns=s=>typeof s=="function",Ms=s=>typeof s=="string",Ra=s=>typeof s=="symbol",_s=s=>s!==null&&typeof s=="object",ek=s=>(_s(s)||ns(s))&&ns(s.then)&&ns(s.catch),Ir=Object.prototype.toString,El=s=>Ir.call(s),Sr=s=>El(s).slice(8,-1),wr=s=>El(s)==="[object Object]",Mt=s=>Ms(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,ba=Lt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ul=s=>{const i=Object.create(null);return a=>i[a]||(i[a]=s(a))},Or=/-(\w)/g,di=ul(s=>s.replace(Or,(i,a)=>a?a.toUpperCase():"")),Tr=/\B([A-Z])/g,Ma=ul(s=>s.replace(Tr,"-$1").toLowerCase()),Cn=ul(s=>s.charAt(0).toUpperCase()+s.slice(1)),Nl=ul(s=>s?`on${Cn(s)}`:""),Qi=(s,i)=>!Object.is(s,i),Ll=(s,...i)=>{for(let a=0;a<s.length;a++)s[a](...i)},hk=(s,i,a,n=!1)=>{Object.defineProperty(s,i,{configurable:!0,enumerable:!1,writable:n,value:a})},Pr=s=>{const i=parseFloat(s);return isNaN(i)?s:i},Nr=s=>{const i=Ms(s)?Number(s):NaN;return isNaN(i)?s:i};let Oe;const kk=()=>Oe||(Oe=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function $t(s){if(is(s)){const i={};for(let a=0;a<s.length;a++){const n=s[a],l=Ms(n)?Mr(n):$t(n);if(l)for(const t in l)i[t]=l[t]}return i}else if(Ms(s)||_s(s))return s}const Lr=/;(?![^(]*\))/g,xr=/:([^]+)/,Rr=/\/\*[^]*?\*\//g;function Mr(s){const i={};return s.replace(Rr,"").split(Lr).forEach(a=>{if(a){const n=a.split(xr);n.length>1&&(i[n[0].trim()]=n[1].trim())}}),i}function Jt(s){let i="";if(Ms(s))i=s;else if(is(s))for(let a=0;a<s.length;a++){const n=Jt(s[a]);n&&(i+=n+" ")}else if(_s(s))for(const a in s)s[a]&&(i+=a+" ");return i.trim()}const $r="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Jr=Lt($r);function pk(s){return!!s||s===""}/**
* @vue/reactivity v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let si;class jr{constructor(i=!1){this.detached=i,this._active=!0,this.effects=[],this.cleanups=[],this.parent=si,!i&&si&&(this.index=(si.scopes||(si.scopes=[])).push(this)-1)}get active(){return this._active}run(i){if(this._active){const a=si;try{return si=this,i()}finally{si=a}}}on(){si=this}off(){si=this.parent}stop(i){if(this._active){let a,n;for(a=0,n=this.effects.length;a<n;a++)this.effects[a].stop();for(a=0,n=this.cleanups.length;a<n;a++)this.cleanups[a]();if(this.scopes)for(a=0,n=this.scopes.length;a<n;a++)this.scopes[a].stop(!0);if(!this.detached&&this.parent&&!i){const l=this.parent.scopes.pop();l&&l!==this&&(this.parent.scopes[this.index]=l,l.index=this.index)}this.parent=void 0,this._active=!1}}}function Vr(s,i=si){i&&i.active&&i.effects.push(s)}function rk(){return si}function Hr(s){si&&si.cleanups.push(s)}let ra;class jt{constructor(i,a,n,l){this.fn=i,this.trigger=a,this.scheduler=n,this.active=!0,this.deps=[],this._dirtyLevel=5,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,Vr(this,l)}get dirty(){if(this._dirtyLevel===2)return!1;if(this._dirtyLevel===3||this._dirtyLevel===4){this._dirtyLevel=1,sa();for(let i=0;i<this._depsLength;i++){const a=this.deps[i];if(a.computed){if(a.computed.effect._dirtyLevel===2)return xi(),!0;if(zr(a.computed),this._dirtyLevel>=5)break}}this._dirtyLevel===1&&(this._dirtyLevel=0),xi()}return this._dirtyLevel>=5}set dirty(i){this._dirtyLevel=i?5:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let i=Ki,a=ra;try{return Ki=!0,ra=this,this._runnings++,Te(this),this.fn()}finally{Pe(this),this._runnings--,ra=a,Ki=i}}stop(){this.active&&(Te(this),Pe(this),this.onStop&&this.onStop(),this.active=!1)}}function zr(s){return s.value}function Te(s){s._trackId++,s._depsLength=0}function Pe(s){if(s.deps.length>s._depsLength){for(let i=s._depsLength;i<s.deps.length;i++)dk(s.deps[i],s);s.deps.length=s._depsLength}}function dk(s,i){const a=s.get(i);a!==void 0&&i._trackId!==a&&(s.delete(i),s.size===0&&s.cleanup())}let Ki=!0,et=0;const gk=[];function sa(){gk.push(Ki),Ki=!1}function xi(){const s=gk.pop();Ki=s===void 0?!0:s}function Vt(){et++}function Ht(){for(et--;!et&&ht.length;)ht.shift()()}function Bk(s,i,a){if(i.get(s)!==s._trackId){i.set(s,s._trackId);const n=s.deps[s._depsLength];n!==i?(n&&dk(n,s),s.deps[s._depsLength++]=i):s._depsLength++}}const ht=[];function ck(s,i,a){Vt();for(const n of s.keys()){let l;if(!s.computed&&n.computed&&n._runnings>0&&(l??(l=s.get(n)===n._trackId))){n._dirtyLevel=2;continue}n._dirtyLevel<i&&(l??(l=s.get(n)===n._trackId))&&(n._shouldSchedule||(n._shouldSchedule=n._dirtyLevel===0),n.computed&&n._dirtyLevel===2&&(n._shouldSchedule=!0),n._dirtyLevel=i),n._shouldSchedule&&(l??(l=s.get(n)===n._trackId))&&(n.trigger(),(!n._runnings||n.allowRecurse)&&n._dirtyLevel!==3&&(n._shouldSchedule=!1,n.scheduler&&ht.push(n.scheduler)))}Ht()}const ok=(s,i)=>{const a=new Map;return a.cleanup=s,a.computed=i,a},kl=new WeakMap,da=Symbol(""),kt=Symbol("");function Qs(s,i,a){if(Ki&&ra){let n=kl.get(s);n||kl.set(s,n=new Map);let l=n.get(a);l||n.set(a,l=ok(()=>n.delete(a))),Bk(ra,l)}}function Li(s,i,a,n,l,t){const e=kl.get(s);if(!e)return;let k=[];if(i==="clear")k=[...e.values()];else if(a==="length"&&is(s)){const p=Number(n);e.forEach((r,d)=>{(d==="length"||!Ra(d)&&d>=p)&&k.push(r)})}else switch(a!==void 0&&k.push(e.get(a)),i){case"add":is(s)?Mt(a)&&k.push(e.get("length")):(k.push(e.get(da)),Ya(s)&&k.push(e.get(kt)));break;case"delete":is(s)||(k.push(e.get(da)),Ya(s)&&k.push(e.get(kt)));break;case"set":Ya(s)&&k.push(e.get(da));break}Vt();for(const p of k)p&&ck(p,5);Ht()}function Ur(s,i){const a=kl.get(s);return a&&a.get(i)}const Gr=Lt("__proto__,__v_isRef,__isVue"),yk=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(Ra)),Ne=Wr();function Wr(){const s={};return["includes","indexOf","lastIndexOf"].forEach(i=>{s[i]=function(...a){const n=rs(this);for(let t=0,e=this.length;t<e;t++)Qs(n,"get",t+"");const l=n[i](...a);return l===-1||l===!1?n[i](...a.map(rs)):l}}),["push","pop","shift","unshift","splice"].forEach(i=>{s[i]=function(...a){sa(),Vt();const n=rs(this)[i].apply(this,a);return Ht(),xi(),n}}),s}function qr(s){Ra(s)||(s=String(s));const i=rs(this);return Qs(i,"has",s),i.hasOwnProperty(s)}class Ek{constructor(i=!1,a=!1){this._isReadonly=i,this._isShallow=a}get(i,a,n){const l=this._isReadonly,t=this._isShallow;if(a==="__v_isReactive")return!l;if(a==="__v_isReadonly")return l;if(a==="__v_isShallow")return t;if(a==="__v_raw")return n===(l?t?hd:vk:t?Fk:Ak).get(i)||Object.getPrototypeOf(i)===Object.getPrototypeOf(n)?i:void 0;const e=is(i);if(!l){if(e&&ps(Ne,a))return Reflect.get(Ne,a,n);if(a==="hasOwnProperty")return qr}const k=Reflect.get(i,a,n);return(Ra(a)?yk.has(a):Gr(a))||(l||Qs(i,"get",a),t)?k:$s(k)?e&&Mt(a)?k:k.value:_s(k)?l?ca(k):mn(k):k}}class uk extends Ek{constructor(i=!1){super(!1,i)}set(i,a,n,l){let t=i[a];if(!this._isShallow){const p=kn(t);if(!pl(n)&&!kn(n)&&(t=rs(t),n=rs(n)),!is(i)&&$s(t)&&!$s(n))return p?!1:(t.value=n,!0)}const e=is(i)&&Mt(a)?Number(a)<i.length:ps(i,a),k=Reflect.set(i,a,n,l);return i===rs(l)&&(e?Qi(n,t)&&Li(i,"set",a,n):Li(i,"add",a,n)),k}deleteProperty(i,a){const n=ps(i,a);i[a];const l=Reflect.deleteProperty(i,a);return l&&n&&Li(i,"delete",a,void 0),l}has(i,a){const n=Reflect.has(i,a);return(!Ra(a)||!yk.has(a))&&Qs(i,"has",a),n}ownKeys(i){return Qs(i,"iterate",is(i)?"length":da),Reflect.ownKeys(i)}}class Kr extends Ek{constructor(i=!1){super(!0,i)}set(i,a){return!0}deleteProperty(i,a){return!0}}const Yr=new uk,Qr=new Kr,Xr=new uk(!0);const zt=s=>s,Al=s=>Reflect.getPrototypeOf(s);function zn(s,i,a=!1,n=!1){s=s.__v_raw;const l=rs(s),t=rs(i);a||(Qi(i,t)&&Qs(l,"get",i),Qs(l,"get",t));const{has:e}=Al(l),k=n?zt:a?Wt:pn;if(e.call(l,i))return k(s.get(i));if(e.call(l,t))return k(s.get(t));s!==l&&s.get(i)}function Un(s,i=!1){const a=this.__v_raw,n=rs(a),l=rs(s);return i||(Qi(s,l)&&Qs(n,"has",s),Qs(n,"has",l)),s===l?a.has(s):a.has(s)||a.has(l)}function Gn(s,i=!1){return s=s.__v_raw,!i&&Qs(rs(s),"iterate",da),Reflect.get(s,"size",s)}function Le(s){s=rs(s);const i=rs(this);return Al(i).has.call(i,s)||(i.add(s),Li(i,"add",s,s)),this}function xe(s,i){i=rs(i);const a=rs(this),{has:n,get:l}=Al(a);let t=n.call(a,s);t||(s=rs(s),t=n.call(a,s));const e=l.call(a,s);return a.set(s,i),t?Qi(i,e)&&Li(a,"set",s,i):Li(a,"add",s,i),this}function Re(s){const i=rs(this),{has:a,get:n}=Al(i);let l=a.call(i,s);l||(s=rs(s),l=a.call(i,s)),n&&n.call(i,s);const t=i.delete(s);return l&&Li(i,"delete",s,void 0),t}function Me(){const s=rs(this),i=s.size!==0,a=s.clear();return i&&Li(s,"clear",void 0,void 0),a}function Wn(s,i){return function(n,l){const t=this,e=t.__v_raw,k=rs(e),p=i?zt:s?Wt:pn;return!s&&Qs(k,"iterate",da),e.forEach((r,d)=>n.call(l,p(r),p(d),t))}}function qn(s,i,a){return function(...n){const l=this.__v_raw,t=rs(l),e=Ya(t),k=s==="entries"||s===Symbol.iterator&&e,p=s==="keys"&&e,r=l[s](...n),d=a?zt:i?Wt:pn;return!i&&Qs(t,"iterate",p?kt:da),{next(){const{value:g,done:B}=r.next();return B?{value:g,done:B}:{value:k?[d(g[0]),d(g[1])]:d(g),done:B}},[Symbol.iterator](){return this}}}}function Ji(s){return function(...i){return s==="delete"?!1:s==="clear"?void 0:this}}function Zr(){const s={get(t){return zn(this,t)},get size(){return Gn(this)},has:Un,add:Le,set:xe,delete:Re,clear:Me,forEach:Wn(!1,!1)},i={get(t){return zn(this,t,!1,!0)},get size(){return Gn(this)},has:Un,add:Le,set:xe,delete:Re,clear:Me,forEach:Wn(!1,!0)},a={get(t){return zn(this,t,!0)},get size(){return Gn(this,!0)},has(t){return Un.call(this,t,!0)},add:Ji("add"),set:Ji("set"),delete:Ji("delete"),clear:Ji("clear"),forEach:Wn(!0,!1)},n={get(t){return zn(this,t,!0,!0)},get size(){return Gn(this,!0)},has(t){return Un.call(this,t,!0)},add:Ji("add"),set:Ji("set"),delete:Ji("delete"),clear:Ji("clear"),forEach:Wn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(t=>{s[t]=qn(t,!1,!1),a[t]=qn(t,!0,!1),i[t]=qn(t,!1,!0),n[t]=qn(t,!0,!0)}),[s,a,i,n]}const[sd,id,ad,nd]=Zr();function Ut(s,i){const a=i?s?nd:ad:s?id:sd;return(n,l,t)=>l==="__v_isReactive"?!s:l==="__v_isReadonly"?s:l==="__v_raw"?n:Reflect.get(ps(a,l)&&l in n?a:n,l,t)}const ld={get:Ut(!1,!1)},td={get:Ut(!1,!0)},ed={get:Ut(!0,!1)};const Ak=new WeakMap,Fk=new WeakMap,vk=new WeakMap,hd=new WeakMap;function kd(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function pd(s){return s.__v_skip||!Object.isExtensible(s)?0:kd(Sr(s))}function mn(s){return kn(s)?s:Gt(s,!1,Yr,ld,Ak)}function Ck(s){return Gt(s,!1,Xr,td,Fk)}function ca(s){return Gt(s,!0,Qr,ed,vk)}function Gt(s,i,a,n,l){if(!_s(s)||s.__v_raw&&!(i&&s.__v_isReactive))return s;const t=l.get(s);if(t)return t;const e=pd(s);if(e===0)return s;const k=new Proxy(s,e===2?n:a);return l.set(s,k),k}function Qa(s){return kn(s)?Qa(s.__v_raw):!!(s&&s.__v_isReactive)}function kn(s){return!!(s&&s.__v_isReadonly)}function pl(s){return!!(s&&s.__v_isShallow)}function mk(s){return s?!!s.__v_raw:!1}function rs(s){const i=s&&s.__v_raw;return i?rs(i):s}function rd(s){return Object.isExtensible(s)&&hk(s,"__v_skip",!0),s}const pn=s=>_s(s)?mn(s):s,Wt=s=>_s(s)?ca(s):s;class Dk{constructor(i,a,n,l){this.getter=i,this._setter=a,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new jt(()=>i(this._value),()=>Xa(this,this.effect._dirtyLevel===3?3:4)),this.effect.computed=this,this.effect.active=this._cacheable=!l,this.__v_isReadonly=n}get value(){const i=rs(this),a=i.effect._dirtyLevel;return(!i._cacheable||i.effect.dirty)&&Qi(i._value,i._value=i.effect.run())&&a!==3&&Xa(i,5),qt(i),i.effect._dirtyLevel>=2&&Xa(i,3),i._value}set value(i){this._setter(i)}get _dirty(){return this.effect.dirty}set _dirty(i){this.effect.dirty=i}}function dd(s,i,a=!1){let n,l;const t=ns(s);return t?(n=s,l=hi):(n=s.get,l=s.set),new Dk(n,l,t||!l,a)}function qt(s){var i;Ki&&ra&&(s=rs(s),Bk(ra,(i=s.dep)!=null?i:s.dep=ok(()=>s.dep=void 0,s instanceof Dk?s:void 0)))}function Xa(s,i=5,a,n){s=rs(s);const l=s.dep;l&&ck(l,i)}function $s(s){return!!(s&&s.__v_isRef===!0)}function Y(s){return fk(s,!1)}function ws(s){return fk(s,!0)}function fk(s,i){return $s(s)?s:new gd(s,i)}class gd{constructor(i,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?i:rs(i),this._value=a?i:pn(i)}get value(){return qt(this),this._value}set value(i){const a=this.__v_isShallow||pl(i)||kn(i);i=a?i:rs(i),Qi(i,this._rawValue)&&(this._rawValue,this._rawValue=i,this._value=a?i:pn(i),Xa(this,5))}}function ga(s){return $s(s)?s.value:s}const Bd={get:(s,i,a)=>ga(Reflect.get(s,i,a)),set:(s,i,a,n)=>{const l=s[i];return $s(l)&&!$s(a)?(l.value=a,!0):Reflect.set(s,i,a,n)}};function bk(s){return Qa(s)?s:new Proxy(s,Bd)}class cd{constructor(i){this.dep=void 0,this.__v_isRef=!0;const{get:a,set:n}=i(()=>qt(this),()=>Xa(this));this._get=a,this._set=n}get value(){return this._get()}set value(i){this._set(i)}}function _k(s){return new cd(s)}class od{constructor(i,a,n){this._object=i,this._key=a,this._defaultValue=n,this.__v_isRef=!0}get value(){const i=this._object[this._key];return i===void 0?this._defaultValue:i}set value(i){this._object[this._key]=i}get dep(){return Ur(rs(this._object),this._key)}}class yd{constructor(i){this._getter=i,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function $a(s,i,a){return $s(s)?s:ns(s)?new yd(s):_s(s)&&arguments.length>1?Ed(s,i,a):Y(s)}function Ed(s,i,a){const n=s[i];return $s(n)?n:new od(s,i,a)}/**
* @vue/runtime-core v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Yi(s,i,a,n){try{return n?s(...n):s()}catch(l){Dn(l,i,a)}}function pi(s,i,a,n){if(ns(s)){const l=Yi(s,i,a,n);return l&&ek(l)&&l.catch(t=>{Dn(t,i,a)}),l}if(is(s)){const l=[];for(let t=0;t<s.length;t++)l.push(pi(s[t],i,a,n));return l}}function Dn(s,i,a,n=!0){const l=i?i.vnode:null;if(i){let t=i.parent;const e=i.proxy,k=`https://vuejs.org/error-reference/#runtime-${a}`;for(;t;){const r=t.ec;if(r){for(let d=0;d<r.length;d++)if(r[d](s,e,k)===!1)return}t=t.parent}const p=i.appContext.config.errorHandler;if(p){sa(),Yi(p,null,10,[s,e,k]),xi();return}}ud(s,a,l,n)}function ud(s,i,a,n=!0){console.error(s)}let rn=!1,pt=!1;const js=[];let fi=0;const _a=[];let Ui=null,ea=0;const Ik=Promise.resolve();let Kt=null;function Mi(s){const i=Kt||Ik;return s?i.then(this?s.bind(this):s):i}function Ad(s){let i=fi+1,a=js.length;for(;i<a;){const n=i+a>>>1,l=js[n],t=dn(l);t<s||t===s&&l.pre?i=n+1:a=n}return i}function Fl(s){(!js.length||!js.includes(s,rn&&s.allowRecurse?fi+1:fi))&&(s.id==null?js.push(s):js.splice(Ad(s.id),0,s),Sk())}function Sk(){!rn&&!pt&&(pt=!0,Kt=Ik.then(wk))}function Fd(s){const i=js.indexOf(s);i>fi&&js.splice(i,1)}function vd(s){is(s)?_a.push(...s):(!Ui||!Ui.includes(s,s.allowRecurse?ea+1:ea))&&_a.push(s),Sk()}function $e(s,i,a=rn?fi+1:0){for(;a<js.length;a++){const n=js[a];if(n&&n.pre){if(s&&n.id!==s.uid)continue;js.splice(a,1),a--,n()}}}function rl(s){if(_a.length){const i=[...new Set(_a)].sort((a,n)=>dn(a)-dn(n));if(_a.length=0,Ui){Ui.push(...i);return}for(Ui=i,ea=0;ea<Ui.length;ea++){const a=Ui[ea];a.active!==!1&&a()}Ui=null,ea=0}}const dn=s=>s.id==null?1/0:s.id,Cd=(s,i)=>{const a=dn(s)-dn(i);if(a===0){if(s.pre&&!i.pre)return-1;if(i.pre&&!s.pre)return 1}return a};function wk(s){pt=!1,rn=!0,js.sort(Cd);try{for(fi=0;fi<js.length;fi++){const i=js[fi];i&&i.active!==!1&&Yi(i,null,14)}}finally{fi=0,js.length=0,rl(),rn=!1,Kt=null,(js.length||_a.length)&&wk()}}function md(s,i,...a){if(s.isUnmounted)return;const n=s.vnode.props||ms;let l=a;const t=i.startsWith("update:"),e=t&&i.slice(7);if(e&&e in n){const d=`${e==="modelValue"?"model":e}Modifiers`,{number:g,trim:B}=n[d]||ms;B&&(l=a.map(c=>Ms(c)?c.trim():c)),g&&(l=a.map(Pr))}let k,p=n[k=Nl(i)]||n[k=Nl(di(i))];!p&&t&&(p=n[k=Nl(Ma(i))]),p&&pi(p,s,6,l);const r=n[k+"Once"];if(r){if(!s.emitted)s.emitted={};else if(s.emitted[k])return;s.emitted[k]=!0,pi(r,s,6,l)}}function Ok(s,i,a=!1){const n=i.emitsCache,l=n.get(s);if(l!==void 0)return l;const t=s.emits;let e={},k=!1;if(!ns(s)){const p=r=>{const d=Ok(r,i,!0);d&&(k=!0,Ss(e,d))};!a&&i.mixins.length&&i.mixins.forEach(p),s.extends&&p(s.extends),s.mixins&&s.mixins.forEach(p)}return!t&&!k?(_s(s)&&n.set(s,null),null):(is(t)?t.forEach(p=>e[p]=null):Ss(e,t),_s(s)&&n.set(s,e),e)}function vl(s,i){return!s||!vn(i)?!1:(i=i.slice(2).replace(/Once$/,""),ps(s,i[0].toLowerCase()+i.slice(1))||ps(s,Ma(i))||ps(s,i))}let ki=null,Tk=null;function dl(s){const i=ki;return ki=s,Tk=s&&s.type.__scopeId||null,i}function Dd(s,i=ki,a){if(!i||s._n)return s;const n=(...l)=>{n._d&&Ze(-1);const t=dl(i);let e;try{e=s(...l)}finally{dl(t),n._d&&Ze(1)}return e};return n._n=!0,n._c=!0,n._d=!0,n}function xl(s){const{type:i,vnode:a,proxy:n,withProxy:l,propsOptions:[t],slots:e,attrs:k,emit:p,render:r,renderCache:d,props:g,data:B,setupState:c,ctx:E,inheritAttrs:F}=s,m=dl(s);let C,D;try{if(a.shapeFlag&4){const b=l||n,R=b;C=oi(r.call(R,b,d,g,c,B,E)),D=k}else{const b=i;C=oi(b.length>1?b(g,{attrs:k,slots:e,emit:p}):b(g,null)),D=i.props?k:fd(k)}}catch(b){ln.length=0,Dn(b,s,1),C=Is(Ks)}let u=C;if(D&&F!==!1){const b=Object.keys(D),{shapeFlag:R}=u;b.length&&R&7&&(t&&b.some(xt)&&(D=bd(D,t)),u=Xi(u,D,!1,!0))}return a.dirs&&(u=Xi(u,null,!1,!0),u.dirs=u.dirs?u.dirs.concat(a.dirs):a.dirs),a.transition&&(u.transition=a.transition),C=u,dl(m),C}const fd=s=>{let i;for(const a in s)(a==="class"||a==="style"||vn(a))&&((i||(i={}))[a]=s[a]);return i},bd=(s,i)=>{const a={};for(const n in s)(!xt(n)||!(n.slice(9)in i))&&(a[n]=s[n]);return a};function _d(s,i,a){const{props:n,children:l,component:t}=s,{props:e,children:k,patchFlag:p}=i,r=t.emitsOptions;if(i.dirs||i.transition)return!0;if(a&&p>=0){if(p&1024)return!0;if(p&16)return n?Je(n,e,r):!!e;if(p&8){const d=i.dynamicProps;for(let g=0;g<d.length;g++){const B=d[g];if(e[B]!==n[B]&&!vl(r,B))return!0}}}else return(l||k)&&(!k||!k.$stable)?!0:n===e?!1:n?e?Je(n,e,r):!0:!!e;return!1}function Je(s,i,a){const n=Object.keys(i);if(n.length!==Object.keys(s).length)return!0;for(let l=0;l<n.length;l++){const t=n[l];if(i[t]!==s[t]&&!vl(a,t))return!0}return!1}function Id({vnode:s,parent:i},a){for(;i;){const n=i.subTree;if(n.suspense&&n.suspense.activeBranch===s&&(n.el=s.el),n===s)(s=i.vnode).el=a,i=i.parent;else break}}const Pk="components";function ri(s,i){return wd(Pk,s,!0,i)||s}const Sd=Symbol.for("v-ndc");function wd(s,i,a=!0,n=!1){const l=ki||Rs;if(l){const t=l.type;if(s===Pk){const k=bg(t,!1);if(k&&(k===i||k===di(i)||k===Cn(di(i))))return t}const e=je(l[s]||t[s],i)||je(l.appContext[s],i);return!e&&n?t:e}}function je(s,i){return s&&(s[i]||s[di(i)]||s[Cn(di(i))])}const Od=s=>s.__isSuspense;function Nk(s,i){i&&i.pendingBranch?is(s)?i.effects.push(...s):i.effects.push(s):vd(s)}function Cl(s,i,a=Rs,n=!1){if(a){const l=a[s]||(a[s]=[]),t=i.__weh||(i.__weh=(...e)=>{sa();const k=_n(a),p=pi(i,a,s,e);return k(),xi(),p});return n?l.unshift(t):l.push(t),t}}const $i=s=>(i,a=Rs)=>{(!In||s==="sp")&&Cl(s,(...n)=>i(...n),a)},Td=$i("bm"),Cs=$i("m"),Pd=$i("bu"),Lk=$i("u"),xk=$i("bum"),Ja=$i("um"),Nd=$i("sp"),Ld=$i("rtg"),xd=$i("rtc");function Rd(s,i=Rs){Cl("ec",s,i)}function Di(s,i,a,n){const l=s.dirs,t=i&&i.dirs;for(let e=0;e<l.length;e++){const k=l[e];t&&(k.oldValue=t[e].value);let p=k.dir[n];p&&(sa(),pi(p,a,8,[s.el,k,s,i]),xi())}}/*! #__NO_SIDE_EFFECTS__ */function $(s,i){return ns(s)?Ss({name:s.name},i,{setup:s}):s}const Za=s=>!!s.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Md(s){ns(s)&&(s={loader:s});const{loader:i,loadingComponent:a,errorComponent:n,delay:l=200,timeout:t,suspensible:e=!0,onError:k}=s;let p=null,r,d=0;const g=()=>(d++,p=null,B()),B=()=>{let c;return p||(c=p=i().catch(E=>{if(E=E instanceof Error?E:new Error(String(E)),k)return new Promise((F,m)=>{k(E,()=>F(g()),()=>m(E),d+1)});throw E}).then(E=>c!==p&&p?p:(E&&(E.__esModule||E[Symbol.toStringTag]==="Module")&&(E=E.default),r=E,E)))};return $({name:"AsyncComponentWrapper",__asyncLoader:B,get __asyncResolved(){return r},setup(){const c=Rs;if(r)return()=>Rl(r,c);const E=D=>{p=null,Dn(D,c,13,!n)};if(e&&c.suspense||In)return B().then(D=>()=>Rl(D,c)).catch(D=>(E(D),()=>n?Is(n,{error:D}):null));const F=Y(!1),m=Y(),C=Y(!!l);return l&&setTimeout(()=>{C.value=!1},l),t!=null&&setTimeout(()=>{if(!F.value&&!m.value){const D=new Error(`Async component timed out after ${t}ms.`);E(D),m.value=D}},t),B().then(()=>{F.value=!0,c.parent&&fn(c.parent.vnode)&&(c.parent.effect.dirty=!0,Fl(c.parent.update))}).catch(D=>{E(D),m.value=D}),()=>{if(F.value&&r)return Rl(r,c);if(m.value&&n)return Is(n,{error:m.value});if(a&&!C.value)return Is(a)}}})}function Rl(s,i){const{ref:a,props:n,children:l,ce:t}=i.vnode,e=Is(s,n,l);return e.ref=a,e.ce=t,delete i.vnode.ce,e}const rt=s=>s?hp(s)?ie(s):rt(s.parent):null,sn=Ss(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>rt(s.parent),$root:s=>rt(s.root),$emit:s=>s.emit,$options:s=>Yt(s),$forceUpdate:s=>s.f||(s.f=()=>{s.effect.dirty=!0,Fl(s.update)}),$nextTick:s=>s.n||(s.n=Mi.bind(s.proxy)),$watch:s=>eg.bind(s)}),Ml=(s,i)=>s!==ms&&!s.__isScriptSetup&&ps(s,i),$d={get({_:s},i){if(i==="__v_skip")return!0;const{ctx:a,setupState:n,data:l,props:t,accessCache:e,type:k,appContext:p}=s;let r;if(i[0]!=="$"){const c=e[i];if(c!==void 0)switch(c){case 1:return n[i];case 2:return l[i];case 4:return a[i];case 3:return t[i]}else{if(Ml(n,i))return e[i]=1,n[i];if(l!==ms&&ps(l,i))return e[i]=2,l[i];if((r=s.propsOptions[0])&&ps(r,i))return e[i]=3,t[i];if(a!==ms&&ps(a,i))return e[i]=4,a[i];dt&&(e[i]=0)}}const d=sn[i];let g,B;if(d)return i==="$attrs"&&Qs(s.attrs,"get",""),d(s);if((g=k.__cssModules)&&(g=g[i]))return g;if(a!==ms&&ps(a,i))return e[i]=4,a[i];if(B=p.config.globalProperties,ps(B,i))return B[i]},set({_:s},i,a){const{data:n,setupState:l,ctx:t}=s;return Ml(l,i)?(l[i]=a,!0):n!==ms&&ps(n,i)?(n[i]=a,!0):ps(s.props,i)||i[0]==="$"&&i.slice(1)in s?!1:(t[i]=a,!0)},has({_:{data:s,setupState:i,accessCache:a,ctx:n,appContext:l,propsOptions:t}},e){let k;return!!a[e]||s!==ms&&ps(s,e)||Ml(i,e)||(k=t[0])&&ps(k,e)||ps(n,e)||ps(sn,e)||ps(l.config.globalProperties,e)},defineProperty(s,i,a){return a.get!=null?s._.accessCache[i]=0:ps(a,"value")&&this.set(s,i,a.value,null),Reflect.defineProperty(s,i,a)}};function Ve(s){return is(s)?s.reduce((i,a)=>(i[a]=null,i),{}):s}let dt=!0;function Jd(s){const i=Yt(s),a=s.proxy,n=s.ctx;dt=!1,i.beforeCreate&&He(i.beforeCreate,s,"bc");const{data:l,computed:t,methods:e,watch:k,provide:p,inject:r,created:d,beforeMount:g,mounted:B,beforeUpdate:c,updated:E,activated:F,deactivated:m,beforeDestroy:C,beforeUnmount:D,destroyed:u,unmounted:b,render:R,renderTracked:P,renderTriggered:w,errorCaptured:U,serverPrefetch:J,expose:T,inheritAttrs:H,components:N,directives:Z,filters:us}=i;if(r&&jd(r,n,null),e)for(const ss in e){const q=e[ss];ns(q)&&(n[ss]=q.bind(a))}if(l){const ss=l.call(a,a);_s(ss)&&(s.data=mn(ss))}if(dt=!0,t)for(const ss in t){const q=t[ss],Os=ns(q)?q.bind(a,a):ns(q.get)?q.get.bind(a,a):hi,vi=!ns(q)&&ns(q.set)?q.set.bind(a):hi,ni=v({get:Os,set:vi});Object.defineProperty(n,ss,{enumerable:!0,configurable:!0,get:()=>ni.value,set:Ls=>ni.value=Ls})}if(k)for(const ss in k)Rk(k[ss],n,a,ss);if(p){const ss=ns(p)?p.call(a):p;Reflect.ownKeys(ss).forEach(q=>{Ei(q,ss[q])})}d&&He(d,s,"c");function W(ss,q){is(q)?q.forEach(Os=>ss(Os.bind(a))):q&&ss(q.bind(a))}if(W(Td,g),W(Cs,B),W(Pd,c),W(Lk,E),W(hg,F),W(kg,m),W(Rd,U),W(xd,P),W(Ld,w),W(xk,D),W(Ja,b),W(Nd,J),is(T))if(T.length){const ss=s.exposed||(s.exposed={});T.forEach(q=>{Object.defineProperty(ss,q,{get:()=>a[q],set:Os=>a[q]=Os})})}else s.exposed||(s.exposed={});R&&s.render===hi&&(s.render=R),H!=null&&(s.inheritAttrs=H),N&&(s.components=N),Z&&(s.directives=Z)}function jd(s,i,a=hi){is(s)&&(s=gt(s));for(const n in s){const l=s[n];let t;_s(l)?"default"in l?t=Ds(l.from||n,l.default,!0):t=Ds(l.from||n):t=Ds(l),$s(t)?Object.defineProperty(i,n,{enumerable:!0,configurable:!0,get:()=>t.value,set:e=>t.value=e}):i[n]=t}}function He(s,i,a){pi(is(s)?s.map(n=>n.bind(i.proxy)):s.bind(i.proxy),i,a)}function Rk(s,i,a,n){const l=n.includes(".")?Qk(a,n):()=>a[n];if(Ms(s)){const t=i[s];ns(t)&&ds(l,t)}else if(ns(s))ds(l,s.bind(a));else if(_s(s))if(is(s))s.forEach(t=>Rk(t,i,a,n));else{const t=ns(s.handler)?s.handler.bind(a):i[s.handler];ns(t)&&ds(l,t,s)}}function Yt(s){const i=s.type,{mixins:a,extends:n}=i,{mixins:l,optionsCache:t,config:{optionMergeStrategies:e}}=s.appContext,k=t.get(i);let p;return k?p=k:!l.length&&!a&&!n?p=i:(p={},l.length&&l.forEach(r=>gl(p,r,e,!0)),gl(p,i,e)),_s(i)&&t.set(i,p),p}function gl(s,i,a,n=!1){const{mixins:l,extends:t}=i;t&&gl(s,t,a,!0),l&&l.forEach(e=>gl(s,e,a,!0));for(const e in i)if(!(n&&e==="expose")){const k=Vd[e]||a&&a[e];s[e]=k?k(s[e],i[e]):i[e]}return s}const Vd={data:ze,props:Ue,emits:Ue,methods:qa,computed:qa,beforeCreate:zs,created:zs,beforeMount:zs,mounted:zs,beforeUpdate:zs,updated:zs,beforeDestroy:zs,beforeUnmount:zs,destroyed:zs,unmounted:zs,activated:zs,deactivated:zs,errorCaptured:zs,serverPrefetch:zs,components:qa,directives:qa,watch:zd,provide:ze,inject:Hd};function ze(s,i){return i?s?function(){return Ss(ns(s)?s.call(this,this):s,ns(i)?i.call(this,this):i)}:i:s}function Hd(s,i){return qa(gt(s),gt(i))}function gt(s){if(is(s)){const i={};for(let a=0;a<s.length;a++)i[s[a]]=s[a];return i}return s}function zs(s,i){return s?[...new Set([].concat(s,i))]:i}function qa(s,i){return s?Ss(Object.create(null),s,i):i}function Ue(s,i){return s?is(s)&&is(i)?[...new Set([...s,...i])]:Ss(Object.create(null),Ve(s),Ve(i??{})):i}function zd(s,i){if(!s)return i;if(!i)return s;const a=Ss(Object.create(null),s);for(const n in i)a[n]=zs(s[n],i[n]);return a}function Mk(){return{app:null,config:{isNativeTag:fr,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Ud=0;function Gd(s,i){return function(n,l=null){ns(n)||(n=Ss({},n)),l!=null&&!_s(l)&&(l=null);const t=Mk(),e=new WeakSet;let k=!1;const p=t.app={_uid:Ud++,_component:n,_props:l,_container:null,_context:t,_instance:null,version:Ig,get config(){return t.config},set config(r){},use(r,...d){return e.has(r)||(r&&ns(r.install)?(e.add(r),r.install(p,...d)):ns(r)&&(e.add(r),r(p,...d))),p},mixin(r){return t.mixins.includes(r)||t.mixins.push(r),p},component(r,d){return d?(t.components[r]=d,p):t.components[r]},directive(r,d){return d?(t.directives[r]=d,p):t.directives[r]},mount(r,d,g){if(!k){const B=Is(n,l);return B.appContext=t,g===!0?g="svg":g===!1&&(g=void 0),d&&i?i(B,r):s(B,r,g),k=!0,p._container=r,r.__vue_app__=p,ie(B.component)}},unmount(){k&&(s(null,p._container),delete p._container.__vue_app__)},provide(r,d){return t.provides[r]=d,p},runWithContext(r){const d=an;an=p;try{return r()}finally{an=d}}};return p}}let an=null;function Ei(s,i){if(Rs){let a=Rs.provides;const n=Rs.parent&&Rs.parent.provides;n===a&&(a=Rs.provides=Object.create(n)),a[s]=i}}function Ds(s,i,a=!1){const n=Rs||ki;if(n||an){const l=n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:an._context.provides;if(l&&s in l)return l[s];if(arguments.length>1)return a&&ns(i)?i.call(n&&n.proxy):i}}const $k={},Jk=()=>Object.create($k),jk=s=>Object.getPrototypeOf(s)===$k;function Wd(s,i,a,n=!1){const l={},t=Jk();s.propsDefaults=Object.create(null),Vk(s,i,l,t);for(const e in s.propsOptions[0])e in l||(l[e]=void 0);a?s.props=n?l:Ck(l):s.type.props?s.props=l:s.props=t,s.attrs=t}function qd(s,i,a,n){const{props:l,attrs:t,vnode:{patchFlag:e}}=s,k=rs(l),[p]=s.propsOptions;let r=!1;if((n||e>0)&&!(e&16)){if(e&8){const d=s.vnode.dynamicProps;for(let g=0;g<d.length;g++){let B=d[g];if(vl(s.emitsOptions,B))continue;const c=i[B];if(p)if(ps(t,B))c!==t[B]&&(t[B]=c,r=!0);else{const E=di(B);l[E]=Bt(p,k,E,c,s,!1)}else c!==t[B]&&(t[B]=c,r=!0)}}}else{Vk(s,i,l,t)&&(r=!0);let d;for(const g in k)(!i||!ps(i,g)&&((d=Ma(g))===g||!ps(i,d)))&&(p?a&&(a[g]!==void 0||a[d]!==void 0)&&(l[g]=Bt(p,k,g,void 0,s,!0)):delete l[g]);if(t!==k)for(const g in t)(!i||!ps(i,g))&&(delete t[g],r=!0)}r&&Li(s.attrs,"set","")}function Vk(s,i,a,n){const[l,t]=s.propsOptions;let e=!1,k;if(i)for(let p in i){if(ba(p))continue;const r=i[p];let d;l&&ps(l,d=di(p))?!t||!t.includes(d)?a[d]=r:(k||(k={}))[d]=r:vl(s.emitsOptions,p)||(!(p in n)||r!==n[p])&&(n[p]=r,e=!0)}if(t){const p=rs(a),r=k||ms;for(let d=0;d<t.length;d++){const g=t[d];a[g]=Bt(l,p,g,r[g],s,!ps(r,g))}}return e}function Bt(s,i,a,n,l,t){const e=s[a];if(e!=null){const k=ps(e,"default");if(k&&n===void 0){const p=e.default;if(e.type!==Function&&!e.skipFactory&&ns(p)){const{propsDefaults:r}=l;if(a in r)n=r[a];else{const d=_n(l);n=r[a]=p.call(null,i),d()}}else n=p}e[0]&&(t&&!k?n=!1:e[1]&&(n===""||n===Ma(a))&&(n=!0))}return n}function Hk(s,i,a=!1){const n=i.propsCache,l=n.get(s);if(l)return l;const t=s.props,e={},k=[];let p=!1;if(!ns(s)){const d=g=>{p=!0;const[B,c]=Hk(g,i,!0);Ss(e,B),c&&k.push(...c)};!a&&i.mixins.length&&i.mixins.forEach(d),s.extends&&d(s.extends),s.mixins&&s.mixins.forEach(d)}if(!t&&!p)return _s(s)&&n.set(s,fa),fa;if(is(t))for(let d=0;d<t.length;d++){const g=di(t[d]);Ge(g)&&(e[g]=ms)}else if(t)for(const d in t){const g=di(d);if(Ge(g)){const B=t[d],c=e[g]=is(B)||ns(B)?{type:B}:Ss({},B);if(c){const E=Ke(Boolean,c.type),F=Ke(String,c.type);c[0]=E>-1,c[1]=F<0||E<F,(E>-1||ps(c,"default"))&&k.push(g)}}}const r=[e,k];return _s(s)&&n.set(s,r),r}function Ge(s){return s[0]!=="$"&&!ba(s)}function We(s){return s===null?"null":typeof s=="function"?s.name||"":typeof s=="object"&&s.constructor&&s.constructor.name||""}function qe(s,i){return We(s)===We(i)}function Ke(s,i){return is(i)?i.findIndex(a=>qe(a,s)):ns(i)&&qe(i,s)?0:-1}const zk=s=>s[0]==="_"||s==="$stable",Qt=s=>is(s)?s.map(oi):[oi(s)],Kd=(s,i,a)=>{if(i._n)return i;const n=Dd((...l)=>Qt(i(...l)),a);return n._c=!1,n},Uk=(s,i,a)=>{const n=s._ctx;for(const l in s){if(zk(l))continue;const t=s[l];if(ns(t))i[l]=Kd(l,t,n);else if(t!=null){const e=Qt(t);i[l]=()=>e}}},Gk=(s,i)=>{const a=Qt(i);s.slots.default=()=>a},Yd=(s,i)=>{const a=s.slots=Jk();if(s.vnode.shapeFlag&32){const n=i._;n?(Ss(a,i),hk(a,"_",n,!0)):Uk(i,a)}else i&&Gk(s,i)},Qd=(s,i,a)=>{const{vnode:n,slots:l}=s;let t=!0,e=ms;if(n.shapeFlag&32){const k=i._;k?a&&k===1?t=!1:(Ss(l,i),!a&&k===1&&delete l._):(t=!i.$stable,Uk(i,l)),e=i}else i&&(Gk(s,i),e={default:1});if(t)for(const k in l)!zk(k)&&e[k]==null&&delete l[k]};function Bl(s,i,a,n,l=!1){if(is(s)){s.forEach((B,c)=>Bl(B,i&&(is(i)?i[c]:i),a,n,l));return}if(Za(n)&&!l)return;const t=n.shapeFlag&4?ie(n.component):n.el,e=l?null:t,{i:k,r:p}=s,r=i&&i.r,d=k.refs===ms?k.refs={}:k.refs,g=k.setupState;if(r!=null&&r!==p&&(Ms(r)?(d[r]=null,ps(g,r)&&(g[r]=null)):$s(r)&&(r.value=null)),ns(p))Yi(p,k,12,[e,d]);else{const B=Ms(p),c=$s(p);if(B||c){const E=()=>{if(s.f){const F=B?ps(g,p)?g[p]:d[p]:p.value;l?is(F)&&Rt(F,t):is(F)?F.includes(t)||F.push(t):B?(d[p]=[t],ps(g,p)&&(g[p]=d[p])):(p.value=[t],s.k&&(d[s.k]=p.value))}else B?(d[p]=e,ps(g,p)&&(g[p]=e)):c&&(p.value=e,s.k&&(d[s.k]=e))};e?(E.id=-1,qs(E,a)):E()}}}let Ye=!1;const Fa=()=>{Ye||(console.error("Hydration completed but contains mismatches."),Ye=!0)},Xd=s=>s.namespaceURI.includes("svg")&&s.tagName!=="foreignObject",Zd=s=>s.namespaceURI.includes("MathML"),Kn=s=>{if(Xd(s))return"svg";if(Zd(s))return"mathml"},Yn=s=>s.nodeType===8;function sg(s){const{mt:i,p:a,o:{patchProp:n,createText:l,nextSibling:t,parentNode:e,remove:k,insert:p,createComment:r}}=s,d=(u,b)=>{if(!b.hasChildNodes()){a(null,u,b),rl(),b._vnode=u;return}g(b.firstChild,u,null,null,null),rl(),b._vnode=u},g=(u,b,R,P,w,U=!1)=>{U=U||!!b.dynamicChildren;const J=Yn(u)&&u.data==="[",T=()=>F(u,b,R,P,w,J),{type:H,ref:N,shapeFlag:Z,patchFlag:us}=b;let As=u.nodeType;b.el=u,us===-2&&(U=!1,b.dynamicChildren=null);let W=null;switch(H){case Ta:As!==3?b.children===""?(p(b.el=l(""),e(u),u),W=u):W=T():(u.data!==b.children&&(Fa(),u.data=b.children),W=t(u));break;case Ks:D(u)?(W=t(u),C(b.el=u.content.firstChild,u,R)):As!==8||J?W=T():W=t(u);break;case nn:if(J&&(u=t(u),As=u.nodeType),As===1||As===3){W=u;const ss=!b.children.length;for(let q=0;q<b.staticCount;q++)ss&&(b.children+=W.nodeType===1?W.outerHTML:W.data),q===b.staticCount-1&&(b.anchor=W),W=t(W);return J?t(W):W}else T();break;case ii:J?W=E(u,b,R,P,w,U):W=T();break;default:if(Z&1)(As!==1||b.type.toLowerCase()!==u.tagName.toLowerCase())&&!D(u)?W=T():W=B(u,b,R,P,w,U);else if(Z&6){b.slotScopeIds=w;const ss=e(u);if(J?W=m(u):Yn(u)&&u.data==="teleport start"?W=m(u,u.data,"teleport end"):W=t(u),i(b,ss,null,R,P,Kn(ss),U),Za(b)){let q;J?(q=Is(ii),q.anchor=W?W.previousSibling:ss.lastChild):q=u.nodeType===3?ep(""):Is("div"),q.el=u,b.component.subTree=q}}else Z&64?As!==8?W=T():W=b.type.hydrate(u,b,R,P,w,U,s,c):Z&128&&(W=b.type.hydrate(u,b,R,P,Kn(e(u)),w,U,s,g))}return N!=null&&Bl(N,null,P,b),W},B=(u,b,R,P,w,U)=>{U=U||!!b.dynamicChildren;const{type:J,props:T,patchFlag:H,shapeFlag:N,dirs:Z,transition:us}=b,As=J==="input"||J==="option";if(As||H!==-1){Z&&Di(b,null,R,"created");let W=!1;if(D(u)){W=Wk(P,us)&&R&&R.vnode.props&&R.vnode.props.appear;const q=u.content.firstChild;W&&us.beforeEnter(q),C(q,u,R),b.el=u=q}if(N&16&&!(T&&(T.innerHTML||T.textContent))){let q=c(u.firstChild,b,u,R,P,w,U);for(;q;){Fa();const Os=q;q=q.nextSibling,k(Os)}}else N&8&&u.textContent!==b.children&&(Fa(),u.textContent=b.children);if(T)if(As||!U||H&48)for(const q in T)(As&&(q.endsWith("value")||q==="indeterminate")||vn(q)&&!ba(q)||q[0]===".")&&n(u,q,null,T[q],void 0,void 0,R);else T.onClick&&n(u,"onClick",null,T.onClick,void 0,void 0,R);let ss;(ss=T&&T.onVnodeBeforeMount)&&ti(ss,R,b),Z&&Di(b,null,R,"beforeMount"),((ss=T&&T.onVnodeMounted)||Z||W)&&Nk(()=>{ss&&ti(ss,R,b),W&&us.enter(u),Z&&Di(b,null,R,"mounted")},P)}return u.nextSibling},c=(u,b,R,P,w,U,J)=>{J=J||!!b.dynamicChildren;const T=b.children,H=T.length;for(let N=0;N<H;N++){const Z=J?T[N]:T[N]=oi(T[N]);u?u=g(u,Z,P,w,U,J):Z.type===Ta&&!Z.children?p(Z.el=l(""),R):(Fa(),a(null,Z,R,null,P,w,Kn(R),U))}return u},E=(u,b,R,P,w,U)=>{const{slotScopeIds:J}=b;J&&(w=w?w.concat(J):J);const T=e(u),H=c(t(u),b,T,R,P,w,U);return H&&Yn(H)&&H.data==="]"?t(b.anchor=H):(Fa(),p(b.anchor=r("]"),T,H),H)},F=(u,b,R,P,w,U)=>{if(Fa(),b.el=null,U){const H=m(u);for(;;){const N=t(u);if(N&&N!==H)k(N);else break}}const J=t(u),T=e(u);return k(u),a(null,b,T,J,R,P,Kn(T),w),J},m=(u,b="[",R="]")=>{let P=0;for(;u;)if(u=t(u),u&&Yn(u)&&(u.data===b&&P++,u.data===R)){if(P===0)return t(u);P--}return u},C=(u,b,R)=>{const P=b.parentNode;P&&P.replaceChild(u,b);let w=R;for(;w;)w.vnode.el===b&&(w.vnode.el=w.subTree.el=u),w=w.parent},D=u=>u.nodeType===1&&u.tagName.toLowerCase()==="template";return[d,g]}const qs=Nk;function ig(s){return ag(s,sg)}function ag(s,i){const a=kk();a.__VUE__=!0;const{insert:n,remove:l,patchProp:t,createElement:e,createText:k,createComment:p,setText:r,setElementText:d,parentNode:g,nextSibling:B,setScopeId:c=hi,insertStaticContent:E}=s,F=(o,y,f,S=null,I=null,x=null,V=void 0,L=null,M=!!y.dynamicChildren)=>{if(o===y)return;o&&!ka(o,y)&&(S=_(o),Ls(o,I,x,!0),o=null),y.patchFlag===-2&&(M=!1,y.dynamicChildren=null);const{type:O,ref:G,shapeFlag:X}=y;switch(O){case Ta:m(o,y,f,S);break;case Ks:C(o,y,f,S);break;case nn:o==null&&D(y,f,S,V);break;case ii:N(o,y,f,S,I,x,V,L,M);break;default:X&1?R(o,y,f,S,I,x,V,L,M):X&6?Z(o,y,f,S,I,x,V,L,M):(X&64||X&128)&&O.process(o,y,f,S,I,x,V,L,M,K)}G!=null&&I&&Bl(G,o&&o.ref,x,y||o,!y)},m=(o,y,f,S)=>{if(o==null)n(y.el=k(y.children),f,S);else{const I=y.el=o.el;y.children!==o.children&&r(I,y.children)}},C=(o,y,f,S)=>{o==null?n(y.el=p(y.children||""),f,S):y.el=o.el},D=(o,y,f,S)=>{[o.el,o.anchor]=E(o.children,y,f,S,o.el,o.anchor)},u=({el:o,anchor:y},f,S)=>{let I;for(;o&&o!==y;)I=B(o),n(o,f,S),o=I;n(y,f,S)},b=({el:o,anchor:y})=>{let f;for(;o&&o!==y;)f=B(o),l(o),o=f;l(y)},R=(o,y,f,S,I,x,V,L,M)=>{y.type==="svg"?V="svg":y.type==="math"&&(V="mathml"),o==null?P(y,f,S,I,x,V,L,M):J(o,y,I,x,V,L,M)},P=(o,y,f,S,I,x,V,L)=>{let M,O;const{props:G,shapeFlag:X,transition:Q,dirs:as}=o;if(M=o.el=e(o.type,x,G&&G.is,G),X&8?d(M,o.children):X&16&&U(o.children,M,null,S,I,$l(o,x),V,L),as&&Di(o,null,S,"created"),w(M,o,o.scopeId,V,S),G){for(const Fs in G)Fs!=="value"&&!ba(Fs)&&t(M,Fs,null,G[Fs],x,o.children,S,I,Ts);"value"in G&&t(M,"value",null,G.value,x),(O=G.onVnodeBeforeMount)&&ti(O,S,o)}as&&Di(o,null,S,"beforeMount");const ts=Wk(I,Q);ts&&Q.beforeEnter(M),n(M,y,f),((O=G&&G.onVnodeMounted)||ts||as)&&qs(()=>{O&&ti(O,S,o),ts&&Q.enter(M),as&&Di(o,null,S,"mounted")},I)},w=(o,y,f,S,I)=>{if(f&&c(o,f),S)for(let x=0;x<S.length;x++)c(o,S[x]);if(I){let x=I.subTree;if(y===x){const V=I.vnode;w(o,V,V.scopeId,V.slotScopeIds,I.parent)}}},U=(o,y,f,S,I,x,V,L,M=0)=>{for(let O=M;O<o.length;O++){const G=o[O]=L?Wi(o[O]):oi(o[O]);F(null,G,y,f,S,I,x,V,L)}},J=(o,y,f,S,I,x,V)=>{const L=y.el=o.el;let{patchFlag:M,dynamicChildren:O,dirs:G}=y;M|=o.patchFlag&16;const X=o.props||ms,Q=y.props||ms;let as;if(f&&na(f,!1),(as=Q.onVnodeBeforeUpdate)&&ti(as,f,y,o),G&&Di(y,o,f,"beforeUpdate"),f&&na(f,!0),O?T(o.dynamicChildren,O,L,f,S,$l(y,I),x):V||q(o,y,L,null,f,S,$l(y,I),x,!1),M>0){if(M&16)H(L,y,X,Q,f,S,I);else if(M&2&&X.class!==Q.class&&t(L,"class",null,Q.class,I),M&4&&t(L,"style",X.style,Q.style,I),M&8){const ts=y.dynamicProps;for(let Fs=0;Fs<ts.length;Fs++){const Bs=ts[Fs],xs=X[Bs],Bi=Q[Bs];(Bi!==xs||Bs==="value")&&t(L,Bs,xs,Bi,I,o.children,f,S,Ts)}}M&1&&o.children!==y.children&&d(L,y.children)}else!V&&O==null&&H(L,y,X,Q,f,S,I);((as=Q.onVnodeUpdated)||G)&&qs(()=>{as&&ti(as,f,y,o),G&&Di(y,o,f,"updated")},S)},T=(o,y,f,S,I,x,V)=>{for(let L=0;L<y.length;L++){const M=o[L],O=y[L],G=M.el&&(M.type===ii||!ka(M,O)||M.shapeFlag&70)?g(M.el):f;F(M,O,G,null,S,I,x,V,!0)}},H=(o,y,f,S,I,x,V)=>{if(f!==S){if(f!==ms)for(const L in f)!ba(L)&&!(L in S)&&t(o,L,f[L],null,V,y.children,I,x,Ts);for(const L in S){if(ba(L))continue;const M=S[L],O=f[L];M!==O&&L!=="value"&&t(o,L,O,M,V,y.children,I,x,Ts)}"value"in S&&t(o,"value",f.value,S.value,V)}},N=(o,y,f,S,I,x,V,L,M)=>{const O=y.el=o?o.el:k(""),G=y.anchor=o?o.anchor:k("");let{patchFlag:X,dynamicChildren:Q,slotScopeIds:as}=y;as&&(L=L?L.concat(as):as),o==null?(n(O,f,S),n(G,f,S),U(y.children||[],f,G,I,x,V,L,M)):X>0&&X&64&&Q&&o.dynamicChildren?(T(o.dynamicChildren,Q,f,I,x,V,L),(y.key!=null||I&&y===I.subTree)&&qk(o,y,!0)):q(o,y,f,G,I,x,V,L,M)},Z=(o,y,f,S,I,x,V,L,M)=>{y.slotScopeIds=L,o==null?y.shapeFlag&512?I.ctx.activate(y,f,S,V,M):us(y,f,S,I,x,V,M):As(o,y,M)},us=(o,y,f,S,I,x,V)=>{const L=o.component=vg(o,S,I);if(fn(o)&&(L.ctx.renderer=K),Cg(L),L.asyncDep){if(I&&I.registerDep(L,W,V),!o.el){const M=L.subTree=Is(Ks);C(null,M,y,f)}}else W(L,o,y,f,I,x,V)},As=(o,y,f)=>{const S=y.component=o.component;if(_d(o,y,f))if(S.asyncDep&&!S.asyncResolved){ss(S,y,f);return}else S.next=y,Fd(S.update),S.effect.dirty=!0,S.update();else y.el=o.el,S.vnode=y},W=(o,y,f,S,I,x,V)=>{const L=()=>{if(o.isMounted){let{next:G,bu:X,u:Q,parent:as,vnode:ts}=o;{const Aa=Kk(o);if(Aa){G&&(G.el=ts.el,ss(o,G,V)),Aa.asyncDep.then(()=>{o.isUnmounted||L()});return}}let Fs=G,Bs;na(o,!1),G?(G.el=ts.el,ss(o,G,V)):G=ts,X&&Ll(X),(Bs=G.props&&G.props.onVnodeBeforeUpdate)&&ti(Bs,as,G,ts),na(o,!0);const xs=xl(o),Bi=o.subTree;o.subTree=xs,F(Bi,xs,g(Bi.el),_(Bi),o,I,x),G.el=xs.el,Fs===null&&Id(o,xs.el),Q&&qs(Q,I),(Bs=G.props&&G.props.onVnodeUpdated)&&qs(()=>ti(Bs,as,G,ts),I)}else{let G;const{el:X,props:Q}=y,{bm:as,m:ts,parent:Fs}=o,Bs=Za(y);if(na(o,!1),as&&Ll(as),!Bs&&(G=Q&&Q.onVnodeBeforeMount)&&ti(G,Fs,y),na(o,!0),X&&ys){const xs=()=>{o.subTree=xl(o),ys(X,o.subTree,o,I,null)};Bs?y.type.__asyncLoader().then(()=>!o.isUnmounted&&xs()):xs()}else{const xs=o.subTree=xl(o);F(null,xs,f,S,o,I,x),y.el=xs.el}if(ts&&qs(ts,I),!Bs&&(G=Q&&Q.onVnodeMounted)){const xs=y;qs(()=>ti(G,Fs,xs),I)}(y.shapeFlag&256||Fs&&Za(Fs.vnode)&&Fs.vnode.shapeFlag&256)&&o.a&&qs(o.a,I),o.isMounted=!0,y=f=S=null}},M=o.effect=new jt(L,hi,()=>Fl(O),o.scope),O=o.update=()=>{M.dirty&&M.run()};O.id=o.uid,na(o,!0),O()},ss=(o,y,f)=>{y.component=o;const S=o.vnode.props;o.vnode=y,o.next=null,qd(o,y.props,S,f),Qd(o,y.children,f),sa(),$e(o),xi()},q=(o,y,f,S,I,x,V,L,M=!1)=>{const O=o&&o.children,G=o?o.shapeFlag:0,X=y.children,{patchFlag:Q,shapeFlag:as}=y;if(Q>0){if(Q&128){vi(O,X,f,S,I,x,V,L,M);return}else if(Q&256){Os(O,X,f,S,I,x,V,L,M);return}}as&8?(G&16&&Ts(O,I,x),X!==O&&d(f,X)):G&16?as&16?vi(O,X,f,S,I,x,V,L,M):Ts(O,I,x,!0):(G&8&&d(f,""),as&16&&U(X,f,S,I,x,V,L,M))},Os=(o,y,f,S,I,x,V,L,M)=>{o=o||fa,y=y||fa;const O=o.length,G=y.length,X=Math.min(O,G);let Q;for(Q=0;Q<X;Q++){const as=y[Q]=M?Wi(y[Q]):oi(y[Q]);F(o[Q],as,f,null,I,x,V,L,M)}O>G?Ts(o,I,x,!0,!1,X):U(y,f,S,I,x,V,L,M,X)},vi=(o,y,f,S,I,x,V,L,M)=>{let O=0;const G=y.length;let X=o.length-1,Q=G-1;for(;O<=X&&O<=Q;){const as=o[O],ts=y[O]=M?Wi(y[O]):oi(y[O]);if(ka(as,ts))F(as,ts,f,null,I,x,V,L,M);else break;O++}for(;O<=X&&O<=Q;){const as=o[X],ts=y[Q]=M?Wi(y[Q]):oi(y[Q]);if(ka(as,ts))F(as,ts,f,null,I,x,V,L,M);else break;X--,Q--}if(O>X){if(O<=Q){const as=Q+1,ts=as<G?y[as].el:S;for(;O<=Q;)F(null,y[O]=M?Wi(y[O]):oi(y[O]),f,ts,I,x,V,L,M),O++}}else if(O>Q)for(;O<=X;)Ls(o[O],I,x,!0),O++;else{const as=O,ts=O,Fs=new Map;for(O=ts;O<=Q;O++){const Zs=y[O]=M?Wi(y[O]):oi(y[O]);Zs.key!=null&&Fs.set(Zs.key,O)}let Bs,xs=0;const Bi=Q-ts+1;let Aa=!1,Ie=0;const za=new Array(Bi);for(O=0;O<Bi;O++)za[O]=0;for(O=as;O<=X;O++){const Zs=o[O];if(xs>=Bi){Ls(Zs,I,x,!0);continue}let mi;if(Zs.key!=null)mi=Fs.get(Zs.key);else for(Bs=ts;Bs<=Q;Bs++)if(za[Bs-ts]===0&&ka(Zs,y[Bs])){mi=Bs;break}mi===void 0?Ls(Zs,I,x,!0):(za[mi-ts]=O+1,mi>=Ie?Ie=mi:Aa=!0,F(Zs,y[mi],f,null,I,x,V,L,M),xs++)}const Se=Aa?ng(za):fa;for(Bs=Se.length-1,O=Bi-1;O>=0;O--){const Zs=ts+O,mi=y[Zs],we=Zs+1<G?y[Zs+1].el:S;za[O]===0?F(null,mi,f,we,I,x,V,L,M):Aa&&(Bs<0||O!==Se[Bs]?ni(mi,f,we,2):Bs--)}}},ni=(o,y,f,S,I=null)=>{const{el:x,type:V,transition:L,children:M,shapeFlag:O}=o;if(O&6){ni(o.component.subTree,y,f,S);return}if(O&128){o.suspense.move(y,f,S);return}if(O&64){V.move(o,y,f,K);return}if(V===ii){n(x,y,f);for(let X=0;X<M.length;X++)ni(M[X],y,f,S);n(o.anchor,y,f);return}if(V===nn){u(o,y,f);return}if(S!==2&&O&1&&L)if(S===0)L.beforeEnter(x),n(x,y,f),qs(()=>L.enter(x),I);else{const{leave:X,delayLeave:Q,afterLeave:as}=L,ts=()=>n(x,y,f),Fs=()=>{X(x,()=>{ts(),as&&as()})};Q?Q(x,ts,Fs):Fs()}else n(x,y,f)},Ls=(o,y,f,S=!1,I=!1)=>{const{type:x,props:V,ref:L,children:M,dynamicChildren:O,shapeFlag:G,patchFlag:X,dirs:Q,memoIndex:as}=o;if(X===-2&&(I=!1),L!=null&&Bl(L,null,f,o,!0),as!=null&&(y.renderCache[as]=void 0),G&256){y.ctx.deactivate(o);return}const ts=G&1&&Q,Fs=!Za(o);let Bs;if(Fs&&(Bs=V&&V.onVnodeBeforeUnmount)&&ti(Bs,y,o),G&6)Ci(o.component,f,S);else{if(G&128){o.suspense.unmount(f,S);return}ts&&Di(o,null,y,"beforeUnmount"),G&64?o.type.remove(o,y,f,K,S):O&&(x!==ii||X>0&&X&64)?Ts(O,y,f,!1,!0):(x===ii&&X&384||!I&&G&16)&&Ts(M,y,f),S&&Xs(o)}(Fs&&(Bs=V&&V.onVnodeUnmounted)||ts)&&qs(()=>{Bs&&ti(Bs,y,o),ts&&Di(o,null,y,"unmounted")},f)},Xs=o=>{const{type:y,el:f,anchor:S,transition:I}=o;if(y===ii){Si(f,S);return}if(y===nn){b(o);return}const x=()=>{l(f),I&&!I.persisted&&I.afterLeave&&I.afterLeave()};if(o.shapeFlag&1&&I&&!I.persisted){const{leave:V,delayLeave:L}=I,M=()=>V(f,x);L?L(o.el,x,M):M()}else x()},Si=(o,y)=>{let f;for(;o!==y;)f=B(o),l(o),o=f;l(y)},Ci=(o,y,f)=>{const{bum:S,scope:I,update:x,subTree:V,um:L,m:M,a:O}=o;Qe(M),Qe(O),S&&Ll(S),I.stop(),x&&(x.active=!1,Ls(V,o,y,f)),L&&qs(L,y),qs(()=>{o.isUnmounted=!0},y),y&&y.pendingBranch&&!y.isUnmounted&&o.asyncDep&&!o.asyncResolved&&o.suspenseId===y.pendingId&&(y.deps--,y.deps===0&&y.resolve())},Ts=(o,y,f,S=!1,I=!1,x=0)=>{for(let V=x;V<o.length;V++)Ls(o[V],y,f,S,I)},_=o=>o.shapeFlag&6?_(o.component.subTree):o.shapeFlag&128?o.suspense.next():B(o.anchor||o.el);let z=!1;const j=(o,y,f)=>{o==null?y._vnode&&Ls(y._vnode,null,null,!0):F(y._vnode||null,o,y,null,null,null,f),z||(z=!0,$e(),rl(),z=!1),y._vnode=o},K={p:F,um:Ls,m:ni,r:Xs,mt:us,mc:U,pc:q,pbc:T,n:_,o:s};let hs,ys;return i&&([hs,ys]=i(K)),{render:j,hydrate:hs,createApp:Gd(j,hs)}}function $l({type:s,props:i},a){return a==="svg"&&s==="foreignObject"||a==="mathml"&&s==="annotation-xml"&&i&&i.encoding&&i.encoding.includes("html")?void 0:a}function na({effect:s,update:i},a){s.allowRecurse=i.allowRecurse=a}function Wk(s,i){return(!s||s&&!s.pendingBranch)&&i&&!i.persisted}function qk(s,i,a=!1){const n=s.children,l=i.children;if(is(n)&&is(l))for(let t=0;t<n.length;t++){const e=n[t];let k=l[t];k.shapeFlag&1&&!k.dynamicChildren&&((k.patchFlag<=0||k.patchFlag===32)&&(k=l[t]=Wi(l[t]),k.el=e.el),!a&&k.patchFlag!==-2&&qk(e,k)),k.type===Ta&&(k.el=e.el)}}function ng(s){const i=s.slice(),a=[0];let n,l,t,e,k;const p=s.length;for(n=0;n<p;n++){const r=s[n];if(r!==0){if(l=a[a.length-1],s[l]<r){i[n]=l,a.push(n);continue}for(t=0,e=a.length-1;t<e;)k=t+e>>1,s[a[k]]<r?t=k+1:e=k;r<s[a[t]]&&(t>0&&(i[n]=a[t-1]),a[t]=n)}}for(t=a.length,e=a[t-1];t-- >0;)a[t]=e,e=i[e];return a}function Kk(s){const i=s.subTree.component;if(i)return i.asyncDep&&!i.asyncResolved?i:Kk(i)}function Qe(s){if(s)for(let i=0;i<s.length;i++)s[i].active=!1}const lg=Symbol.for("v-scx"),tg=()=>Ds(lg);function Yk(s,i){return Xt(s,null,i)}const Qn={};function ds(s,i,a){return Xt(s,i,a)}function Xt(s,i,{immediate:a,deep:n,flush:l,once:t,onTrack:e,onTrigger:k}=ms){if(i&&t){const P=i;i=(...w)=>{P(...w),R()}}const p=Rs,r=P=>n===!0?P:ha(P,n===!1?1:void 0);let d,g=!1,B=!1;if($s(s)?(d=()=>s.value,g=pl(s)):Qa(s)?(d=()=>r(s),g=!0):is(s)?(B=!0,g=s.some(P=>Qa(P)||pl(P)),d=()=>s.map(P=>{if($s(P))return P.value;if(Qa(P))return r(P);if(ns(P))return Yi(P,p,2)})):ns(s)?i?d=()=>Yi(s,p,2):d=()=>(c&&c(),pi(s,p,3,[E])):d=hi,i&&n){const P=d;d=()=>ha(P())}let c,E=P=>{c=u.onStop=()=>{Yi(P,p,4),c=u.onStop=void 0}},F;if(In)if(E=hi,i?a&&pi(i,p,3,[d(),B?[]:void 0,E]):d(),l==="sync"){const P=tg();F=P.__watcherHandles||(P.__watcherHandles=[])}else return hi;let m=B?new Array(s.length).fill(Qn):Qn;const C=()=>{if(!(!u.active||!u.dirty))if(i){const P=u.run();(n||g||(B?P.some((w,U)=>Qi(w,m[U])):Qi(P,m)))&&(c&&c(),pi(i,p,3,[P,m===Qn?void 0:B&&m[0]===Qn?[]:m,E]),m=P)}else u.run()};C.allowRecurse=!!i;let D;l==="sync"?D=C:l==="post"?D=()=>qs(C,p&&p.suspense):(C.pre=!0,p&&(C.id=p.uid),D=()=>Fl(C));const u=new jt(d,hi,D),b=rk(),R=()=>{u.stop(),b&&Rt(b.effects,u)};return i?a?C():m=u.run():l==="post"?qs(u.run.bind(u),p&&p.suspense):u.run(),F&&F.push(R),R}function eg(s,i,a){const n=this.proxy,l=Ms(s)?s.includes(".")?Qk(n,s):()=>n[s]:s.bind(n,n);let t;ns(i)?t=i:(t=i.handler,a=i);const e=_n(this),k=Xt(l,t.bind(n),a);return e(),k}function Qk(s,i){const a=i.split(".");return()=>{let n=s;for(let l=0;l<a.length&&n;l++)n=n[a[l]];return n}}function ha(s,i=1/0,a){if(i<=0||!_s(s)||s.__v_skip||(a=a||new Set,a.has(s)))return s;if(a.add(s),i--,$s(s))ha(s.value,i,a);else if(is(s))for(let n=0;n<s.length;n++)ha(s[n],i,a);else if(_r(s)||Ya(s))s.forEach(n=>{ha(n,i,a)});else if(wr(s)){for(const n in s)ha(s[n],i,a);for(const n of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,n)&&ha(s[n],i,a)}return s}const fn=s=>s.type.__isKeepAlive;function hg(s,i){Xk(s,"a",i)}function kg(s,i){Xk(s,"da",i)}function Xk(s,i,a=Rs){const n=s.__wdc||(s.__wdc=()=>{let l=a;for(;l;){if(l.isDeactivated)return;l=l.parent}return s()});if(Cl(i,n,a),a){let l=a.parent;for(;l&&l.parent;)fn(l.parent.vnode)&&pg(n,i,a,l),l=l.parent}}function pg(s,i,a,n){const l=Cl(i,s,n,!0);Ja(()=>{Rt(n[i],l)},a)}const Gi=Symbol("_leaveCb"),Xn=Symbol("_enterCb");function Zk(){const s={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Cs(()=>{s.isMounted=!0}),xk(()=>{s.isUnmounting=!0}),s}const li=[Function,Array],sp={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:li,onEnter:li,onAfterEnter:li,onEnterCancelled:li,onBeforeLeave:li,onLeave:li,onAfterLeave:li,onLeaveCancelled:li,onBeforeAppear:li,onAppear:li,onAfterAppear:li,onAppearCancelled:li},ip=s=>{const i=s.subTree;return i.component?ip(i.component):i},rg={name:"BaseTransition",props:sp,setup(s,{slots:i}){const a=bn(),n=Zk();return()=>{const l=i.default&&Zt(i.default(),!0);if(!l||!l.length)return;let t=l[0];if(l.length>1){for(const B of l)if(B.type!==Ks){t=B;break}}const e=rs(s),{mode:k}=e;if(n.isLeaving)return Jl(t);const p=Xe(t);if(!p)return Jl(t);let r=gn(p,e,n,a,B=>r=B);Oa(p,r);const d=a.subTree,g=d&&Xe(d);if(g&&g.type!==Ks&&!ka(p,g)&&ip(a).type!==Ks){const B=gn(g,e,n,a);if(Oa(g,B),k==="out-in"&&p.type!==Ks)return n.isLeaving=!0,B.afterLeave=()=>{n.isLeaving=!1,a.update.active!==!1&&(a.effect.dirty=!0,a.update())},Jl(t);k==="in-out"&&p.type!==Ks&&(B.delayLeave=(c,E,F)=>{const m=ap(n,g);m[String(g.key)]=g,c[Gi]=()=>{E(),c[Gi]=void 0,delete r.delayedLeave},r.delayedLeave=F})}return t}}},dg=rg;function ap(s,i){const{leavingVNodes:a}=s;let n=a.get(i.type);return n||(n=Object.create(null),a.set(i.type,n)),n}function gn(s,i,a,n,l){const{appear:t,mode:e,persisted:k=!1,onBeforeEnter:p,onEnter:r,onAfterEnter:d,onEnterCancelled:g,onBeforeLeave:B,onLeave:c,onAfterLeave:E,onLeaveCancelled:F,onBeforeAppear:m,onAppear:C,onAfterAppear:D,onAppearCancelled:u}=i,b=String(s.key),R=ap(a,s),P=(J,T)=>{J&&pi(J,n,9,T)},w=(J,T)=>{const H=T[1];P(J,T),is(J)?J.every(N=>N.length<=1)&&H():J.length<=1&&H()},U={mode:e,persisted:k,beforeEnter(J){let T=p;if(!a.isMounted)if(t)T=m||p;else return;J[Gi]&&J[Gi](!0);const H=R[b];H&&ka(s,H)&&H.el[Gi]&&H.el[Gi](),P(T,[J])},enter(J){let T=r,H=d,N=g;if(!a.isMounted)if(t)T=C||r,H=D||d,N=u||g;else return;let Z=!1;const us=J[Xn]=As=>{Z||(Z=!0,As?P(N,[J]):P(H,[J]),U.delayedLeave&&U.delayedLeave(),J[Xn]=void 0)};T?w(T,[J,us]):us()},leave(J,T){const H=String(s.key);if(J[Xn]&&J[Xn](!0),a.isUnmounting)return T();P(B,[J]);let N=!1;const Z=J[Gi]=us=>{N||(N=!0,T(),us?P(F,[J]):P(E,[J]),J[Gi]=void 0,R[H]===s&&delete R[H])};R[H]=s,c?w(c,[J,Z]):Z()},clone(J){const T=gn(J,i,a,n,l);return l&&l(T),T}};return U}function Jl(s){if(fn(s))return s=Xi(s),s.children=null,s}function Xe(s){if(!fn(s))return s;const{shapeFlag:i,children:a}=s;if(a){if(i&16)return a[0];if(i&32&&ns(a.default))return a.default()}}function Oa(s,i){s.shapeFlag&6&&s.component?Oa(s.component.subTree,i):s.shapeFlag&128?(s.ssContent.transition=i.clone(s.ssContent),s.ssFallback.transition=i.clone(s.ssFallback)):s.transition=i}function Zt(s,i=!1,a){let n=[],l=0;for(let t=0;t<s.length;t++){let e=s[t];const k=a==null?e.key:String(a)+String(e.key!=null?e.key:t);e.type===ii?(e.patchFlag&128&&l++,n=n.concat(Zt(e.children,i,k))):(i||e.type!==Ks)&&n.push(k!=null?Xi(e,{key:k}):e)}if(l>1)for(let t=0;t<n.length;t++)n[t].patchFlag=-2;return n}const gg=s=>s.__isTeleport,ii=Symbol.for("v-fgt"),Ta=Symbol.for("v-txt"),Ks=Symbol.for("v-cmt"),nn=Symbol.for("v-stc"),ln=[];let yi=null;function Bg(s=!1){ln.push(yi=s?null:[])}function cg(){ln.pop(),yi=ln[ln.length-1]||null}let Bn=1;function Ze(s){Bn+=s}function np(s){return s.dynamicChildren=Bn>0?yi||fa:null,cg(),Bn>0&&yi&&yi.push(s),s}function vE(s,i,a,n,l,t){return np(tp(s,i,a,n,l,t,!0))}function og(s,i,a,n,l){return np(Is(s,i,a,n,l,!0))}function ct(s){return s?s.__v_isVNode===!0:!1}function ka(s,i){return s.type===i.type&&s.key===i.key}const lp=({key:s})=>s??null,tl=({ref:s,ref_key:i,ref_for:a})=>(typeof s=="number"&&(s=""+s),s!=null?Ms(s)||$s(s)||ns(s)?{i:ki,r:s,k:i,f:!!a}:s:null);function tp(s,i=null,a=null,n=0,l=null,t=s===ii?0:1,e=!1,k=!1){const p={__v_isVNode:!0,__v_skip:!0,type:s,props:i,key:i&&lp(i),ref:i&&tl(i),scopeId:Tk,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:t,patchFlag:n,dynamicProps:l,dynamicChildren:null,appContext:null,ctx:ki};return k?(se(p,a),t&128&&s.normalize(p)):a&&(p.shapeFlag|=Ms(a)?8:16),Bn>0&&!e&&yi&&(p.patchFlag>0||t&6)&&p.patchFlag!==32&&yi.push(p),p}const Is=yg;function yg(s,i=null,a=null,n=0,l=null,t=!1){if((!s||s===Sd)&&(s=Ks),ct(s)){const k=Xi(s,i,!0);return a&&se(k,a),Bn>0&&!t&&yi&&(k.shapeFlag&6?yi[yi.indexOf(s)]=k:yi.push(k)),k.patchFlag=-2,k}if(_g(s)&&(s=s.__vccOpts),i){i=Eg(i);let{class:k,style:p}=i;k&&!Ms(k)&&(i.class=Jt(k)),_s(p)&&(mk(p)&&!is(p)&&(p=Ss({},p)),i.style=$t(p))}const e=Ms(s)?1:Od(s)?128:gg(s)?64:_s(s)?4:ns(s)?2:0;return tp(s,i,a,n,l,e,t,!0)}function Eg(s){return s?mk(s)||jk(s)?Ss({},s):s:null}function Xi(s,i,a=!1,n=!1){const{props:l,ref:t,patchFlag:e,children:k,transition:p}=s,r=i?ug(l||{},i):l,d={__v_isVNode:!0,__v_skip:!0,type:s.type,props:r,key:r&&lp(r),ref:i&&i.ref?a&&t?is(t)?t.concat(tl(i)):[t,tl(i)]:tl(i):t,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:k,target:s.target,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:i&&s.type!==ii?e===-1?16:e|16:e,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:p,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&Xi(s.ssContent),ssFallback:s.ssFallback&&Xi(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return p&&n&&Oa(d,p.clone(d)),d}function ep(s=" ",i=0){return Is(Ta,null,s,i)}function CE(s,i){const a=Is(nn,null,s);return a.staticCount=i,a}function mE(s="",i=!1){return i?(Bg(),og(Ks,null,s)):Is(Ks,null,s)}function oi(s){return s==null||typeof s=="boolean"?Is(Ks):is(s)?Is(ii,null,s.slice()):typeof s=="object"?Wi(s):Is(Ta,null,String(s))}function Wi(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:Xi(s)}function se(s,i){let a=0;const{shapeFlag:n}=s;if(i==null)i=null;else if(is(i))a=16;else if(typeof i=="object")if(n&65){const l=i.default;l&&(l._c&&(l._d=!1),se(s,l()),l._c&&(l._d=!0));return}else{a=32;const l=i._;!l&&!jk(i)?i._ctx=ki:l===3&&ki&&(ki.slots._===1?i._=1:(i._=2,s.patchFlag|=1024))}else ns(i)?(i={default:i,_ctx:ki},a=32):(i=String(i),n&64?(a=16,i=[ep(i)]):a=8);s.children=i,s.shapeFlag|=a}function ug(...s){const i={};for(let a=0;a<s.length;a++){const n=s[a];for(const l in n)if(l==="class")i.class!==n.class&&(i.class=Jt([i.class,n.class]));else if(l==="style")i.style=$t([i.style,n.style]);else if(vn(l)){const t=i[l],e=n[l];e&&t!==e&&!(is(t)&&t.includes(e))&&(i[l]=t?[].concat(t,e):e)}else l!==""&&(i[l]=n[l])}return i}function ti(s,i,a,n=null){pi(s,i,7,[a,n])}const Ag=Mk();let Fg=0;function vg(s,i,a){const n=s.type,l=(i?i.appContext:s.appContext)||Ag,t={uid:Fg++,vnode:s,type:n,parent:i,appContext:l,root:null,next:null,subTree:null,effect:null,update:null,scope:new jr(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:i?i.provides:Object.create(l.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Hk(n,l),emitsOptions:Ok(n,l),emit:null,emitted:null,propsDefaults:ms,inheritAttrs:n.inheritAttrs,ctx:ms,data:ms,props:ms,attrs:ms,slots:ms,refs:ms,setupState:ms,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return t.ctx={_:t},t.root=i?i.root:t,t.emit=md.bind(null,t),s.ce&&s.ce(t),t}let Rs=null;const bn=()=>Rs||ki;let cl,ot;{const s=kk(),i=(a,n)=>{let l;return(l=s[a])||(l=s[a]=[]),l.push(n),t=>{l.length>1?l.forEach(e=>e(t)):l[0](t)}};cl=i("__VUE_INSTANCE_SETTERS__",a=>Rs=a),ot=i("__VUE_SSR_SETTERS__",a=>In=a)}const _n=s=>{const i=Rs;return cl(s),s.scope.on(),()=>{s.scope.off(),cl(i)}},sh=()=>{Rs&&Rs.scope.off(),cl(null)};function hp(s){return s.vnode.shapeFlag&4}let In=!1;function Cg(s,i=!1){i&&ot(i);const{props:a,children:n}=s.vnode,l=hp(s);Wd(s,a,l,i),Yd(s,n);const t=l?mg(s,i):void 0;return i&&ot(!1),t}function mg(s,i){const a=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,$d);const{setup:n}=a;if(n){const l=s.setupContext=n.length>1?fg(s):null,t=_n(s);sa();const e=Yi(n,s,0,[s.props,l]);if(xi(),t(),ek(e)){if(e.then(sh,sh),i)return e.then(k=>{ih(s,k,i)}).catch(k=>{Dn(k,s,0)});s.asyncDep=e}else ih(s,e,i)}else kp(s,i)}function ih(s,i,a){ns(i)?s.type.__ssrInlineRender?s.ssrRender=i:s.render=i:_s(i)&&(s.setupState=bk(i)),kp(s,a)}let ah;function kp(s,i,a){const n=s.type;if(!s.render){if(!i&&ah&&!n.render){const l=n.template||Yt(s).template;if(l){const{isCustomElement:t,compilerOptions:e}=s.appContext.config,{delimiters:k,compilerOptions:p}=n,r=Ss(Ss({isCustomElement:t,delimiters:k},e),p);n.render=ah(l,r)}}s.render=n.render||hi}{const l=_n(s);sa();try{Jd(s)}finally{xi(),l()}}}const Dg={get(s,i){return Qs(s,"get",""),s[i]}};function fg(s){const i=a=>{s.exposed=a||{}};return{attrs:new Proxy(s.attrs,Dg),slots:s.slots,emit:s.emit,expose:i}}function ie(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(bk(rd(s.exposed)),{get(i,a){if(a in i)return i[a];if(a in sn)return sn[a](s)},has(i,a){return a in i||a in sn}})):s.proxy}function bg(s,i=!0){return ns(s)?s.displayName||s.name:s.name||i&&s.__name}function _g(s){return ns(s)&&"__vccOpts"in s}const v=(s,i)=>dd(s,i,In);function h(s,i,a){const n=arguments.length;return n===2?_s(i)&&!is(i)?ct(i)?Is(s,null,[i]):Is(s,i):Is(s,null,i):(n>3?a=Array.prototype.slice.call(arguments,2):n===3&&ct(a)&&(a=[a]),Is(s,i,a))}const Ig="3.4.30";/**
* @vue/runtime-dom v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Sg="http://www.w3.org/2000/svg",wg="http://www.w3.org/1998/Math/MathML",Pi=typeof document<"u"?document:null,nh=Pi&&Pi.createElement("template"),Og={insert:(s,i,a)=>{i.insertBefore(s,a||null)},remove:s=>{const i=s.parentNode;i&&i.removeChild(s)},createElement:(s,i,a,n)=>{const l=i==="svg"?Pi.createElementNS(Sg,s):i==="mathml"?Pi.createElementNS(wg,s):a?Pi.createElement(s,{is:a}):Pi.createElement(s);return s==="select"&&n&&n.multiple!=null&&l.setAttribute("multiple",n.multiple),l},createText:s=>Pi.createTextNode(s),createComment:s=>Pi.createComment(s),setText:(s,i)=>{s.nodeValue=i},setElementText:(s,i)=>{s.textContent=i},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>Pi.querySelector(s),setScopeId(s,i){s.setAttribute(i,"")},insertStaticContent(s,i,a,n,l,t){const e=a?a.previousSibling:i.lastChild;if(l&&(l===t||l.nextSibling))for(;i.insertBefore(l.cloneNode(!0),a),!(l===t||!(l=l.nextSibling)););else{nh.innerHTML=n==="svg"?`<svg>${s}</svg>`:n==="mathml"?`<math>${s}</math>`:s;const k=nh.content;if(n==="svg"||n==="mathml"){const p=k.firstChild;for(;p.firstChild;)k.appendChild(p.firstChild);k.removeChild(p)}i.insertBefore(k,a)}return[e?e.nextSibling:i.firstChild,a?a.previousSibling:i.lastChild]}},ji="transition",Ua="animation",Pa=Symbol("_vtc"),Zi=(s,{slots:i})=>h(dg,rp(s),i);Zi.displayName="Transition";const pp={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Tg=Zi.props=Ss({},sp,pp),la=(s,i=[])=>{is(s)?s.forEach(a=>a(...i)):s&&s(...i)},lh=s=>s?is(s)?s.some(i=>i.length>1):s.length>1:!1;function rp(s){const i={};for(const N in s)N in pp||(i[N]=s[N]);if(s.css===!1)return i;const{name:a="v",type:n,duration:l,enterFromClass:t=`${a}-enter-from`,enterActiveClass:e=`${a}-enter-active`,enterToClass:k=`${a}-enter-to`,appearFromClass:p=t,appearActiveClass:r=e,appearToClass:d=k,leaveFromClass:g=`${a}-leave-from`,leaveActiveClass:B=`${a}-leave-active`,leaveToClass:c=`${a}-leave-to`}=s,E=Pg(l),F=E&&E[0],m=E&&E[1],{onBeforeEnter:C,onEnter:D,onEnterCancelled:u,onLeave:b,onLeaveCancelled:R,onBeforeAppear:P=C,onAppear:w=D,onAppearCancelled:U=u}=i,J=(N,Z,us)=>{zi(N,Z?d:k),zi(N,Z?r:e),us&&us()},T=(N,Z)=>{N._isLeaving=!1,zi(N,g),zi(N,c),zi(N,B),Z&&Z()},H=N=>(Z,us)=>{const As=N?w:D,W=()=>J(Z,N,us);la(As,[Z,W]),th(()=>{zi(Z,N?p:t),Oi(Z,N?d:k),lh(As)||eh(Z,n,F,W)})};return Ss(i,{onBeforeEnter(N){la(C,[N]),Oi(N,t),Oi(N,e)},onBeforeAppear(N){la(P,[N]),Oi(N,p),Oi(N,r)},onEnter:H(!1),onAppear:H(!0),onLeave(N,Z){N._isLeaving=!0;const us=()=>T(N,Z);Oi(N,g),Oi(N,B),gp(),th(()=>{N._isLeaving&&(zi(N,g),Oi(N,c),lh(b)||eh(N,n,m,us))}),la(b,[N,us])},onEnterCancelled(N){J(N,!1),la(u,[N])},onAppearCancelled(N){J(N,!0),la(U,[N])},onLeaveCancelled(N){T(N),la(R,[N])}})}function Pg(s){if(s==null)return null;if(_s(s))return[jl(s.enter),jl(s.leave)];{const i=jl(s);return[i,i]}}function jl(s){return Nr(s)}function Oi(s,i){i.split(/\s+/).forEach(a=>a&&s.classList.add(a)),(s[Pa]||(s[Pa]=new Set)).add(i)}function zi(s,i){i.split(/\s+/).forEach(n=>n&&s.classList.remove(n));const a=s[Pa];a&&(a.delete(i),a.size||(s[Pa]=void 0))}function th(s){requestAnimationFrame(()=>{requestAnimationFrame(s)})}let Ng=0;function eh(s,i,a,n){const l=s._endId=++Ng,t=()=>{l===s._endId&&n()};if(a)return setTimeout(t,a);const{type:e,timeout:k,propCount:p}=dp(s,i);if(!e)return n();const r=e+"end";let d=0;const g=()=>{s.removeEventListener(r,B),t()},B=c=>{c.target===s&&++d>=p&&g()};setTimeout(()=>{d<p&&g()},k+1),s.addEventListener(r,B)}function dp(s,i){const a=window.getComputedStyle(s),n=E=>(a[E]||"").split(", "),l=n(`${ji}Delay`),t=n(`${ji}Duration`),e=hh(l,t),k=n(`${Ua}Delay`),p=n(`${Ua}Duration`),r=hh(k,p);let d=null,g=0,B=0;i===ji?e>0&&(d=ji,g=e,B=t.length):i===Ua?r>0&&(d=Ua,g=r,B=p.length):(g=Math.max(e,r),d=g>0?e>r?ji:Ua:null,B=d?d===ji?t.length:p.length:0);const c=d===ji&&/\b(transform|all)(,|$)/.test(n(`${ji}Property`).toString());return{type:d,timeout:g,propCount:B,hasTransform:c}}function hh(s,i){for(;s.length<i.length;)s=s.concat(s);return Math.max(...i.map((a,n)=>kh(a)+kh(s[n])))}function kh(s){return s==="auto"?0:Number(s.slice(0,-1).replace(",","."))*1e3}function gp(){return document.body.offsetHeight}function Lg(s,i,a){const n=s[Pa];n&&(i=(i?[i,...n]:[...n]).join(" ")),i==null?s.removeAttribute("class"):a?s.setAttribute("class",i):s.className=i}const ph=Symbol("_vod"),xg=Symbol("_vsh"),Rg=Symbol(""),Mg=/(^|;)\s*display\s*:/;function $g(s,i,a){const n=s.style,l=Ms(a);let t=!1;if(a&&!l){if(i)if(Ms(i))for(const e of i.split(";")){const k=e.slice(0,e.indexOf(":")).trim();a[k]==null&&el(n,k,"")}else for(const e in i)a[e]==null&&el(n,e,"");for(const e in a)e==="display"&&(t=!0),el(n,e,a[e])}else if(l){if(i!==a){const e=n[Rg];e&&(a+=";"+e),n.cssText=a,t=Mg.test(a)}}else i&&s.removeAttribute("style");ph in s&&(s[ph]=t?n.display:"",s[xg]&&(n.display="none"))}const rh=/\s*!important$/;function el(s,i,a){if(is(a))a.forEach(n=>el(s,i,n));else if(a==null&&(a=""),i.startsWith("--"))s.setProperty(i,a);else{const n=Jg(s,i);rh.test(a)?s.setProperty(Ma(n),a.replace(rh,""),"important"):s[n]=a}}const dh=["Webkit","Moz","ms"],Vl={};function Jg(s,i){const a=Vl[i];if(a)return a;let n=di(i);if(n!=="filter"&&n in s)return Vl[i]=n;n=Cn(n);for(let l=0;l<dh.length;l++){const t=dh[l]+n;if(t in s)return Vl[i]=t}return i}const gh="http://www.w3.org/1999/xlink";function Bh(s,i,a,n,l,t=Jr(i)){n&&i.startsWith("xlink:")?a==null?s.removeAttributeNS(gh,i.slice(6,i.length)):s.setAttributeNS(gh,i,a):a==null||t&&!pk(a)?s.removeAttribute(i):s.setAttribute(i,t?"":Ra(a)?String(a):a)}function jg(s,i,a,n,l,t,e){if(i==="innerHTML"||i==="textContent"){n&&e(n,l,t),s[i]=a??"";return}const k=s.tagName;if(i==="value"&&k!=="PROGRESS"&&!k.includes("-")){const r=k==="OPTION"?s.getAttribute("value")||"":s.value,d=a==null?"":String(a);(r!==d||!("_value"in s))&&(s.value=d),a==null&&s.removeAttribute(i),s._value=a;return}let p=!1;if(a===""||a==null){const r=typeof s[i];r==="boolean"?a=pk(a):a==null&&r==="string"?(a="",p=!0):r==="number"&&(a=0,p=!0)}try{s[i]=a}catch{}p&&s.removeAttribute(i)}function Vg(s,i,a,n){s.addEventListener(i,a,n)}function Hg(s,i,a,n){s.removeEventListener(i,a,n)}const ch=Symbol("_vei");function zg(s,i,a,n,l=null){const t=s[ch]||(s[ch]={}),e=t[i];if(n&&e)e.value=n;else{const[k,p]=Ug(i);if(n){const r=t[i]=qg(n,l);Vg(s,k,r,p)}else e&&(Hg(s,k,e,p),t[i]=void 0)}}const oh=/(?:Once|Passive|Capture)$/;function Ug(s){let i;if(oh.test(s)){i={};let n;for(;n=s.match(oh);)s=s.slice(0,s.length-n[0].length),i[n[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):Ma(s.slice(2)),i]}let Hl=0;const Gg=Promise.resolve(),Wg=()=>Hl||(Gg.then(()=>Hl=0),Hl=Date.now());function qg(s,i){const a=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=a.attached)return;pi(Kg(n,a.value),i,5,[n])};return a.value=s,a.attached=Wg(),a}function Kg(s,i){if(is(i)){const a=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{a.call(s),s._stopped=!0},i.map(n=>l=>!l._stopped&&n&&n(l))}else return i}const yh=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,Yg=(s,i,a,n,l,t,e,k,p)=>{const r=l==="svg";i==="class"?Lg(s,n,r):i==="style"?$g(s,a,n):vn(i)?xt(i)||zg(s,i,a,n,e):(i[0]==="."?(i=i.slice(1),!0):i[0]==="^"?(i=i.slice(1),!1):Qg(s,i,n,r))?(jg(s,i,n,t,e,k,p),!s.tagName.includes("-")&&(i==="value"||i==="checked"||i==="selected")&&Bh(s,i,n,r,e,i!=="value")):(i==="true-value"?s._trueValue=n:i==="false-value"&&(s._falseValue=n),Bh(s,i,n,r))};function Qg(s,i,a,n){if(n)return!!(i==="innerHTML"||i==="textContent"||i in s&&yh(i)&&ns(a));if(i==="spellcheck"||i==="draggable"||i==="translate"||i==="form"||i==="list"&&s.tagName==="INPUT"||i==="type"&&s.tagName==="TEXTAREA")return!1;if(i==="width"||i==="height"){const l=s.tagName;if(l==="IMG"||l==="VIDEO"||l==="CANVAS"||l==="SOURCE")return!1}return yh(i)&&Ms(a)?!1:i in s}const Bp=new WeakMap,cp=new WeakMap,ol=Symbol("_moveCb"),Eh=Symbol("_enterCb"),op={name:"TransitionGroup",props:Ss({},Tg,{tag:String,moveClass:String}),setup(s,{slots:i}){const a=bn(),n=Zk();let l,t;return Lk(()=>{if(!l.length)return;const e=s.moveClass||`${s.name||"v"}-move`;if(!nB(l[0].el,a.vnode.el,e))return;l.forEach(sB),l.forEach(iB);const k=l.filter(aB);gp(),k.forEach(p=>{const r=p.el,d=r.style;Oi(r,e),d.transform=d.webkitTransform=d.transitionDuration="";const g=r[ol]=B=>{B&&B.target!==r||(!B||/transform$/.test(B.propertyName))&&(r.removeEventListener("transitionend",g),r[ol]=null,zi(r,e))};r.addEventListener("transitionend",g)})}),()=>{const e=rs(s),k=rp(e);let p=e.tag||ii;if(l=[],t)for(let r=0;r<t.length;r++){const d=t[r];d.el&&d.el instanceof Element&&(l.push(d),Oa(d,gn(d,k,n,a)),Bp.set(d,d.el.getBoundingClientRect()))}t=i.default?Zt(i.default()):[];for(let r=0;r<t.length;r++){const d=t[r];d.key!=null&&Oa(d,gn(d,k,n,a))}return Is(p,null,t)}}},Xg=s=>delete s.mode;op.props;const Zg=op;function sB(s){const i=s.el;i[ol]&&i[ol](),i[Eh]&&i[Eh]()}function iB(s){cp.set(s,s.el.getBoundingClientRect())}function aB(s){const i=Bp.get(s),a=cp.get(s),n=i.left-a.left,l=i.top-a.top;if(n||l){const t=s.el.style;return t.transform=t.webkitTransform=`translate(${n}px,${l}px)`,t.transitionDuration="0s",s}}function nB(s,i,a){const n=s.cloneNode(),l=s[Pa];l&&l.forEach(k=>{k.split(/\s+/).forEach(p=>p&&n.classList.remove(p))}),a.split(/\s+/).forEach(k=>k&&n.classList.add(k)),n.style.display="none";const t=i.nodeType===1?i:i.parentNode;t.appendChild(n);const{hasTransform:e}=dp(n);return t.removeChild(n),e}const lB=Ss({patchProp:Yg},Og);let zl,uh=!1;function tB(){return zl=uh?zl:ig(lB),uh=!0,zl}const eB=(...s)=>{const i=tB().createApp(...s),{mount:a}=i;return i.mount=n=>{const l=kB(n);if(l)return a(l,!0,hB(l))},i};function hB(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function kB(s){return Ms(s)?document.querySelector(s):s}var Sn=s=>/^[a-z][a-z0-9+.-]*:/.test(s)||s.startsWith("//"),pB=/.md((\?|#).*)?$/,ml=(s,i="/")=>Sn(s)||s.startsWith("/")&&!s.startsWith(i)&&!pB.test(s),oa=s=>/^(https?:)?\/\//.test(s),Ah=s=>{if(!s||s.endsWith("/"))return s;let i=s.replace(/(^|\/)README.md$/i,"$1index.html");return i.endsWith(".md")?i=i.substring(0,i.length-3)+".html":i.endsWith(".html")||(i=i+".html"),i.endsWith("/index.html")&&(i=i.substring(0,i.length-10)),i},rB="http://.",dB=(s,i)=>{if(!s.startsWith("/")&&i){const a=i.slice(0,i.lastIndexOf("/"));return Ah(new URL(`${a}/${s}`,rB).pathname)}return Ah(s)},gB=(s,i)=>{const a=Object.keys(s).sort((n,l)=>{const t=l.split("/").length-n.split("/").length;return t!==0?t:l.length-n.length});for(const n of a)if(i.startsWith(n))return n;return"/"},BB=/(#|\?)/,yp=s=>{const[i,...a]=s.split(BB);return{pathname:i,hashAndQueries:a.join("")}},cB=["link","meta","script","style","noscript","template"],oB=["title","base"],yB=([s,i,a])=>oB.includes(s)?s:cB.includes(s)?s==="meta"&&i.name?`${s}.${i.name}`:s==="template"&&i.id?`${s}.${i.id}`:JSON.stringify([s,Object.entries(i).map(([n,l])=>typeof l=="boolean"?l?[n,""]:null:[n,l]).filter(n=>n!=null).sort(([n],[l])=>n.localeCompare(l)),a]):null,EB=s=>{const i=new Set,a=[];return s.forEach(n=>{const l=yB(n);l&&!i.has(l)&&(i.add(l),a.push(n))}),a},uB=s=>s[0]==="/"?s:`/${s}`,Ep=s=>s[s.length-1]==="/"||s.endsWith(".html")?s:`${s}/`,ae=s=>s[s.length-1]==="/"?s.slice(0,-1):s,up=s=>s[0]==="/"?s.slice(1):s,ja=s=>Object.prototype.toString.call(s)==="[object Object]",bs=s=>typeof s=="string";const AB="modulepreload",FB=function(s){return"/"+s},Fh={},A=function(i,a,n){let l=Promise.resolve();if(a&&a.length>0){document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),e=(t==null?void 0:t.nonce)||(t==null?void 0:t.getAttribute("nonce"));l=Promise.all(a.map(k=>{if(k=FB(k),k in Fh)return;Fh[k]=!0;const p=k.endsWith(".css"),r=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${k}"]${r}`))return;const d=document.createElement("link");if(d.rel=p?"stylesheet":AB,p||(d.as="script",d.crossOrigin=""),d.href=k,e&&d.setAttribute("nonce",e),document.head.appendChild(d),p)return new Promise((g,B)=>{d.addEventListener("load",g),d.addEventListener("error",()=>B(new Error(`Unable to preload CSS for ${k}`)))})}))}return l.then(()=>i()).catch(t=>{const e=new Event("vite:preloadError",{cancelable:!0});if(e.payload=t,window.dispatchEvent(e),!e.defaultPrevented)throw t})},vB=JSON.parse("{}"),CB=Object.fromEntries([["/",{loader:()=>A(()=>import("./index.html-hiZMb_m3.js"),__vite__mapDeps([0,1])),meta:{t:"博客主页",i:"home"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/001-%E7%BC%96%E8%AF%91NIFI%E6%BA%90%E7%A0%81.html",{loader:()=>A(()=>import("./001-编译NIFI源码.html-DogF-sKt.js"),__vite__mapDeps([2,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>最近新来了一次代码，构建的时候心血来潮，又重新过了一遍(回想17年刚毕业的时候构建的是一塌糊涂。。。啥也不知道，懵懵的)</p>
<p>国内拉取源码还是建议用码云</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>git clone -b master git@github.com:mirrors/nifi.git</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:2.64,words:791},t:"编译NIFI源码",O:1,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/002-NIFI%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.html",{loader:()=>A(()=>import("./002-NIFI自定义开发规范.html-B76OAKqy.js"),__vite__mapDeps([3,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>去年一年发现 Apache NIFI的迭代速度加快了，一年的时间发布了很多版本。我们自定义开发NIFI，希望在满足自定义的同时， 又能够很方便快速的升级版本(毕竟是吧，一两个人的开发怎么能搞得过我大Apache开源社区)。所以结合NIFI源码结构的特点， 我做了一个自定义开发NIFI的项目结构规范。</p>
<p>详情请看 github <a href="https://github.com/zhangchengk/custom-nar-bundles" target="_blank" rel="noopener noreferrer">https://github.com/zhangchengk/custom-nar-bundles</a>（这是一个NIFI Maven子项目，用于自定义开发，减少对源码结构的侵入，方便NIFI升级 ）</p>`,r:{minutes:.59,words:178},t:"自定义开发规范",O:2,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/003-Processor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95.html",{loader:()=>A(()=>import("./003-Processor的一些方法.html-Cw38GyOd.js"),__vite__mapDeps([4,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>在使用NIFI的过程中，我们经常需要创建自定义Processor，而通常情况下，我们只需要在覆盖onTrigger方法中实现我们的需求即可，但有时候是不够的，这里我们就来了解一下Processor的那些方法。</p>
<h2>onTrigger</h2>
<p>我们自定义Processor时最常用的是继承AbstractProcessor，首先看一下AbstractProcessor的继承关系:

</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> AbstractProcessor</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> AbstractSessionFactoryProcessor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 控制器是先调用的这个onTrigger方法，然后再调用用户自定义实现的(下面的)onTrigger</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> onTrigger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessContext</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessSessionFactory</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> sessionFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sessionFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createSession</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            onTrigger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(context, session);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            session</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">commit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Throwable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            session</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">rollback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> t;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    //这个onTrigger方法就是我们最常见的 需要去实现功能逻辑的了</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> onTrigger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessContext</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> context</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessSession</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> session</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.84,words:2353},t:"Processor的一些方法",O:3,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/004-%E8%87%AA%E5%AE%9A%E4%B9%89Processor.html",{loader:()=>A(()=>import("./004-自定义Processor.html-CeQ-ibHw.js"),__vite__mapDeps([5,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>NIFI本身提供了几百个Processor给我们使用，但有的时候我们需要自定义一些组件来使用(这种情况个人觉得百分之八十是因为想实现一个功能，而且这个功能需求原框架就能cover住的，只是不知道在哪或者知道在哪或者不会用，干脆就自己写了-&gt;还能出活-&gt;老板你看！现在用的都是我自己写的组件-&gt;老板：厉害！加薪！)</p>
<p>废话不多说，直接上干货</p>
<h2>在哪写？</h2>
<p>现在我们要自定义一个Processor，假设它叫MyProcessor.java，那么这个Java文件写在哪里呢？</p>
<p>如果你要自定义一个Processor，可以写在以下这两种地方(方式)</p>`,r:{minutes:6.2,words:1861},t:"自定义Processor组件",O:4,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/005-%E8%87%AA%E5%AE%9A%E4%B9%89ExpressionLanguage.html",{loader:()=>A(()=>import("./005-自定义ExpressionLanguage.html-D64zEdBD.js"),__vite__mapDeps([6,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>我们都知道NIFI设计了一套自己的表达式语言，在设计流程的时候表达式语言给我们提供了很大的灵活性，在官方文档中对表达式语言都有很详细的说明和示范，但有的时候我们期望增加一套特定情境，适合我们自己特殊的流程的表达式函数，本文主要介绍一个增加自定义NIFI表达式函数的demo。</p>
<h2>场景假设</h2>
<p>我们在属性中有一些中文，在流程里需要把这些值转bytes最后存储起来，那我们知道在Java中，String的getBytes()方法是得到一个操作系统默认的编码格式的字节数组。这个表示在不同OS下，返回的东西不一样！ String.getBytes(String decode)方法会根据指定的decode编码返回某字符串在该编码下的byte数组表示，那么我们就包装一个getBytes的函数</p>`,r:{minutes:6.3,words:1890},t:"自定义ExpressionLanguage",O:5,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/006-NIFI%E5%90%AF%E5%8A%A8%E6%BA%90%E7%A0%81.html",{loader:()=>A(()=>import("./006-NIFI启动源码.html-Cz4QHNTi.js"),__vite__mapDeps([7,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>本文仅限于针对NIFI最常见的启动方式的分析，即使用以下命令启动。</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>nifi.sh start</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:1.44,words:431},t:"NIFI启动源码解读",O:6,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/007-%E5%9C%A8HTTP%E6%A8%A1%E5%BC%8F%E4%B8%8B%E5%BC%80%E5%90%AF%E6%9D%83%E9%99%90%E6%A8%A1%E5%9D%97.html",{loader:()=>A(()=>import("./007-在HTTP模式下开启权限模块.html-Cr8IKv_Y.js"),__vite__mapDeps([8,1])),meta:{d:16093728e5,l:"2020年12月31日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>Apache NIFI是提供了一套完整的用户模块和权限模块的，但是前提是必需使用HTTPS。但是在我们日常的开发和运维过程中，为了更加方便，我们通常用HTTPS的域名直接映射到一个主机(尤其是在大的开发平台)，同时如果维护一个NIFI集群，还得每一台机器都要去配置HTTPS？确实想想就挺麻烦的。</p>
`,r:{minutes:.45,words:135},t:"HTTP模式下开启权限",O:7,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/008-JettyServer%E6%BA%90%E7%A0%81.html",{loader:()=>A(()=>import("./008-JettyServer源码.html-DGNz6pBS.js"),__vite__mapDeps([9,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>NiFi.java 源码解读中，我们有看到这一段:</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // frameworkClassLoader类加载器加载framework bundle(nifi-framework-nar) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(frameworkClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //  顾名思义  其中启用 了Jetty</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> jettyServer </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.web.server.JettyServer"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, frameworkClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> jettyConstructor </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> jettyServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        nifiServer </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (NiFiServer) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">jettyConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties, narBundles);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setExtensionMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(extensionMapping);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setBundles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(systemBundle, narBundles);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (shutdown) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi has been shutdown via NiFi Bootstrap. Will not start Controller"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            //余下的启动就交给JettyServer了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // frameworkClassLoader类加载器加载framework bundle(nifi-framework-nar) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(frameworkClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //  顾名思义  其中启用 了Jetty</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> jettyServer </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.web.server.JettyServer"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, frameworkClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> jettyConstructor </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> jettyServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        nifiServer </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (NiFiServer) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">jettyConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties, narBundles);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setExtensionMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(extensionMapping);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setBundles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(systemBundle, narBundles);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (shutdown) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi has been shutdown via NiFi Bootstrap. Will not start Controller"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            //余下的启动就交给JettyServer了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.85,words:1454},t:"JettyServer源码解读",O:8,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/009-NiFi%E6%BA%90%E7%A0%81.html",{loader:()=>A(()=>import("./009-NiFi源码.html-BXjm4EOQ.js"),__vite__mapDeps([10,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>在RunNiFi.java源码解读中有提到，最终RunNiFi进程在主程序中启动了新的进程NiFi,并循环监听NIFI进程的状态，直到NIFI进程不在运行，RunNiFi主程序才结束。</p>
<p>以下便是NIFI进程的入口类，从main方法开始即可，关键地方有注释。(自己跟着源码逻辑读更好)</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD"> org.apache.nifi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> NiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> LOGGER </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> KEY_FILE_FLAG </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "-K"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BootstrapListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrapListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // RunNiFi进程的Socket监听端口 进程间通信</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> BOOTSTRAP_PORT_PROPERTY </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.bootstrap.listen.port"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    //标记  是否关闭</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> shutdown </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // nifi.properties</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiProperties</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassNotFoundException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NoSuchMethodException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InstantiationException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalAccessException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InvocationTargetException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getSystemClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiProperties</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ClassLoader</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> rootClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassNotFoundException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NoSuchMethodException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InstantiationException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalAccessException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InvocationTargetException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 整个Java进程只能有一个krb5.conf，所以在启动期间全局设置它，这样处理器和Kerberos身份验证代码就不必设置它</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> kerberosConfigFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getKerberosConfigurationFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (kerberosConfigFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> kerberosConfigFilePath</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> kerberosConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Setting java.security.krb5.conf to {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{kerberosConfigFilePath});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"java.security.krb5.conf"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, kerberosConfigFilePath);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        setDefaultUncaughtExceptionHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 注册 shutdown hook</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        addShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //RunNiFi 启动NIFI时设置 RunNIFI进程 的Socket的监听端口  NIFI进程将本进程的Socket监听端口和pid传 给RunNIFI  ，RunNIFI便可以传达指令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrapPort</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(BOOTSTRAP_PORT_PROPERTY);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (bootstrapPort </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(bootstrapPort);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (port </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 65535</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to start NiFi because system property '"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> BOOTSTRAP_PORT_PROPERTY </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "' is not a valid integer in the range 1 - 65535"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                bootstrapListener </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BootstrapListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                bootstrapListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NumberFormatException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> nfe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to start NiFi because system property '"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> BOOTSTRAP_PORT_PROPERTY </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "' is not a valid integer in the range 1 - 65535"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi started without Bootstrap Port information provided; will not listen for requests from Bootstrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            bootstrapListener </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //删除web工作目录——如果应用程序没有成功启动，web应用程序目录可能处于无效状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //当这种情况发生时，jetty将不会尝试重新将war解压缩到目录中。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //通过删除工作目录，我们可以确信它将尝试在每次应用程序启动时提取war。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // nifi.web.jetty.working.directory=   默认值：./work/jetty</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> webWorkingDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getWebWorkingDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        FileUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">deleteFilesInDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(webWorkingDir, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, LOGGER, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        FileUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">deleteFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(webWorkingDir, LOGGER, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //确定我们运行的机器是否有时间问题。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        detectTimingIssues</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 重定向JUL日志事件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        initLogging</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 这里可以看另一篇讲解  【NIFI nar包加载机制源码解读】</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // nifi.nar.library.directory=./lib    获取lib bundle</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Bundle</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> systemBundle</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> SystemBundle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">create</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 期间过滤了非nar包的文件 解压nar到  /work/nar/framework   /work/nar/extendings  /work/docs/components </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 解压doc file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 读取 各个JarFile META-INF/services/org.apache.nifi.processor.Processor META-INF/services/org.apache.nifi.reporting.ReportingTask META-INF/services/org.apache.nifi.controller.ControllerService</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 返回的extensionMapping有三个 Map  分别存了Processor ControllerService ReportingTask</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ExtensionMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> extensionMapping</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NarUnpacker</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">unpackNars</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties, systemBundle);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 获取 extensions classloaders  (单例)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        NarClassLoaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> narClassLoaders</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NarClassLoaders</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //初始化   为所有的nar包创建唯一 的类加载器 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        narClassLoaders</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(rootClassLoader,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getFrameworkWorkingDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getExtensionsWorkingDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // load the framework classloader</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> frameworkClassLoader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> narClassLoaders</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getFrameworkBundle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (frameworkClassLoader </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalStateException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Unable to find the framework NAR ClassLoader."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //此集合是有序的  首先是framework  其次其余nar包按 依赖，被依赖在先 ，Bundle中有此nar包各种信息以及nar的类加载器  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Bundle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">narBundles</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> narClassLoaders</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getBundles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // frameworkClassLoader类加载器加载framework bundle(nifi-framework-nar) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(frameworkClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //  顾名思义  其中启用 了Jetty</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">jettyServer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.web.server.JettyServer"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, frameworkClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">jettyConstructor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> jettyServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startTime</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        nifiServer </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (NiFiServer) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">jettyConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties, narBundles);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setExtensionMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(extensionMapping);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setBundles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(systemBundle, narBundles);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (shutdown) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi has been shutdown via NiFi Bootstrap. Will not start Controller"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            //余下的启动就交给JettyServer了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (bootstrapListener </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                bootstrapListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sendStartedStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> startTime;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Controller initialization took "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " nanoseconds "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "("</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">convert</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(duration, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NANOSECONDS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " seconds)."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setDefaultUncaughtExceptionHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setDefaultUncaughtExceptionHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> UncaughtExceptionHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> uncaughtException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Throwable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"An Unknown Error Occurred in Thread {}: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, t, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> addShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">addShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                // shutdown the jetty server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                shutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> initLogging</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        SLF4JBridgeHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">removeHandlersForRootLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        SLF4JBridgeHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">install</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassLoader</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createBootstrapClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //获取lib文件夹中的文件列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">urls</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Paths</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"lib/bootstrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(p </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    urls</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toUri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toURL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> MalformedURLException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> mef</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Unable to load "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getFileName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " due to "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> mef, mef);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Unable to access lib/bootstrap to create bootstrap classloader"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, ioe);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //创建bootstrap classloader</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> URLClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">urls</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toArray</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]), </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            shutdown</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Throwable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Problem occurred ensuring Jetty web server was properly terminated due to "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> t);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shutdown</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">shutdown</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Initiating shutdown of Jetty web server..."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (nifiServer </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            nifiServer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (bootstrapListener </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            bootstrapListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Jetty web server shutdown completed (nicely or otherwise)."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 确定我们运行的机器是否有时间问题。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> detectTimingIssues</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> minRequiredOccurrences</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> maxOccurrencesOutOfRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 15</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> AtomicLong</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lastTriggerMillis</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> AtomicLong</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ScheduledExecutorService</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> service</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Executors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newScheduledThreadPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> defaultFactory</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Executors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">defaultThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> newThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Runnable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> defaultFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(r);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setDaemon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Detect Timing Issues"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> t;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> occurrencesOutOfRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> occurrences</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> command</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> curMillis</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> difference</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> curMillis </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> lastTriggerMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> millisOff</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(difference </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 2000L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                occurrences</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (millisOff </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 500L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    occurrencesOutOfRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">incrementAndGet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                lastTriggerMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(curMillis);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ScheduledFuture</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">future</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">scheduleWithFixedDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(command, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2000L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2000L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">MILLISECONDS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> TimerTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> timerTask</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> TimerTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cancel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">shutdownNow</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">occurrences</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> minRequiredOccurrences </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> occurrencesOutOfRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> maxOccurrencesOutOfRange) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi has detected that this box is not responding within the expected timing interval, which may cause "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                            +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Processors to be scheduled erratically. Please see the NiFi documentation for more information."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> timer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Timer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        timer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(timerTask, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">60000L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 应用程序的主要入口点。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Launching NiFi..."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            NiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> convertArgumentsToValidatedNiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(properties);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Throwable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failure to launch NiFi due to "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> t, t);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiProperties</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> convertArgumentsToValidatedNiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrap</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createBootstrapClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        NiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> initializeProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args, bootstrap);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">validate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> properties;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiProperties</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> initializeProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassLoader</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> boostrapLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // Try to get key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // If key doesn't exist, instantiate without</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // Load properties</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // If properties are protected and key missing, throw RuntimeException</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> contextClassLoader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadFormattedKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // The key might be empty or null when it is passed to the loader</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">IllegalArgumentException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "The bootstrap process did not provide a valid key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(msg, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(boostrapLoader);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">propsLoaderClass</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.properties.NiFiPropertiesLoader"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, boostrapLoader);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> withKeyMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> propsLoaderClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"withKey"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> loaderInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> withKeyMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, key);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> getMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> propsLoaderClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"get"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (NiFiProperties) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">getMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(loaderInstance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Loaded {} properties"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> properties;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">InvocationTargetException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> wrappedException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "There was an issue decrypting protected properties"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(msg, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">wrappedException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getCause</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> wrappedException </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> wrappedException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getCause</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalAccessException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NoSuchMethodException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ClassNotFoundException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reex</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Unable to access properties loader in the expected manner - apparent classpath or build issue"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(msg, reex);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> RuntimeException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "There was an issue decrypting protected properties"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(msg, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setContextClassLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(contextClassLoader);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadFormattedKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">parsedArgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> parseArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // Check if args contain protection key</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(KEY_FILE_FLAG)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getKeyFromKeyFileAndPrune</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(parsedArgs);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // Format the key (check hex validity and remove spaces)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> formatHexKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(key);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> key) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isHexKeyValid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(key)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The key was not provided in valid hex format and of the correct length"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getKeyFromKeyFileAndPrune</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The bootstrap process provided the "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> KEY_FILE_FLAG </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " flag"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">indexOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(KEY_FILE_FLAG);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The bootstrap process passed the {} flag without a filename"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, KEY_FILE_FLAG);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The bootstrap process provided the "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> KEY_FILE_FLAG </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " flag but no key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> passwordfile_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // Slurp in the contents of the file:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">          byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">encoded</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readAllBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Paths</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(passwordfile_path));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(encoded,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">          if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Key in keyfile "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> passwordfile_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " yielded an empty key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Now overwriting file in "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">passwordfile_path);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // Overwrite the contents of the file (to avoid littering file system</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // unlinked with key material):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> password_file</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(passwordfile_path);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          FileWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> overwriter</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(password_file,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // Construe a random pad:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          Random</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> r</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Random</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          StringBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sb</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> StringBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // Note on correctness: this pad is longer, but equally sufficient.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">          while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> encoded</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toHexString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">r</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nextInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pad</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Overwriting key material with pad: "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">pad);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          overwriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pad);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          overwriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Removing/unlinking file: "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">passwordfile_path);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          password_file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Caught IOException while retrieving the "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">KEY_FILE_FLAG</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-passed keyfile; aborting: "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        LOGGER</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Read property protection key from key file provided by bootstrap process"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> parseArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">parsedArgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(); i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(KEY_FILE_FLAG </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">                String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">split</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i, split[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                parsedArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, split[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> parsedArgs;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> formatHexKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (input </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">replaceAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"[^0-9a-fA-F]"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toLowerCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isHexKeyValid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // Key length is in "nibbles" (i.e. one hex char = 4 bits)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">128</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">196</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">256</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">matches</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"^[0-9a-fA-F]*$"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.07,words:1820},t:"NiFi.java 源码解读",O:9,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/010-nifi%E6%B3%A8%E8%A7%A3.html",{loader:()=>A(()=>import("./010-nifi注解.html-Dy4-lfKL.js"),__vite__mapDeps([11,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>阅读这篇文章之前如果对Java注解没有什么深入了解，建议看一看java注解</p>
<p>开始之前，看一下源码结构，nifi的注解都是在nifi-api moudle中的。

从截图中可以看出，nifi自定义的注解主要有5类</p>
<ul>
<li>behavior 行为类，指明一个组件应该有什么样的行为</li>
<li>configuration 配置类，对组件做一些默认的配置，比如说调度时间，惩罚时间等等</li>
<li>documentation 文档类 注解的内容会形成文档</li>
<li>lifecycle 生命周期类 用在方法上 指明什么时候该执行这些method</li>
<li>notification 通知类 里面注解较少，用于集群变化时指明需要执行一些方法</li>
</ul>`,r:{minutes:15.85,words:4756},t:"NIFI 注解讲解",O:10,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/011-Debezium%E8%AF%A6%E7%BB%86%E5%B5%8C%E5%85%A5NIFI.html",{loader:()=>A(()=>import("./011-Debezium详细嵌入NIFI.html-CINKWy8A.js"),__vite__mapDeps([12,1])),meta:{d:16357248e5,l:"2021年11月1日",c:"ApacheNIFI开发",g:"NIFI",e:`
<p>考虑到充分利用开源项目Debezium的能力，以及本身团队研发力量的不足，最终决定还是在NIFI直接使用Debezium内置引擎的方式，主要的代价就是带来额外的线程消耗，以及融入NIFI、解决Debezium自身一些不足的开发工作。</p>
<h1>二、Processor蓝图</h1>
<figure><figcaption></figcaption></figure>
<h1>三、需要解决Debezium哪些不足？</h1>
<p>Debezium本身，以及将它嵌入NIFI有一些不满足我们需求的地方：</p>
<h2>3.1 全表CDC问题</h2>
<p>Debezium的全表采集实现非常检漏，以关系型数据库为主就是 select * from .....，没有分页逻辑并且默认最大2000条(可配置)。虽然官方在做这件事情，但是可能还需要一段时间。</p>`,r:{minutes:7.5,words:2251},t:"Debezium详细嵌入NIFI",O:11,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/RunNiFi%E6%BA%90%E7%A0%81.html",{loader:()=>A(()=>import("./RunNiFi源码.html-SeWTWEzL.js"),__vite__mapDeps([13,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>RunNiFi类是由 nifi.sh脚本执行java命令指定的主类，RunNiFi类主要是干一些 查找文件，接受脚本指令，启动停止NIFI进程(主类 org.apache.nifi.NiFi)，自动重启NIFI，发送NIFI通知等等操作；
关于代码的详细解读都在注释当中，可以从 main方法下自行跟踪阅读(自己跟着源码逻辑读更好)：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD"> org.apache.nifi.bootstrap</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 这个类通过查找以下位置来查找bootstrap.conf文件:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * java系统变量 org.apache.nifi.bootstrap.config.file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 环境变量(脚本中设置)\${NIFI_HOME}/./conf/bootstrap.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * ./conf/bootstrap.conf ./ 是当前类所在目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 如果bootstrap.conf找不到，抛出FileNotFoundException</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> RunNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> DEFAULT_CONFIG_FILE </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "./conf/bootstrap.conf"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> DEFAULT_JAVA_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "java"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> DEFAULT_PID_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "bin"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> DEFAULT_LOG_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "./logs"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> GRACEFUL_SHUTDOWN_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "graceful.shutdown.seconds"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> DEFAULT_GRACEFUL_SHUTDOWN_VALUE </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "20"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NOTIFICATION_SERVICES_FILE_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "notification.services.file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NOTIFICATION_ATTEMPTS_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "notification.max.attempts"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_START_NOTIFICATION_SERVICE_IDS_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.start.notification.services"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_STOP_NOTIFICATION_SERVICE_IDS_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.stop.notification.services"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_DEAD_NOTIFICATION_SERVICE_IDS_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.dead.notification.services"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_PID_DIR_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "org.apache.nifi.bootstrap.config.pid.dir"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_PID_FILE_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.pid"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_STATUS_FILE_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.status"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_LOCK_FILE_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.lock"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_BOOTSTRAP_SENSITIVE_KEY </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "nifi.bootstrap.sensitive.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> PID_KEY </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "pid"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> STARTUP_WAIT_SECONDS </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> SHUTDOWN_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "SHUTDOWN"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> PING_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "PING"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> DUMP_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "DUMP"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> autoRestartNiFi </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> ccPort </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiPid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> secretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> shutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiStarted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startedLock </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ReentrantLock</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lock </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ReentrantLock</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startupCondition </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newCondition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 默认情况下，当应用程序启动时，这些将被记录到控制台(就是我们nifi.sh start 时看到的日志)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> cmdLogger </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.bootstrap.Command"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 默认情况下，这些将被写入日志文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> defaultLogger </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">RunNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ExecutorService</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> loggingExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> volatile</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> loggingFutures </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // nifi启动 停止 异常结束的通知服务</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NotificationServiceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> serviceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RunNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> verbose</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">bootstrapConfigFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> bootstrapConfigFile;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //设置日志线程池 大小为2 一个写 文件  一个输出控制台 ，都是守护线程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        loggingExecutor </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Executors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newFixedThreadPool</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> newThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Runnable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Executors</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">defaultThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(runnable);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setDaemon</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi logging handler"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> t;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        serviceManager </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> printUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Usage:"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"java org.apache.nifi.bootstrap.RunNiFi [&lt;-verbose&gt;] &lt;command&gt; [options]"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Valid commands include:"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Start : Start a new instance of Apache NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Stop : Stop a running instance of Apache NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Restart : Stop Apache NiFi, if it is running, and then start a new instance"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Status : Determine if there is a running instance of Apache NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Dump : Write a Thread Dump to the file specified by [options], or to the log if no file is given"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Run : Start a new instance of Apache NiFi and monitor the Process, restarting if the instance dies"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">shift</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">orig</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">copyOfRange</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(orig, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">orig</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 比如传入参数  start</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InterruptedException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            printUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> dumpFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //检测是否是多参数  传入start 显然false </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-verbose"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            //如果参数冗余，取第一个参数 copy过来</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            args </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shift</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"dump"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                dumpFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(args[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                dumpFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //检测第一个参数是否合规 不合规就打印提示</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toLowerCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "start"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "run"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "stop"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "status"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "dump"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "restart"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "env"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            default:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                printUsage</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //获取bootsrap.conf -&gt; \${NIFI_HOME}/./conf/bootstrap.conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> configFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getDefaultBootstrapConfFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 实例化 RunNiFi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> RunNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> runNiFi</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RunNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(configFile, verbose);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> exitStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 判断参数  先看 start  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toLowerCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "start"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "run"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "stop"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "status"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                exitStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "restart"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "dump"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">dump</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(dumpFile);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "env"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                runNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (exitStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(exitStatus);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    * 返回  \${NIFI_HOME}/./conf/bootstrap.conf  NIFI_HOME这个环境变量在启动脚本中就设置好了</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getDefaultBootstrapConfFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> configFilename</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.bootstrap.config.file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (configFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiHome</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NIFI_HOME"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (nifiHome </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiHomeFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">nifiHome</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> configFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiHomeFile, DEFAULT_CONFIG_FILE);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                configFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> configFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (configFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            configFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> DEFAULT_CONFIG_FILE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> configFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(configFilename);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> configFile;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    * 装载通知服务  NIFI 启动 停止 死掉的通知</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    **/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NotificationServiceManager</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //读取 bootstrap.conf配置文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrapConfFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fis</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(bootstrapConfFile)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fis);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NotificationServiceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> manager</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NotificationServiceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // notification.max.attempts 最大尝试次数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> attemptProp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NOTIFICATION_ATTEMPTS_PROP);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (attemptProp </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                // 转int</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> maxAttempts</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">attemptProp</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (maxAttempts </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    manager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setMaxNotificationAttempts</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(maxAttempts);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NumberFormatException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> nfe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Maximum number of attempts to send notification email is set to an invalid value of {}; will use default value"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, attemptProp);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 获取 notification.services.file   通知服务的配置文件名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> notificationServicesXmlFilename</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NOTIFICATION_SERVICES_FILE_PROP);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (notificationServicesXmlFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"No Bootstrap Notification Services configured."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> manager;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 解析通知服务的xml配置文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> xmlFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(notificationServicesXmlFilename);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> servicesFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">xmlFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isAbsolute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            servicesFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> xmlFile;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> confDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getParentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiHome</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getParentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            servicesFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiHome, notificationServicesXmlFilename);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">servicesFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Bootstrap Notification Services file configured as "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> servicesFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " but could not find file; will not load notification services"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> manager;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 装载通知服务配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            manager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">loadNotificationServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(servicesFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Bootstrap Notification Services file configured as "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> servicesFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " but failed to load notification services"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 注册 start stop dead 的通知服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        registerNotificationServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(manager, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_STARTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NIFI_START_NOTIFICATION_SERVICE_IDS_PROP));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        registerNotificationServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(manager, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_STOPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NIFI_STOP_NOTIFICATION_SERVICE_IDS_PROP));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        registerNotificationServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(manager, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_DIED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NIFI_DEAD_NOTIFICATION_SERVICE_IDS_PROP));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> manager;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    * 注册通知服务 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    **/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> registerNotificationServices</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NotificationServiceManager</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> manager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NotificationType</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> serviceIds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (serviceIds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Registered no Notification Services for Notification Type {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, type);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> registered</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> serviceIds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">","</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> trimmed</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">trimmed</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                continue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                manager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">registerNotificationService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(type, trimmed);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                registered</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to register Notification Service with ID {} for Notifications of type {} due to {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, trimmed, type, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Registered {} Notification Services for Notification Type {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, registered, type);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**根据参数，读取相应的文件*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getBootstrapFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> directory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> defaultDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fileName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> confDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getParentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiHome</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getParentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> confFileDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(directory);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fileDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (confFileDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            fileDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">confFileDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            fileDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiHome, defaultDirectory);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        FileUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">ensureDirectoryExistAndCanAccess</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fileDir);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> statusFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fileDir, fileName);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Status File: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, statusFile);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> statusFile;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**读取run目录下nifi.pid文件*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getPidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getBootstrapFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger, NIFI_PID_DIR_PROP, DEFAULT_PID_DIR, NIFI_PID_FILE_NAME);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**读取run目录下nifi.status文件*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getBootstrapFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger, NIFI_PID_DIR_PROP, DEFAULT_PID_DIR, NIFI_STATUS_FILE_NAME);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**读取run目录下nifi.lock文件*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getLockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getBootstrapFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger, NIFI_PID_DIR_PROP, DEFAULT_PID_DIR, NIFI_LOCK_FILE_NAME);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(defaultLogger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     /**loadrun目录下nifi.status文件内容*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> props</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> statusFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (statusFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"No status file to load properties from"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> props;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fis</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fis);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">modified</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;(props);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        modified</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"secret.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Properties: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, modified);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> props;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 将获取到的pid值写入run目录下的nifi.pid nifi.status文件中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> synchronized</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> savePidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> pidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> pidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StringUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isBlank</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            writePidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> statusFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, statusFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createNewFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to create file "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> statusFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">perms</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OWNER_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OWNER_WRITE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setPosixFilePermissions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(), perms);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to set permissions so that only the owner can read status file {}; "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "this may allows others to have access to the key needed to communicate with NiFi. "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Permissions should be changed so that only the owner can read this file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, statusFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fos</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(statusFile)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            pidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">store</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fos, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            fos</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getFD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Saved Properties {} to {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{pidProperties, statusFile});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 将获取到的pid值写入run目录下的nifi.pid文件中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> synchronized</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> writePidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pidFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getPidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pidFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createNewFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to create file "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pidFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">perms</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OWNER_WRITE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OWNER_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">GROUP_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OTHERS_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setPosixFilePermissions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(), perms);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to set permissions so that only the owner can read pid file {}; "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "this may allows others to have access to the key needed to communicate with NiFi. "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Permissions should be changed so that only the owner can read this file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pidFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fos</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pidFile)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            fos</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            fos</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getFD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sync</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Saved Pid {} to {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{pid, pidFile});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isPingSuccessful</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> secretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Pinging {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> socket</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"localhost"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> OutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> out</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((PING_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> secretKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Sent PING command"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setSoTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(in));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"PING response: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> PING_CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    *读取run目录下 nifi.status 返回其中port值  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    *nifi.status中的值是每次执行RunNIFI.start后写进去的，stop后清除</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getCurrentPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> props</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> portVal</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"port"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (portVal </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"No Port found in status file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Port defined in status file: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, portVal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(portVal);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> success</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isPingSuccessful</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(port, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"secret.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (success) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Successful PING on port {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"PID in status file is {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> procRunning</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (procRunning) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // We use the "ps" command to check if the process is still running.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ProcessBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">command</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"ps"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-p"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Process</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> proc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // Look for the pid in the output of the 'ps' command.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> running</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> proc</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                 final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Reader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> streamReader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(in);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                 final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(streamReader)) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ((line </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                        running </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // If output of the ps command had our PID, the process is running.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (running) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Process with PID {} is running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Process with PID {} is not running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> running;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">err</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to determine if Process "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " is running; assuming that it is not"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Status</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            props </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (props </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> portValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"port"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> secretKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"secret.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (portValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pingSuccess</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (portValue </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                port </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(portValue);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                pingSuccess </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isPingSuccessful</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(port, secretKey, logger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NumberFormatException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> nfe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (pingSuccess) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(port, pid, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> alive</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(port, pid, pingSuccess, alive);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> cmdLogger;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isRespondingToPing</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is currently running, listening to Bootstrap on port {}, PID={}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "unknown"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is running at PID {} but is not responding to ping requests"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is not running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is not responding to Ping requests. The process may have died or may be hung"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is not running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> cmdLogger;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is not running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">virtualMachineClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            virtualMachineClass </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"com.sun.tools.attach.VirtualMachine"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ClassNotFoundException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> cnfe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Seems tools.jar (Linux / Windows JDK) or classes.jar (Mac OS) is not available in classpath"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> attachMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> detachMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            attachMethod </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> virtualMachineClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"attach"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            detachMethod </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> virtualMachineClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getDeclaredMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"detach"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Methods required for getting environment not available"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> virtualMachine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            virtualMachine </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> attachMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Throwable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Problem attaching to NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, t);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> getSystemPropertiesMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> virtualMachine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getClass</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"getSystemProperties"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sysProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (Properties) </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">getSystemPropertiesMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(virtualMachine);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Entry</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">syspropEntry</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sysProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">entrySet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">syspropEntry</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " = "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> syspropEntry</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Throwable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(t);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                detachMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(virtualMachine);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Caught exception detaching from process"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 将NiFi线程dump写入给定文件;如果文件为空，则记录在INFO级别。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> dumpFile</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 要将dump内容写入其中的文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> IOException</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 如果在编写dump文件时发生任何问题</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> dump</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> dumpFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> defaultLogger;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 默认写到nifi-bootstrap.log中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getCurrentPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (port </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is not currently running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> secretKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> nifiProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"secret.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sb</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> socket</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Connecting to NiFi instance"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setSoTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">60000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InetSocketAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"localhost"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Established connection to NiFi instance."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setSoTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">60000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Sending DUMP Command to port {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> OutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> out</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((DUMP_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> secretKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(in))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ((line </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(line).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> dump</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (dumpFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(dump);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fos</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(dumpFile)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                fos</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">dump</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 我们希望(默认情况下)登录到将线程转储写入指定文件的控制台</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Successfully wrote thread dump to {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">dumpFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /** nifi stop 通知*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> notifyStop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> hostname</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getHostname</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> SimpleDateFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> SimpleDateFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"yyyy/MM/dd HH:mm:ss.SSS"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sdf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"user.name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (user </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            user </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Unknown User"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        serviceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">notify</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_STOPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi Stopped on Host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">                "Hello,</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">Apache NiFi has been told to initiate a shutdown on host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " at "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> now </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " by user "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> user);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /** nifi stop 命令*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> cmdLogger;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getCurrentPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (port </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is not currently running"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 指示正在执行停止命令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lockFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getLockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">lockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            lockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createNewFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> loadProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> secretKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> nifiProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"secret.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> nifiProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> statusFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pidFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getPidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(logger);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> socket</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Connecting to NiFi instance"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setSoTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InetSocketAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"localhost"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Established connection to NiFi instance."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setSoTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // BootstrapListener 监听接受命令 进行nifi关闭动作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Sending SHUTDOWN Command to port {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> OutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> out</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((SHUTDOWN_CMD </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> secretKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">shutdownOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lastChar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sb</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ((lastChar </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">read</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">char</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) lastChar);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Received response to SHUTDOWN command: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, response);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">SHUTDOWN_CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(response)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi has accepted the Shutdown Command and is shutting down now"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrapProperties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fis</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(bootstrapConfigFile)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        bootstrapProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fis);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> gracefulShutdown</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(GRACEFUL_SHUTDOWN_PROP, DEFAULT_GRACEFUL_SHUTDOWN_VALUE);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> gracefulShutdownSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                        gracefulShutdownSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(gracefulShutdown);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NumberFormatException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> nfe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                        gracefulShutdownSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(DEFAULT_GRACEFUL_SHUTDOWN_VALUE);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                    notifyStop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startWait</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Waiting for Apache NiFi to finish shutting down..."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> waitNanos</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> startWait;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> waitSeconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NANOSECONDS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(waitNanos);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (waitSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gracefulShutdownSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gracefulShutdownSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi has not finished shutting down after {} seconds. Killing process."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, gracefulShutdownSeconds);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                                    killProcessTree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                                    logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to kill Process with PID {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                            break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                            try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                                Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2000L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InterruptedException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ie</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete status file {}; this file should be cleaned up manually"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, statusFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pidFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete pid file {}; this file should be cleaned up manually"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pidFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi has finished shutting down."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"When sending SHUTDOWN command to NiFi, got unexpected response {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to send shutdown command to port {} due to {}. No PID found for the NiFi process, so unable to kill process; "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                        +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "the process should be killed manually."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{port, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to send shutdown command to port {} due to {}. Will kill the NiFi Process with PID {}."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(), pid);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                notifyStop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                killProcessTree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid, logger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete status file {}; this file should be cleaned up manually"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, statusFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">lockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">lockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete lock file {}; this file should be cleaned up manually"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, lockFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**获取当前进程的子进程*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getChildProcesses</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ppid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Process</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> proc</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"ps"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-o"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"pid"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"--no-headers"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"--ppid"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, ppid});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">childPids</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> proc</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">             final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(in))) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ((line </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                childPids</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> childPids;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**kill -9 全部杀死*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> killProcessTree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Killing Process Tree for PID {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">children</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getChildProcesses</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Children of PID {}: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{pid, children});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> childPid</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> children) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            killProcessTree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(childPid, logger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 直接kill -9 全部杀死</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"kill"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-9"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, pid});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**判断进程是否在运行*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isAlive</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Process</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exitValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalStateException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> | </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">IllegalThreadStateException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> itse</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**获取本机地址 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getHostname</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> hostname</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Unknown Host"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Unknown IP Address"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InetAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> localhost</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InetAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLocalHost</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            hostname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> localhost</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getHostName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            ip </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> localhost</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getHostAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to obtain hostname for notification due to:"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " ("</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ip </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ")"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**nifi.sh start 命令*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">SuppressWarnings</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">({</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"rawtypes"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "unchecked"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InterruptedException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 读取run目录下的nifi.status文件  查看port是否有值  有值说明当前nifi正在运行中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getCurrentPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(cmdLogger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (port </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi is already running, listening to Bootstrap on port "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 查找run目录下nifi.lock文件 如果存在 则尝试删除  删除失败则发出警告</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> prevLockFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getLockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(cmdLogger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prevLockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prevLockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to delete previous lock file {}; this file should be cleaned up manually"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, prevLockFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 作启动进程使用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ProcessBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ProcessBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileNotFoundException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // load bootstratp.conf 文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fis</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FileInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(bootstrapConfigFile)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(fis);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //bootstrap.con的配置 转map 作启动下一个进程的启动参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">props</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">putAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((Map) properties);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //从bootstrap.conf 读取working.dir (默认配置文件里是没有的)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> specifiedWorkingDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"working.dir"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (specifiedWorkingDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">directory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(specifiedWorkingDir));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // NiFi-HOME/conf/bootstrap.conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bootstrapConfigAbsoluteFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapConfigFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsoluteFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // NiFi-HOME/conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> binDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapConfigAbsoluteFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getParentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // NiFi-HOME</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> workingDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> binDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getParentFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (specifiedWorkingDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">directory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(workingDir);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // logs目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiLogDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> replaceNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.bootstrap.config.log.dir"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), DEFAULT_LOG_DIR).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // lib.dir=./lib</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> libFilename</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> replaceNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"lib.dir"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./lib"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> libDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(libFilename, workingDir);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //conf.dir=./conf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> confFilename</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> replaceNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"conf.dir"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./conf"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> confDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(confFilename, workingDir);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 获取nifi配置文件名  默认为 nifi.properties</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiPropsFilename</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"props.file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (nifiPropsFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                nifiPropsFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(confDir, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"nifi.properties"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                nifiPropsFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> DEFAULT_CONFIG_FILE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        nifiPropsFilename </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> nifiPropsFilename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //  组装 java 启动参数  将bootstrap.conf中的java.arg开头的值添加进去</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">javaAdditionalArgs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Entry</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">entry</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">entrySet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> entry</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> entry</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"java.arg"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                javaAdditionalArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 将lib目录下的jar包  文件筛选出来</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">libFiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> libDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">listFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> FilenameFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> accept</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> dir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> filename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> filename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toLowerCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">endsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">".jar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (libFiles </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> libFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Could not find lib directory at "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> libDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 列出conf下的配置文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">confFiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">listFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (confFiles </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> confFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> RuntimeException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Could not find conf directory at "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //  java classpath(java -cp) 参数列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">cpFiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">confFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> libFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cpFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> libFiles) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cpFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // list 转 字符串</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> classPathBuilder</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> cpFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(); i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> cpFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            classPathBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(filename);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> cpFiles</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                classPathBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pathSeparatorChar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> classPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> classPathBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //    java=java</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> javaCmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"java"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (javaCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            javaCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> DEFAULT_JAVA_CMD;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // File.separatorChar 斜杠/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">javaCmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(DEFAULT_JAVA_CMD)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> javaHome</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"JAVA_HOME"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (javaHome </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> fileExtension</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isWindows</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ".exe"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> javaFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(javaHome </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">separatorChar</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "bin"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                        +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">separatorChar</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "java"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> fileExtension);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">javaFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> javaFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">canExecute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    javaCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> javaFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //监听RunNIFI进程，内部有一个监听serverSocket，随机了一个端口监听，里面把NIFI进程(RunNiFi启动的)的端口号和pid写进文件 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NiFiListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> listener</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NiFiListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //这个监听端口作为启动NIFI进程的变量，然后在NIFI进程中向RunNIFI 进行的serverSocket通信，发送数据(NiFi 进程的Port和随机生成的secretKey)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> listenPort</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> listener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(javaCmd);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-classpath"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(classPath);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">addAll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(javaAdditionalArgs);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dnifi.properties.file.path="</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> nifiPropsFilename);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dnifi.bootstrap.listen.port="</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> listenPort);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dapp=NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dorg.apache.nifi.bootstrap.config.log.dir="</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> nifiLogDir);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"java.version"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">startsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"1."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // running on Java 9+, java.xml.bind module must be made available</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"--add-modules=java.xml.bind"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isSensitiveKeyPresent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(props)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sensitiveKeyFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createSensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(confDir);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            writeSensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(props, sensitiveKeyFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-K "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">command</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(cmd);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> cmdBuilder</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> StringBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> cmd) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          cmdBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(s).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //控制台输出日志</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Starting Apache NiFi..."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Working Directory: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">workingDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Command: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">cmdBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // graceful.shutdown.seconds=20 bootstrap.conf中的默认配置  关闭的默认时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> gracefulShutdown</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(GRACEFUL_SHUTDOWN_PROP);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (gracefulShutdown </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            gracefulShutdown </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> DEFAULT_GRACEFUL_SHUTDOWN_VALUE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> gracefulShutdownSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            gracefulShutdownSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(gracefulShutdown);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> NumberFormatException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> nfe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NumberFormatException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The '"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> GRACEFUL_SHUTDOWN_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "' property in Bootstrap Config File "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapConfigAbsoluteFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " has an invalid value. Must be a non-negative integer"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (gracefulShutdownSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NumberFormatException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The '"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> GRACEFUL_SHUTDOWN_PROP </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "' property in Bootstrap Config File "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> bootstrapConfigAbsoluteFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " has an invalid value. Must be a non-negative integer"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 启动进程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Process</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> process</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        handleLogging</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //返回进程在系统中的pid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> OSUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProcessId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process, cmdLogger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Launched Apache NiFi but could not determined the Process ID"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 将pid写入run目录下的nifi.pid中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            nifiPid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pidProperties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            pidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiPid));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            savePidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pidProperties, cmdLogger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Launched Apache NiFi with Process ID "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //  实例化 shutdownHook 执行NIFI关闭时的一些操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        shutdownHook </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, secretKey, gracefulShutdownSeconds, loggingExecutor);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> runtime</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getRuntime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">addShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(shutdownHook);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 获取主机地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> hostname</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getHostname</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> SimpleDateFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sdf</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> SimpleDateFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"yyyy/MM/dd HH:mm:ss.SSS"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sdf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"user.name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (user </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">trim</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            user </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Unknown User"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // NIFI 启动通知(如果配置了的话)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        serviceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">notify</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_STARTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi Started on Host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Hello,</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">Apache NiFi has been started on host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " at "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> now </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " by user "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> user);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 循环监听NIFI进程状态 NIFI Died 重启以及通知 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> alive</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isAlive</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 如果进程还在运行 则继续循环 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (alive) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1000L</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InterruptedException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ie</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            // 进程不在运行  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">removeShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(shutdownHook);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IllegalStateException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    // 在已经关闭时发生</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                now </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> sdf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">format</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                //  默认会自动重启  nifi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (autoRestartNiFi) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> statusFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(defaultLogger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Status File no longer exists. Will not restart NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lockFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getLockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(defaultLogger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">lockFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exists</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"A shutdown was initiated. Will not restart NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    // 如果nifi之前没有启动过  那么也就没有重启一说</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> previouslyStarted</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getNifiStarted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">previouslyStarted) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi never started. Will not restart NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                        //如果到这一步，说明没啥问题，应该执行重启动作，设置NIFI启动状态为false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                        setNiFiStarted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    // nifi.bootstrap.sensitive.key  主键为十六进制格式，用于加密的敏感配置值  默认为空 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    // 否则会在conf下生成sensitive.key文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isSensitiveKeyPresent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(props)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sensitiveKeyFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createSensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(confDir);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                        writeSensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(props, sensitiveKeyFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi appears to have died. Restarting..."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    process </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> builder</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                    handleLogging</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> OSUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProcessId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process, defaultLogger);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Launched Apache NiFi but could not obtain the Process ID"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                        nifiPid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pidProperties</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        pidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiPid));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                        savePidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pidProperties, defaultLogger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Launched Apache NiFi with Process ID "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    shutdownHook </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(process, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, secretKey, gracefulShutdownSeconds, loggingExecutor);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    runtime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">addShutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(shutdownHook);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    //判断预期的时间内 nifi是否启动成功</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> started</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> waitForStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (started) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Successfully started Apache NiFi{}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, (pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ""</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " with PID "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        serviceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">notify</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_DIED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi Died on Host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">                                "Hello,</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">It appears that Apache NiFi has died on host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " at "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> now </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "; automatically restarting NiFi"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi does not appear to have started"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                        // 我们希望重新启动nifi，因此发送一个通知，说明它已经死亡。如果我们不重新启动nifi，那么这意味着我们故意停止服务。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        serviceManager</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">notify</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NotificationType</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NIFI_DIED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"NiFi Died on Host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">                                "Hello,</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\n\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">It appears that Apache NiFi has died on host "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hostname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> " at "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> now </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">                                        ". Attempted to restart NiFi but the services does not appear to have restarted!"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**写sensitive.key值*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> writeSensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Path</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> sensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        BufferedWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sensitiveKeyWriter</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">newBufferedWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(sensitiveKeyFile, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StandardCharsets</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">UTF_8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        sensitiveKeyWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NIFI_BOOTSTRAP_SENSITIVE_KEY));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        sensitiveKeyWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**生成sensitive.key文件*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createSensitiveKeyFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> confDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Path</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> sensitiveKeyFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Paths</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(confDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"/sensitive.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> isPosixSupported</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileSystems</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">supportedFileAttributeViews</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"posix"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (isPosixSupported) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                // Initially create file with the empty permission set (so nobody can get a file descriptor on it):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">perms</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                FileAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">attr</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> PosixFilePermissions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asFileAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(perms);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                sensitiveKeyFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(sensitiveKeyFile, attr);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                // Then, once created, add owner-only rights:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OWNER_WRITE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                perms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">PosixFilePermission</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">OWNER_READ</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                attr </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> PosixFilePermissions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">asFileAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(perms);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setPosixFilePermissions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(sensitiveKeyFile, perms);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                // If Posix is not supported (e.g. Windows) then create the key file without permission settings.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Current file system does not support Posix, using default permission settings."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                sensitiveKeyFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Files</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(sensitiveKeyFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> FileAlreadyExistsException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> faee</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"The sensitive.key file {} already exists. That shouldn't have been. Aborting."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, sensitiveKeyFile);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            cmdLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Other failure relating to setting permissions on {}. "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "(so that only the owner can read it). "</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">                    +</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "This is fatal to the bootstrap process for security reasons. Exception was: {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, sensitiveKeyFile, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> sensitiveKeyFile;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**在bootstrap.conf中判断sensitive.key是否配置了*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isSensitiveKeyPresent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">containsKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NIFI_BOOTSTRAP_SENSITIVE_KEY) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">StringUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isBlank</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">props</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(NIFI_BOOTSTRAP_SENSITIVE_KEY));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**日志*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> handleLogging</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Process</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">existingFutures</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> loggingFutures;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (existingFutures </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">future</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> existingFutures) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cancel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">stdOutFuture</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> loggingExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">submit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> stdOutLogger</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.StdOut"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(in))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ((line </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        stdOutLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(line);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to read from NiFi's Standard Out stream"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">stdErrFuture</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> loggingExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">submit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> stdErrLogger</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"org.apache.nifi.StdErr"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getErrorStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reader</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> BufferedReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> InputStreamReader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(in))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ((line </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> reader</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                        stdErrLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(line);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Failed to read from NiFi's Standard Error stream"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Future</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&gt; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">futures</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> HashSet</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        futures</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(stdOutFuture);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        futures</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(stdErrFuture);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">loggingFutures</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> futures;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**启动脚本中判断了本机系统，并设置到了环境变量当中，判断当前系统是否是windows*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isWindows</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> osName</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"os.name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> osName </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> osName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toLowerCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"win"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**启动等待*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> waitForStart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> startTime</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            //ccPort NiFiCommandControlPort 启动前值为-1，由NiFiListener再次进行设置 1-65535  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (ccPort </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    startupCondition</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">await</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">SECONDS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> InterruptedException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ie</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> waitNanos</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nanoTime</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> startTime;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> waitSeconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> TimeUnit</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">NANOSECONDS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(waitNanos);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (waitSeconds </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> STARTUP_WAIT_SECONDS) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> filename</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> workingDir</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(filename);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">file</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isAbsolute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            file </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(workingDir, filename);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> file;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> replaceNull</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (value </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> replacement </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> value;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setAutoRestartNiFi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">autoRestartNiFi</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> restart;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**NiFiListener 调用BootstrapCodec的communicate方法，中再调用次方法，设置ccport并 写入nifi.status文件中*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setNiFiCommandControlPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> secretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ccPort</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">secretKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> secretKey;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (shutdownHook </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            shutdownHook</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setSecretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(secretKey);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> statusFile</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getStatusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(defaultLogger);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nifiProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (nifiPid </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            nifiProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(PID_KEY, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiPid));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"port"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(ccPort));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        nifiProps</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"secret.key"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, secretKey);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            savePidProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(nifiProps, defaultLogger);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> IOException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> ioe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi has started but failed to persist NiFi Port information to {} due to {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">statusFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAbsolutePath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(), ioe});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        defaultLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">info</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Apache NiFi now running and listening for Bootstrap requests on port {}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, port);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getNiFiCommandControlPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ccPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setNiFiStarted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> nifiStarted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        startedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">nifiStarted</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> nifiStarted;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            startedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getNifiStarted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        startedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> nifiStarted;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            startedLock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">unlock</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> respondingToPing</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> processRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Boolean</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> respondingToPing</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Boolean</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> processRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">pid</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">respondingToPing</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> respondingToPing;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">processRunning</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> processRunning;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getPid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> pid;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> port;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isRespondingToPing</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TRUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(respondingToPing);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isProcessRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">TRUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(processRunning);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:18.52,words:5555},t:"RunNiFi.java 源码解读",O:15,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/nifi-env-sh.html",{loader:()=>A(()=>import("./nifi-env-sh.html-CWiBOYpF.js"),__vite__mapDeps([14,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#!/bin/sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># nifi 目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SCRIPT_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> ..</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># nifi pid 目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_PID_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/run"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># nifi 日志目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_LOG_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/logs"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 设置为false，以强制在使用Kerberos的处理器中使用Keytab控制器服务。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 如果为true，这些处理器将允许直接在处理器内配置keytab和principal。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 如果为false，如果试图配置这些属性，这些处理器将无效。这在多租户环境中可能是有利的，在这种环境中，keytabs的管理应该只由具有较高权限的用户执行(即，已被授予“ACCESS_KEYTAB”限制的用户)。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> NIFI_ALLOW_EXPLICIT_KEYTAB</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.57,words:171},t:"nifi-env脚本解读",O:12,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/nifi-sh-start.html",{loader:()=>A(()=>import("./nifi-sh-start.html-DzNWmFVs.js"),__vite__mapDeps([15,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>以下是我们执行nifi.sh start的时候最后执行的命令：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>/usr/bin/java -cp /data/nifi/nifi-1.8.0/conf:/data/nifi/nifi-1.8.0/lib/bootstrap/* -Xms12m -Xmx24m -Dorg.apache.nifi.bootstrap.config.log.dir=/data/nifi/nifi-1.8.0/logs -Dorg.apache.nifi.bootstrap.config.pid.dir=/data/nifi/nifi-1.8.0/run -Dorg.apache.nifi.bootstrap.config.file=/data/nifi/nifi-1.8.0/conf/bootstrap.conf org.apache.nifi.bootstrap.RunNiFi start</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.35,words:104},t:"nifi.sh start 解读",O:13,y:"a"}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/nifi-sh.html",{loader:()=>A(()=>import("./nifi-sh.html-CP4YHDwv.js"),__vite__mapDeps([16,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI开发",g:"NIFI",e:`<p>整个脚本分为三部分，第一部分是确定NIFI各个路径 目录的确定，设置环境变量，第二部分是方法区。第三部分是脚本逻辑代码的入口，初略的根据传参不同区执行不同的方法。以下脚本有详细注释：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#!/bin/sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 1、查找文件的路径 start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 由于MacOS X、FreeBSD和其他一些系统缺少gnu readlink，我们使用了基于以下StackOverflow注释http://stackoverflow.com/a/1116890/888876的更可移植的方法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">## 特殊变量 当前脚本的文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TARGET_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#跳转到当前脚本所在的目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $TARGET_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">## TARGET_FILE=nifi.sh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TARGET_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">basename</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $TARGET_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">## 遍历(可能的)符号链接链   -L filename，判断文件是否问链接文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-L</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">$TARGET_FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    TARGET_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">readlink</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $TARGET_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    cd</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $TARGET_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    TARGET_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">basename</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $TARGET_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">done</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># pwd -P  显示出实际路径，而非使用连接（link）路径。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">PHYS_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">pwd</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -P</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 脚本所在目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SCRIPT_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">$PHYS_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">PROGNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">basename</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 查找文件的路径 end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 执行nifi-env.sh  设置了NIFI的目录环境变量</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SCRIPT_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/nifi-env.sh"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">#/2、方法区 start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">PROGNAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}: </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">$*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">die</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    warn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">$*</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 检测特殊的操作系统，然后做一些特殊操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">detectOS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # Cygwin是一个在windows平台上运行的类UNIX模拟环境</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    cygwin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # AIX，是IBM专有的UNIX操作系统</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    aix</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # AS400是IBM早期推出的商用小型机</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    os400</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # Darwin是由苹果电脑于2000年所释出的一个开放原始码操作系统</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    darwin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">uname</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">)"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> in</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">        CYGWIN</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            cygwin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            ;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">        AIX</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            aix</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            ;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">        OS400</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            os400</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            ;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">        Darwin</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            darwin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            ;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    esac</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # For AIX, set an environment variable</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">aix</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">         export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> LDR_CNTRL</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAXDATA</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">0xB0000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">DSA</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">         echo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">LDR_CNTRL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # In addition to those, go around the linux space and query the widely</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # adopted /etc/os-release to detect linux variants</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-f</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /etc/os-release ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        .</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> /etc/os-release</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">unlimitFD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # Use the maximum available, or set MAX_FD != -1 to use that</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 判断 \${MAX_FD}有没有被赋值 条件成立则没有赋值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        MAX_FD</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"maximum"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 如果可能的话，提升文件描述符的最大数量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">os400</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "false"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">cygwin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "false"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        MAX_FD_LIMIT</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -H</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -n</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD_LIMIT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'unlimited'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">$?</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "maximum"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "max"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    # use the system max</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">                    MAX_FD</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD_LIMIT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">                ulimit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -n</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> /dev/null</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                # echo "ulimit -n" \`ulimit -n\`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">$?</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -ne</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                    warn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not set maximum file descriptor limit: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                warn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not query system maximum file descriptor limit: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MAX_FD_LIMIT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 找到要执行的JVM</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">locateJava</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 设置Java虚拟机</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $cygwin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --unix</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --unix</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-r</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /etc/gentoo-release ] ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">java-config</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --jre-home</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                die</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "JAVA_HOME is not valid: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            JAVA</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/bin/java"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">            warn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "JAVA_HOME not set; results may vary"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            JAVA</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> java</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            JAVA</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">expr</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '.* \\(/.*\\)$'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">                die</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "java command not found"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 如果命令是 env, tools.jar classes.jar也加到 classpath</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "env"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">  "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "tools.jar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">  "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] &amp;&amp; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">find</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "classes.jar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">  "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">             warn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not locate tools.jar or classes.jar. Please set manually to avail all command features."</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 初始化 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 确定是否需要执行特殊的操作系统处理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    detectOS</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 如果可能的话，不限制文件描述符的数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    unlimitFD</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 找到要执行的JVM</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    locateJava</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 将nifi安装为service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">install</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    detectOS</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">darwin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">cygwin</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'Installing Apache NiFi as a service is not supported on OS X or Cygwin.'</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    SVC_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">nifi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"x</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$2</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "x"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] ; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        SVC_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # since systemd seems to honour /etc/init.d we don't still create native systemd services</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # yet...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    initd_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/etc/init.d'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    SVC_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">initd_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">  "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">initd_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Current user does not have write permissions to \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">initd_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}. Cannot install NiFi as a service."</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># Create the init script, overwriting anything currently present</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF">SERVICEDESCRIPTOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#!/bin/sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    Licensed to the Apache Software Foundation (ASF) under one or more</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    contributor license agreements.  See the NOTICE file distributed with</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    this work for additional information regarding copyright ownership.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    The ASF licenses this file to You under the Apache License, Version 2.0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    (the "License"); you may not use this file except in compliance with</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    the License.  You may obtain a copy of the License at</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#       http://www.apache.org/licenses/LICENSE-2.0</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    Unless required by applicable law or agreed to in writing, software</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    distributed under the License is distributed on an "AS IS" BASIS,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    See the License for the specific language governing permissions and</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#    limitations under the License.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379"># chkconfig: 2345 20 80</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379"># description: Apache NiFi is a dataflow system based on the principles of Flow-Based Programming.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">#</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379"># Make use of the configured NIFI_HOME directory and pass service requests to the nifi.sh executable</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">NIFI_HOME=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">bin_dir=</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">{NIFI_HOME}/bin</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">nifi_executable=</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">{bin_dir}/nifi.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">{nifi_executable} "</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">@"</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF">SERVICEDESCRIPTOR</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not create service file \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # Provide the user execute access on the file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> u+x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # If SLES or OpenSuse...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">ID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "opensuse"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">ID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "sles"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc.d/rc2.d/S65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/init.d/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc.d/rc2.d/S65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not create link /etc/rc.d/rc2.d/S65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc.d/rc2.d/K65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/init.d/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc.d/rc2.d/K65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not create link /etc/rc.d/rc2.d/K65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Service \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} installed"</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # Anything other fallback to the old approach</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc2.d/S65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/init.d/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc2.d/S65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not create link /etc/rc2.d/S65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc2.d/K65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/init.d/\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "/etc/rc2.d/K65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Could not create link /etc/rc2.d/K65\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Service \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SVC_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} installed"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_CONF_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/conf"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_CONF</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/bootstrap.conf"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_LIBS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/lib/bootstrap/*"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 运行NiFi时使用的用户名。此值将在Windows上被忽略。在bootstrap.conf中 run.as= 配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    run_as_user</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '^\\s*run.as'</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> cut</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'='</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -f2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 如果以用户身份运行与启动流程相同，则忽略此配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">whoami</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">)"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        unset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> run_as_user</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> $cygwin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">            echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "The run.as option is not supported in a Cygwin environment. Exiting."</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">            exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        NIFI_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        NIFI_LOG_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_LOG_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        NIFI_PID_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_PID_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        BOOTSTRAP_CONF</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        BOOTSTRAP_CONF_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        BOOTSTRAP_LIBS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_LIBS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">};\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_LIBS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            TOOLS_JAR</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">cygpath</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --path</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> --windows</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">};\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    else</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> !</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> id</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">/dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">                echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "The specified run.as user \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} does not exist. Exiting."</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">                exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_LIBS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">TOOLS_JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Java home: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "NiFi home: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Bootstrap Config File: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    #在后台运行'start'，因为进程将继续运行，监视NiFi。所有其他命令都将很快终止，所以要等待它们</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    #设置目录的参数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # java程序启动参数 -D 在System类中通过getProperties()得到的一串系统属性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_LOG_PARAMS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dorg.apache.nifi.bootstrap.config.log.dir='\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_LOG_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}'"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_PID_PARAMS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dorg.apache.nifi.bootstrap.config.pid.dir='\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_PID_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}'"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_CONF_PARAMS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"-Dorg.apache.nifi.bootstrap.config.file='\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}'"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # 去掉一下注釋就允许调试NIFI进程 (或者在bootstrap.conf中取消注释)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    #BOOTSTRAP_DEBUG_PARAMS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    BOOTSTRAP_DIR_PARAMS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_LOG_PARAMS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_PID_PARAMS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CONF_PARAMS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    run_nifi_cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"'\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">JAVA</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}' -cp '\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_CLASSPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}' -Xms12m -Xmx24m \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_DIR_PARAMS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_DEBUG_PARAMS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">BOOTSTRAP_JAVA_OPTS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} org.apache.nifi.bootstrap.RunNiFi </span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$@</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      # 为运行提供SCRIPT_DIR并执行ni -env。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      run_nifi_cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"sudo -u \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_as_user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} sh -c </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">SCRIPT_DIR='\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SCRIPT_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}' &amp;&amp; . '\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">SCRIPT_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}/nifi-env.sh' &amp;&amp; \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_nifi_cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "run"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      # 使用exec将PID切换到RunNiFi java进程，而不是将其作为子进程( 前台运行nifi，Ctrl-C就停止NIFI)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      # exec命令 用于调用并执行指令的命令。exec命令通常用在shell脚本程序中，可以调用其他的命令。如果在当前终端中使用命令，则当指定的命令执行完毕后会立即退出终端。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      run_nifi_cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"exec \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_nifi_cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # Linux eval命令用于重新运算求出参数的内容。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    # eval可读取一连串的参数，然后再依参数本身的特性来执行。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "start"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "cd \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} &amp;&amp; \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_nifi_cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> &amp; )</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> /dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF"> 1&gt;&amp;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">-</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        eval</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "cd \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">NIFI_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">} &amp;&amp; \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">run_nifi_cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">}"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    fi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    EXIT_STATUS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">$?</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   # 稍等(3秒)，等待日志记录完成，然后回显新行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   # 我们这样做是为了避免在运行命令后，日志在控制台被吐出来，然后返回给用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    echo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    init</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    run</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$@</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 方法区 end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 3、入口 start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># ==========================</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 判断 $1 第一个参数是什么 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 其中install 将nifi安装为service </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># start 启动</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># stop 停止</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># run</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># status </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># dump</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># restart 重启</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># $@ 传全部参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">case</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> in</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">    install</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$@</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">    start</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">|</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">stop</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">|</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">run</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">|</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">|</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">dump</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">|</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        main</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">$@</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">    restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        run</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "stop"</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        run</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "start"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">    *)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Usage nifi {start|stop|run|restart|status|dump|install}"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">esac</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.05,words:1816},t:"nifi.sh 脚本解读",O:14,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/000-ApacheNIFI%E5%8E%86%E5%8F%B2.html",{loader:()=>A(()=>import("./000-ApacheNIFI历史.html-Cm9das3T.js"),__vite__mapDeps([17,1])),meta:{d:15929568e5,l:"2020年6月24日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Apache NIFI简要历史</h2>
<ul>
<li>
<p>2006年NiFi由美国国家安全局（NSA）的Joe Witt创建。</p>
</li>
<li>
<p>2015年7月20日，Apache 基金会宣布Apache NiFi顺利孵化成为Apache的顶级项目之一。</p>
</li>
</ul>
`,r:{minutes:5.51,words:1652},t:"NIFI简史",O:0,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/001-NiFi%E6%9C%AF%E8%AF%AD.html",{loader:()=>A(()=>import("./001-NiFi术语.html-C2URF3VV.js"),__vite__mapDeps([18,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Overview</h2>
<p>NiFi的新贡献者经常会遇到相同的问题：我应该从哪里开始？当您查看类似NiFi的项目时，可以想象到有很多活动部件，因此了解所有这些部件如何组合在一起本身就变得令人生畏。本文档旨在对构成NiFi的组件以及这些组件如何装配在一起进行非常高级的描述。无意于详细介绍任何这些组件。还有其他一些文件（以后还会有更多文件）对这些单个组件中的某些组件的设计进行更深入的研究。本文档的目的是帮助不熟悉NiFi的开发人员加快使用某些术语的速度，并了解组成平台的不同组件之间如何进行交互。</p>
`,r:{minutes:15.14,words:4542},t:"NIFI术语",O:1,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/002-%E5%B8%A6%E4%BD%A0%E4%BD%93%E9%AA%8CApacheNIFI.html",{loader:()=>A(()=>import("./002-带你体验ApacheNIFI.html-CK2Ovo97.js"),__vite__mapDeps([19,1])),meta:{d:15905376e5,l:"2020年5月27日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>初衷：对于一些新接触Apache NIFI的小伙伴来说，他们急于想体验NIFI，恨不得直接找到一篇文章，照着做就直接能够解决目前遇到的需求或者问题，回想当初的我，也是这个心态。其实这样的心态是不对的。好多加入NIFI学习群的新手同学都会有这个问题，一些基本的概念和知识点都没有掌握，然后提出了一堆很初级的问题，对于这些问题，我们可能已经回答了几十上百次，厌倦了，所以大家一般会说"你先去看文档吧！"。其实，对于一个新手，直接看文档，也是一脸懵。所以在这里，我带领新手的你，新建一个同步的流程，并尽可能在新建流程的同时，穿插一些基本概念。跟随本文一起操作或者只是看看，最后你可能就找到了入门的感觉了。</p>
`,r:{minutes:12.06,words:3619},t:"带你体验Apache NIFI",O:2,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/003-NIFI%E5%85%A5%E9%97%A8.html",{loader:()=>A(()=>import("./003-NIFI入门.html-B9Em7E0S.js"),__vite__mapDeps([20,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>我将在本文中介绍：</p>
<ul>
<li>什么是ApacheNIFI，应在什么情况下使用它，理解在NIFI中的关键概念。</li>
</ul>
<p>我不会介绍的内容：</p>
<p>-NIFI集群的安装，部署，监视，安全性和管理。</p>
`,r:{minutes:13.6,words:4081},t:"NIFI读完即入门",O:3,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/004-%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95.html",{loader:()=>A(()=>import("./004-数据抽取的常见方法.html-CvHrMXAo.js"),__vite__mapDeps([21,1])),meta:{d:15998688e5,l:"2020年9月12日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>数据抽取是指从源数据源系统抽取需要的数据。实际应用中，数据源较多采用的是关系数据库。总体而言，数据抽取的常见方法有两大类，一是基于查询式的，一是基于日志的。</p>
`,r:{minutes:4.11,words:1232},t:"数据抽取的常见理论方法",O:4,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/005-%E5%9F%BA%E4%BA%8E%E5%A2%9E%E9%87%8F%E5%AD%97%E6%AE%B5%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE.html",{loader:()=>A(()=>import("./005-基于增量字段同步数据.html-Bk3_t5EN.js"),__vite__mapDeps([22,1])),meta:{d:16009056e5,l:"2020年9月24日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>在<a href="/ApacheNIFI%E6%95%99%E7%A8%8B/004-%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95.html" target="_blank">数据抽取的常见理论方法</a>一文中，我们概略的讨论了数据抽取的常见理论方法，下面我们详细说一说在Apache NIFI中，基于查询式的数据抽取。</p>
`,r:{minutes:1.46,words:439},t:"基于增量字段同步数据",O:5,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/006-NIFI%E5%90%84%E4%B8%AANAR%E5%8C%85%E5%8A%9F%E8%83%BD%E6%A6%82%E8%BF%B0.html",{loader:()=>A(()=>import("./006-NIFI各个NAR包功能概述.html-CxvOfyLC.js"),__vite__mapDeps([23,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>以下表格现有版本1.8为基础，同时参照 1.9、1.10版本，概述了nifi nar包作用，部分在国内不适用，合理的删减nar包能明显的减少安装包体积；删减nar包的方式很简便，直接在nifi-assembly 的pom.xml注释掉相关的依赖就可以了</p>
`,r:{minutes:6.67,words:2e3},t:"各个NAR包功能概述",O:6,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/007-Nar%E5%8C%85%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html",{loader:()=>A(()=>import("./007-Nar包加载机制源码解读.html-Dmzvrndj.js"),__vite__mapDeps([24,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>本文主要的研究内容</h2>
<p>在之前的官方文档Apache NiFi Overview一章我们有看到：对于任何基于组件的系统，涉及依赖的问题时常发生。NiFi通过提供自定义类加载器来解决这个问题，确保每个扩展包都暴露在一组非常有限的依赖中。因此，构建扩展包的时候不必担心它们是否可能与另一个扩展包冲突。这些扩展包的概念称为“NiFi Archives”，在Developer’s Guide中有更详细的讨论。</p>
<p>那么NIFI是怎样为每一个扩展包定义类加载器，以及这些扩展包的加载顺序是如何决定和实现的？</p>
`,r:{minutes:5.7,words:1710},t:"Nar包加载机制源码解读",O:7,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/008-Nar%E5%8C%85%E4%B8%8B%E7%9A%84MANIFEST.MF.html",{loader:()=>A(()=>import("./008-Nar包下的MANIFEST.MF.html-NrsKUgKF.js"),__vite__mapDeps([25,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>NIFI启动时有部分逻辑去读取nar包配置信息，比如名称 版本 包名等等。。。</p>
`,r:{minutes:.19,words:57},t:"Nar包下的MANIFEST.MF",O:8,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/009-Apache%20NIFI%E7%B1%BB%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E6%9C%BA%E5%88%B6.html",{loader:()=>A(()=>import("./009-Apache NIFI类资源隔离机制.html-BIETugyL.js"),__vite__mapDeps([26,1])),meta:{d:15944256e5,l:"2020年7月11日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>本文简单的讨论一下Apache NIFI项目结构的类资源隔离机制，适合接触过源码的同学阅读。</p>
`,r:{minutes:3.95,words:1186},t:"NIFI类资源隔离机制",O:9,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/010-Apache%20NIFI%20Processor%E6%83%85%E5%86%B5.html",{loader:()=>A(()=>import("./010-Apache NIFI Processor情况.html-CMnp1ao6.js"),__vite__mapDeps([27,1])),meta:{d:15934752e5,l:"2020年6月30日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>以下是基于最新版Apache NIFI，依据所在Nar包分类的组件说明情况，组件包括：Processor，Controller Service，ReportingTask</p>
`,r:{minutes:7.2,words:2161},t:"Processor情况",O:10,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/011-%E7%90%86%E8%A7%A3connection.html",{loader:()=>A(()=>import("./011-理解connection.html-6yfI0WUJ.js"),__vite__mapDeps([28,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>NiFi <code>Connection</code>是在两个已连接的NiFi处理器组件之间临时保存FlowFiles的位置。每个包含排队的NiFi FlowFiles的<code>Connection</code>在JVM堆中都会占一些空间。本文将对<code>Connection</code>进行分析，探究NiFi如何管理在该<code>Connection</code>中排队的FlowFiles和<code>Connection</code>对堆和性能的影响。</p>
`,r:{minutes:5.03,words:1508},t:"深入理解Connection",O:11,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/012-%E7%90%86%E8%A7%A3maxThread%E8%AE%BE%E7%BD%AE.html",{loader:()=>A(()=>import("./012-理解maxThread设置.html-BoOOW2n7.js"),__vite__mapDeps([29,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Max Timer Driven Thread Count 和 Max Event Driven Thread Count</h2>
<p>NiFi可以设置相对较低的<code>最大计时器线程计数(Max Timer Driven Thread Count)</code>，以支持在最简单的硬件上运行。此默认设置可能会限制必须执行大量并发处理的超大容量数据流的性能。</p>
`,r:{minutes:2.49,words:748},t:"最大线程池和处理器并发任务设置",O:12,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/013-RunDuration%E7%90%86%E8%A7%A3.html",{loader:()=>A(()=>import("./013-RunDuration理解.html-Dj4WzIZH.js"),__vite__mapDeps([30,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Run Duration</h2>
<p>一些处理器支持配置运行持续时间(<code>Run Duration</code>)。此设置告诉处理器在单个任务中继续使用同一task尽可能多地来处理来自传入队列的的FlowFiles(或成批的流文件)。
对于处理单个任务本身非常快并且FlowFile数量也很大的处理器来说，这是一个理想的选择。</p>
`,r:{minutes:5.73,words:1720},t:"Run Duration深入理解",O:13,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/014-ContentRepositoryArchiving%E7%90%86%E8%A7%A3.html",{loader:()=>A(()=>import("./014-ContentRepositoryArchiving理解.html-4_mF_3FN.js"),__vite__mapDeps([31,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>什么是内容存储库归档？</h2>
<p>nifi.properties文件中有三个属性，用于处理NiFi内容存储库中的内容归档。默认值如下所示：</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>nifi.content.repository.archive.max.retention.period=12 hours</span></span>
<span class="line"><span>nifi.content.repository.archive.max.usage.percentage=50%</span></span>
<span class="line"><span>nifi.content.repository.archive.enabled=true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.03,words:1808},t:"ContentRepositoryArchiving工作原理(译)",O:14,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/015-Controller%20Services%E6%98%AF%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B.html",{loader:()=>A(()=>import("./015-Controller Services是守护进程.html-D7lvOoRG.js"),__vite__mapDeps([32,1])),meta:{d:15934752e5,l:"2020年6月30日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>今天只是扯扯淡，顺便记录一下我突然想到的一个low疑问。</p>
<h2>有趣的对话</h2>
<p>今天又某同事兴奋地跟我说，他的组件设置了100个并发。</p>
<p>我问他：“服务器什么配置，这么牛逼，能开到100个并发”</p>
<p>某：“没看”</p>
`,r:{minutes:3.97,words:1192},t:"Controller Services是守护进程",O:15,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/016-NIFI%E8%B0%83%E5%BA%A6.html",{loader:()=>A(()=>import("./016-NIFI调度.html-B_L-yKf3.js"),__vite__mapDeps([33,1])),meta:{d:15915744e5,l:"2020年6月8日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>简介：本文主要讲解Apache NIFI的调度策略，对象主要是针对Processor组件。本文假定读者已经对Apache NIFI有了一定的了解和使用经验，同时作者也尽可能的去讲解的更透彻，使得本文尽可能让对NIFI接触不深的读者也能够看懂。</p>
`,r:{minutes:22.76,words:6828},t:"深入解析调度策略",O:16,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/017-NIFI%E9%AB%98%E5%8F%AF%E7%94%A8.html",{loader:()=>A(()=>import("./017-NIFI高可用.html-CYidAwWo.js"),__vite__mapDeps([34,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>前言：本文重点在于通过模拟事故来探索Apache NIFI集群的高可用，情景假定有一个3节点的NIFI集群，其中某个节点因为未知原因与集群失联，研究集群(两个在联节点集群）和失联的节点会发生什么，各个节点上的数据会怎样。(注意：节点因为未知原因与集群失联区别于系统管理员手动卸载节点)。除此之外，其他不做重点。</p>
<p>我尽量详细描述探索过程，读者可以跟着本文一起实地操作验证。</p>
`,r:{minutes:7.03,words:2110},t:"探索NIFI集群的高可用",O:17,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/018-%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96NiFi%E6%80%A7%E8%83%BD.html",{loader:()=>A(()=>import("./018-通过配置优化NiFi性能.html-Beh27LKF.js"),__vite__mapDeps([35,1])),meta:{d:15916608e5,l:"2020年6月9日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>NiFi的默认设置可以满足一般的运行和测试需求，但是如果想要处理大容量数据流，那就远远不够了。本文将介绍与NiFi性能有关的几个设置参数，让NiFi可以高效运转。</p>
<p>本文重点在如何优化初始配置或者对默认参数进行小幅修改，并不会深入讨论如何优化数据流设计和NiFi处理器。这些优化可以简单地可以通过编辑nifi.properties和bootstrap.conf实现，更多内容，可以去Apache官网(https://nifi.apache.org/docs.html)了。</p>
`,r:{minutes:6.4,words:1921},t:"通过配置优化NiFi性能",O:18,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/019-NIFI%E9%87%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0.html",{loader:()=>A(()=>import("./019-NIFI里的数据库连接池.html-DL8_sf00.js"),__vite__mapDeps([36,1])),meta:{d:15995232e5,l:"2020年9月8日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>通常我们在NIFI里最常见的使用场景就是读写关系型数据库，一些组件比如GenerateTableFetch、ExecuteSQL、PutSQL、ExecuteSQLRecord、PutDatabaseRecord等等，都会有一个属性配置大概叫<code>Database Connection Pooling Service</code>的，对应的接口是<code>DBCPService</code>，其实现类有：HiveConnectionPool DBCPConnectionPool DBCPConnectionPoolLookup。我们用的最多的就是DBCPConnectionPool。具体怎么配置这里就不赘述了，看对应的Controller Service文档就可以了。</p>
`,r:{minutes:6.31,words:1892},t:"NIFI里的数据库连接池",O:19,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/020-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8NIFI%E9%87%8C%E7%9A%84Record.html",{loader:()=>A(()=>import("./020-为什么建议使用NIFI里的Record.html-BRIkcun9.js"),__vite__mapDeps([37,1])),meta:{d:1605744e6,l:"2020年11月19日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>引子</h2>
<p>许多第一次接触使用NIFI的同学在同步关系型数据库的某一张表的时候，可能会拖拽出类似于下面的一个流程。</p>
<figure><figcaption></figcaption></figure>
<p>这个流程大体的作用就是：监听增量字段并生成查询SQL，执行SQL，转换成JSON数据，将JOSN转换成插入SQL语句，在目标库执行SQL。</p>
`,r:{minutes:3.56,words:1068},t:"建议使用NIFI里的Record",O:20,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/021-NIFI%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81.html",{loader:()=>A(()=>import("./021-NIFI贡献代码.html-CEdPsbjW.js"),__vite__mapDeps([38,1])),meta:{d:15911424e5,l:"2020年6月3日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>简介：根据个人的一些提交代码的经历,分享一下给Apache社区贡献代码的小经验。</p>
`,r:{minutes:3.8,words:1139},t:"如何给NIFI贡献代码",O:21,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/022-NIFI%E5%BC%80%E5%90%AFHTTPS.html",{loader:()=>A(()=>import("./022-NIFI开启HTTPS.html-CCfYeumE.js"),__vite__mapDeps([39,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>前言：Apache NIFI是自带用户验证、权限验证模块的，对用户和权限的模块都有详细的设计和划分。但默认配置下我们使用的是NIFI的HTTP服务，HTTP模式下，NIFI是不启用用户管理和权限管理模块的。</p>
<p>本文就带领大家来早本地开发环境下，配置NIFI的HTTPS模式，启用用户和权限模块，以下为示例说明，先不做原理阐述。</p>
`,r:{minutes:2.7,words:811},t:"NIFI开启HTTPS",O:22,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/023-ExecuteScript%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B.html",{loader:()=>A(()=>import("./023-ExecuteScript脚本教程.html-BVIobfcC.js"),__vite__mapDeps([40,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>本文通过Groovy，Jython，Javascript(Nashorn)和JRuby中的代码示例，介绍了有关如何使用Apache NiFi处理器ExecuteScript完成某些任务的各种方法。本文中的内容包括：</p>
`,r:{minutes:26.96,words:8088},t:"ExecuteScript组件脚本使用教程",O:23,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/024-%E5%86%85%E5%AE%B9%E5%AD%98%E5%82%A8%E5%BA%93%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./024-内容存储库原理.html-CrkYvqqW.js"),__vite__mapDeps([41,1])),meta:{a:"张诚",d:16142976e5,l:"2021年2月26日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Content Repository</h2>
<p>内容存储库就是本地存储所有FlowFiles内容的地方，通常是三个存储库中最大的。该存储库利用不变性和写时复制来最大提升读写速度和保证线程安全性。Content Repo的核心设计是将FlowFile的内容保存在磁盘上，并仅在需要时才将其读入JVM内存。 这使NiFi可以处理大量小的对象，而无需生产者和消费者处理器将完整的对象保存在内存中。因此，在不损害内存的情况下，非常容易执行诸如拆分，聚合和转换非常大的对象之类的操作。</p>
<p>与JVM Heap具有垃圾回收过程一样，当需要空间时可以回收无法访问的对象，在NiFi中存在一个专用线程来分析内容存储库中未使用的内容。将FlowFile的内容标识为不再使用后，它将被删除或存档。如果在<code>nifi.properties</code>中启用了归档，则FlowFile的内容将一直存在于Content Repo中，直到过期（一定时间后删除）或由于Content Repo占用太多空间而将其删除。</p>`,r:{minutes:11.42,words:3427},t:"内容存储库原理",O:24,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/025-FlowFile%E5%AD%98%E5%82%A8%E5%BA%93%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./025-FlowFile存储库原理.html-B-QwnnCC.js"),__vite__mapDeps([42,1])),meta:{a:"张诚",d:16145568e5,l:"2021年3月1日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>FlowFile Repository</h2>
<p>系统正在积极处理的FlowFiles保存在JVM内存中的Hash Map中。 这使它们的处理效率非常高，但是由于多种原因，例如断电，内核崩溃，系统升级和维护周期，因此需要一种辅助机制来在整个进程重新启动中提供数据的持久性。 FlowFile存储库是系统中当前存在的每个FlowFiles的元数据的<code>Write-Ahead Log</code>（或数据记录）。 该FlowFile元数据包括与FlowFile相关联的所有attributes，指向FlowFile实际内容的指针（该内容存在于内容存储库中）以及FlowFile的状态，例如FlowFile所属的Connection/Queue。 预写日志为NiFi提供了处理重启和意外系统故障所需的弹性。</p>`,r:{minutes:12.13,words:3638},t:"FlowFile存储库原理",O:25,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/026-%E9%A2%84%E5%86%99%E6%97%A5%E5%BF%97(WAL).html",{loader:()=>A(()=>import("./026-预写日志(WAL).html-BTGlRwwU.js"),__vite__mapDeps([43,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>NiFi使用预写日志来跟踪FlowFiles（即数据记录）在系统中流动时的变化。该预写日志跟踪FlowFiles本身的更改，例如FlowFile的属性（组成元数据的键/值对）及其状态，再比如FlowFile所属的Connection /Queue。</p>
<p>在这里，我们将描述用于实现此功能的实现细节和算法。</p>
<h2>什么是预写日志</h2>
<p>预写日志（WAL,Write Ahead Log）是关系型数据库中用于实现事务性和持久性的一系列技术，ARIES是WAL系列技术常用的算法。简单来说就是，做一个操作之前先讲这件事情记录下来。</p>
<h2>为什么要使用WAL</h2>`,r:{minutes:4.77,words:1432},t:"NiFi的Write-Ahead Log",O:26,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/027-Provenance%E5%AD%98%E5%82%A8%E5%BA%93%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./027-Provenance存储库原理.html-CLgLp3OQ.js"),__vite__mapDeps([44,1])),meta:{a:"张诚",d:16146432e5,l:"2021年3月2日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Provenance Repository</h2>
<p>在Provenance存储库中存储每个FlowFile的历史记录。此历史记录用于提供每个数据的数据沿袭（也称为产销监管链）。每次为FlowFile发生事件（创建，分叉，克隆，修改FlowFile等）时，都会创建一个新的Provenance事件。这个出处事件是流文件的快照，因为它看起来就是在那个时间点存在的流。创建Provenance事件后，它将复制所有FlowFile的属性和指向FlowFile内容的指针，并将其与FlowFile的状态（例如其与其他出处事件的关系）聚合到Provenance存储库里。该快照将不会更改，直到过期。根据“nifi.properties”文件中的指定，Provenance存储库将在完成后的一段时间内保留所有这些来源事件。</p>`,r:{minutes:10.98,words:3293},t:"Provenance存储库原理",O:27,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/028-NIFI%E6%9E%B6%E6%9E%84.html",{loader:()=>A(()=>import("./028-NIFI架构.html-GAzEHvyH.js"),__vite__mapDeps([45,1])),meta:{a:"张诚",d:16146432e5,l:"2021年3月2日",c:"ApacheNIFI教程",g:"NIFI",e:`<figure><figcaption></figcaption></figure>
<p>NiFi在主机操作系统上的JVM中执行。JVM上NiFi的主要组件如下：</p>
<h2>Web Server</h2>
<p>web服务器的目的是托管NiFi基于HTTP的命令和控制API。</p>
<h2>Flow Controller</h2>
<p>流量控制器是操作的大脑。它为运行扩展提供线程，并管理扩展何时接收要执行的资源的时间表。</p>
<h2>Extensions</h2>
<p>其他文档中描述了各种类型的NiFi扩展。这里的关键是扩展在JVM中操作和执行。</p>
<h2>FlowFile Repository</h2>`,r:{minutes:1.94,words:583},t:"NIFI架构",O:28,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/029-NIFI%E4%BA%8B%E5%8A%A1%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./029-NIFI事务原理.html-D6VMEiL9.js"),__vite__mapDeps([46,1])),meta:{a:"张诚",d:1615248e6,l:"2021年3月9日",c:"ApacheNIFI教程",g:"NIFI",e:"<p>Apache NIFI 处理数据的最小单位叫<code>FlowFile</code>，每一次调度里所处理的<code>FlowFile</code>(有可能是多个，即为<code>批</code>)是支持事务的，就是说：要么我完成处理FlowFile这个动作，得到了结果，要么不完成。从宏观角度可以将这个过程看成一个原子操作。</p>\n<p>而实现这个事务机制的底层支撑就是<code>内容存储库``流文件内容的不变性</code>和<code>Copy-On-Write</code>以及<code>FlowFile存储库的预写日志</code>。</p>\n<p>本篇我们将所有一切串联起来，看一下NIFI是如何实现它的事务机制的。</p>",r:{minutes:6.82,words:2045},t:"NIFI事务原理",O:29,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/030-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B.html",{loader:()=>A(()=>import("./030-数据库字段类型.html-DUwAlyI9.js"),__vite__mapDeps([47,1])),meta:{a:"张诚",d:1623888e6,l:"2021年6月17日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>NiFi读写数据库过程</h2>
<figure><figcaption></figcaption></figure>
<p>NIFI对关系型数据库的读写大多会经历以下的过程</p>
<ol>
<li>根据执行的查询SQL结果元数据，获取avro schema信息</li>
<li>根据avro schema将查询的Result转成record(json avro csv等等，过程中会进行一些数据的转换)</li>
<li>用户可以对record进行一些数据处理</li>
<li>根据目标表的元数据信息，record的schema信息，拼接参数化SQL，设置参数化value(过程中会进行一些数据的转换)</li>
</ol>`,r:{minutes:11.12,words:3335},t:"NiFi支持的读写数据库字段类型",O:30,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/031-1.14.html",{loader:()=>A(()=>import("./031-1.14.html-CGqyx5Ze.js"),__vite__mapDeps([48,1])),meta:{a:"张诚",d:16274304e5,l:"2021年7月28日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>Version 1.14.0的重大功能更新</h2>
<p>Apache NiFi 1.14.0 版是一个增加了重要的功能、改进和bug修复的版本，发布日期2021年7月14日。</p>
<p>1.14.0 版本的亮点包括：</p>
<ol>
<li>NiFi now starts up in a mode enabling security features by default.  This means NiFi starts up with HTTPS only now instead of HTTP and it requires a specific auto generated username and password to login or the user can explicitly set the username and password which will be used via the provided toolkit.  Gone are the days of firing a default NiFi and it is accessible via HTTP without authentication.  That convenience was wonderful but we found far too many users did this and left wide open NiFi nodes and even clusters accessible on the Internet.  Our secure configuration by default model generates a self-signed server certificate which obviously means that itself isn't very trustworthy for any given client so your browser will likely flag this but we're taking reasonable steps in the right direction.  All the normal recommended security steps are still recommended to ensure a fully secure setup but the default mode is now far better than ever before.</li>
<li>We have merged the codebases of the Apache NiFI, Apache NiFI MiNiFI Java, and Apache NiFi Registry codebases.  This means every time we release Apache NiFi we are releasing NiFi, MiNiFi Java, and the Registry all at once and with fully aligned codebases.  This means more releases of these components and better compatibility guarantees and easier maintenance and usage and security.</li>
<li>NiFi's Jetty server can be configured to auto detect keystore changes and reload.</li>
<li>Now support Azure Active Directory user group provider.</li>
<li>Now support AWS Kinesis Stream fetching.</li>
<li>Now provide an ASN.1 record reader.</li>
<li>Can now right click on a processor and tell it to 'Run Once' - hugely beneficial for common user experience patterns.</li>
<li>New EncryptContentPGP and DecryptContentPGP processors intended to replace PGP handling in EncryptContent</li>
<li>Can now use Hashicorp Vault encryption for NiFi properties.</li>
<li>Now support the usage of an HDFS/S3/etc.. blob storage to hot load NARs.</li>
<li>100s of other bugs and improvements and features...</li>
</ol>`,r:{minutes:4.87,words:1461},t:"NIFI 1.14",O:31,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/032-CaptureChangeMySQL.html",{loader:()=>A(()=>import("./032-CaptureChangeMySQL.html-DFgTL5kE.js"),__vite__mapDeps([49,1])),meta:{a:"张诚",d:16288128e5,l:"2021年8月13日",c:"ApacheNIFI教程",g:"NIFI",e:'<p>在<a href="/ApacheNIFI%E6%95%99%E7%A8%8B/004-%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95.html" target="_blank">数据抽取的常见理论方法</a>一文中，我们历数了各种的数据抽取的方式，其中基于查询式的抽取方式侵入性最小，但往往无法满足我们的需求，触发器的方式就不说了(嗯，有可能你一说用触发器，领导们脸色就变了，其实在少量的同步数据抽取采集我感觉反而触发器性价比基于日志的会更高)，最后就是基于日志的。基于日志的数据采集我开发和研究过MySQL的binlog日志和Oracle的redo日志，这篇文章就一起研究一下NIFI中的基于binlog日志的MySQL实时采集组件<code>CaptureChangeMySQL</code>。</p>',r:{minutes:4.52,words:1357},t:"CaptureChangeMySQL",O:32,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/033-%E6%B5%81%E7%A8%8B%E5%91%8A%E8%AD%A6.html",{loader:()=>A(()=>import("./033-流程告警.html-DMvZWOfo.js"),__vite__mapDeps([50,1])),meta:{a:"张诚",d:16400448e5,l:"2021年12月21日",c:"ApacheNIFI教程",g:"NIFI",e:`<p>如何不写代码，只利用NIFI的组件，以及免费的资源，实现流程组件报错微信告警的功能？</p>
<p>先看效果图</p>
<figure><figcaption></figcaption></figure>
<h2>NiFi Bulletin Board</h2>
<p>组件<code>Bulletin Level</code>可设置对应的日志级别(比如下面截图用到的LogMessage设置成warn)，组件输出的相应级别的日志会相应发送到<code>Bulletin Board</code>。</p>
<figure><figcaption></figcaption></figure>
`,r:{minutes:2.6,words:779},t:"NIFI流程微信告警",O:33,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/034-JWT.html",{loader:()=>A(()=>import("./034-JWT.html-BJKJA_Ah.js"),__vite__mapDeps([51,1])),meta:{a:"张诚",d:16425504e5,l:"2022年1月19日",c:"ApacheNIFI教程",g:"NIFI",e:`<blockquote>
<p>大部分文章译自原文：https://exceptionfactory.com/posts/2021/10/23/improving-jwt-authentication-in-apache-nifi/
同时结合译文，参照NIFI(1.15)源码进行分析讲述举例说明</p>
</blockquote>
<h2>本文目的</h2>
<ol>
<li>深入对Apache NiFi的新版JWT身份验证深入理解。</li>
<li>为自定义外部应用程序访问使用了JWT身份验证的NIFI服务提供参考和开发依据。</li>
</ol>
<h2>背景知识</h2>
<p><code>JSON Web Tokens</code>为众多Web应用程序和框架提供了灵活的身份验证和授权标准。<a href="https://datatracker.ietf.org/doc/html/rfc7519" target="_blank" rel="noopener noreferrer">RFC 7519</a>概述了JWT的基本要素，枚举了符合公共声明属性的所需编码，格式和已注册的<code>声明</code>属性名称(payload里属性称为<code>声明</code>)。<a href="https://datatracker.ietf.org/doc/html/rfc7515" target="_blank" rel="noopener noreferrer">RFC 7515</a>中的JSON Web签名和<a href="https://datatracker.ietf.org/doc/html/rfc7518" target="_blank" rel="noopener noreferrer">RFC 7518</a>中的JSON Web算法描述了JWT的支持标准，其他的比如<a href="https://en.wikipedia.org/wiki/OAuth" target="_blank" rel="noopener noreferrer">OAuth 2.0</a>框架的安全标准构建在这些支持标准上，就可以在各种服务中启用授权。</p>`,r:{minutes:20.54,words:6162},t:"Apache NiFi中的JWT身份验证",O:34,y:"a"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/037-MySQL%E5%85%A8%E5%AD%97%E6%AE%B5%E6%B5%8B%E8%AF%95.html",{loader:()=>A(()=>import("./037-MySQL全字段测试.html-QjOOCYAM.js"),__vite__mapDeps([52,1])),meta:{a:"张诚",d:16444512e5,l:"2022年2月10日",c:"ApacheNIFI教程",g:"NIFI",e:`<h2>准备</h2>
<p>MySQL 5.7</p>
<div class="language-log line-numbers-mode" data-highlighter="shiki" data-ext="log" data-title="log" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">jdbc:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">mysql://ip:3306/zc?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;tinyInt1isBit=false&amp;useSSL=false</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:7.98,words:2393},t:"MySQL全字段读写测试(NIFI 1.15.3)",O:37,y:"a"}}],["/IO%E6%B5%81(java)/01-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81.html",{loader:()=>A(()=>import("./01-输入输出流.html-DkIEcDpk.js"),__vite__mapDeps([53,1])),meta:{a:"张诚",d:16146432e5,l:"2021年3月2日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54292148<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<h2>Java流类图结构：</h2>
<figure><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwMTA1MTgyMzQyMjI3" alt="这里写图片描述" tabindex="0" loading="lazy"><figcaption>这里写图片描述</figcaption></figure>`,r:{minutes:6.76,words:2029},t:"一 输入输出流",O:1,y:"a"}}],["/IO%E6%B5%81(java)/02-File.html",{loader:()=>A(()=>import("./02-File.html-BujAumsr.js"),__vite__mapDeps([54,1])),meta:{a:"张诚",d:16146432e5,l:"2021年3月2日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54581478<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<p>Java File类的功能非常强大，利用java基本上可以对文件进行所有操作。<br>
首先来看File类的构造函数的源码</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * Internal constructor for already-normalized pathname strings.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pathname</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> prefixLength) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pathname</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> prefixLength</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * Internal constructor for already-normalized pathname strings.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * The parameter order is used to disambiguate this method from the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * public(File, String) constructor.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> child</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> parent) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, child);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * Creates a new &lt;code&gt;File&lt;/code&gt; instance by converting the given</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * pathname string into an abstract pathname.  If the given string is</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * the empty string, then the result is the empty abstract pathname.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   pathname</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  A pathname string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  NullPointerException</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *          If the &lt;code&gt;pathname&lt;/code&gt; argument is &lt;code&gt;null&lt;/code&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pathname) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (pathname </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NullPointerException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(pathname);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">prefixLength</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   parent</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  The parent pathname string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   child</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   The child pathname string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  NullPointerException</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *          If &lt;code&gt;child&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> child) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (child </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NullPointerException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (parent </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(parent),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                                   fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(child));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(child);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">prefixLength</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   parent</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  The parent abstract pathname</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   child</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   The child pathname string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  NullPointerException</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *          If &lt;code&gt;child&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> child) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (child </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> NullPointerException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (parent </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">                this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getDefaultParent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                                       fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(child));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">                this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                                       fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(child));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(child);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">prefixLength</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  uri</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *         An absolute, hierarchical URI with a scheme equal to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *         &lt;tt&gt;"file"&lt;/tt&gt;, a non-empty path component, and undefined</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *         authority, query, and fragment components</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  NullPointerException</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *          If &lt;tt&gt;uri&lt;/tt&gt; is &lt;tt&gt;null&lt;/tt&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  IllegalArgumentException</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *          If the preconditions on the parameter do not hold</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> uri) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // Check our many preconditions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isAbsolute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI is not absolute"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isOpaque</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI is not hierarchical"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> scheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getScheme</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> ((scheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">scheme</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equalsIgnoreCase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI scheme is not </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">file</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">\\"</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAuthority</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI has an authority component"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getFragment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI has a fragment component"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI has a query component"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> IllegalArgumentException</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"URI path component is empty"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // Okay, now initialize</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        p </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">fromURIPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(p);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">separatorChar</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '/'</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">            p </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">separatorChar</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(p);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">prefixLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">prefixLength</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.93,words:2080},t:"二 File",O:2,y:"a"}}],["/IO%E6%B5%81(java)/03-%E7%BC%93%E5%86%B2%E6%B5%81BufferedInputStream%E4%B8%8EBufferedOutputStream.html",{loader:()=>A(()=>import("./03-缓冲流BufferedInputStream与BufferedOutputStream.html-BcePuK1v.js"),__vite__mapDeps([55,1])),meta:{a:"张诚",d:16147296e5,l:"2021年3月3日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54894451<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>InputStream</span></span>
<span class="line"><span>|__FilterInputStream</span></span>
<span class="line"><span>        |__BufferedInputStream</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.35,words:2205},t:"三 缓冲流BufferedInputStream与BufferedOutputStream",O:3,y:"a"}}],["/IO%E6%B5%81(java)/04-%E7%BC%93%E5%86%B2%E6%B5%81BufferedReader%E4%B8%8EBufferedWriter.html",{loader:()=>A(()=>import("./04-缓冲流BufferedReader与BufferedWriter.html-dEJYQ6FK.js"),__vite__mapDeps([56,1])),meta:{a:"张诚",d:16147296e5,l:"2021年3月3日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54911237<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<ul>
<li>类的继承关系</li>
</ul>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Reader</span></span>
<span class="line"><span>|__ BufferedReader、StringReader、InputStreamReader</span></span>
<span class="line"><span>                                      |__ FileReader</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.05,words:614},t:"四 缓冲流BufferedReader与BufferedWriter",O:4,y:"a"}}],["/IO%E6%B5%81(java)/05-%E8%BD%AC%E6%8D%A2%E6%B5%81InputStreamReader%E4%B8%8EOutputStreamWriter.html",{loader:()=>A(()=>import("./05-转换流InputStreamReader与OutputStreamWriter.html-CbYiWe1q.js"),__vite__mapDeps([57,1])),meta:{a:"张诚",d:16147296e5,l:"2021年3月3日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54923506<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<h3>类的继承关系</h3>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Reader</span></span>
<span class="line"><span>|__ BufferedReader、StringReader、InputStreamReader</span></span>
<span class="line"><span>                                      |__ FileReader</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.96,words:887},t:"五 转换流InputStreamReader与OutputStreamWriter",O:5,y:"a"}}],["/IO%E6%B5%81(java)/06-ByteArrayInputStream%E4%B8%8EByteArrayOutputStream.html",{loader:()=>A(()=>import("./06-ByteArrayInputStream与ByteArrayOutputStream.html-C1NNAcHg.js"),__vite__mapDeps([58,1])),meta:{a:"张诚",d:16147296e5,l:"2021年3月3日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54946762<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<h3>类的继承关系</h3>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>InputStream</span></span>
<span class="line"><span>|__ ByteArrayInputStream</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.31,words:393},t:"六 ByteArrayInputStream与ByteArrayOutputStream",O:6,y:"a"}}],["/IO%E6%B5%81(java)/07-CommonsIO2.5-FileUtils.html",{loader:()=>A(()=>import("./07-CommonsIO2.5-FileUtils.html-A0Vkkfp6.js"),__vite__mapDeps([59,1])),meta:{a:"张诚",d:16147296e5,l:"2021年3月3日",c:"Java",e:`<blockquote>
<p>转自：http://blog.csdn.net/zhaoyanjun6/article/details/54972773<br>
本文出自<a href="http://blog.csdn.net/zhaoyanjun6/" target="_blank" rel="noopener noreferrer">【赵彦军的博客】</a></p>
</blockquote>
<p>在上面的几篇文章中，介绍了IO的常规用法，今天介绍<code>Commons IO</code>框架的使用。</p>
<h3>Commons IO简介</h3>
<p>Apache Commons IO是Apache基金会创建并维护的Java函数库。它提供了许多类使得开发者的常见任务变得简单，同时减少重复代码，这些代码可能遍布于每个独立的项目中，你却不得不重复的编写。这些类由经验丰富的开发者维护，对各种问题的边界条件考虑周到，并持续修复相关bug。最新版本2.5</p>`,r:{minutes:8.74,words:2621},t:"七 Commons IO 2.5-FileUtils",O:7,y:"a"}}],["/JAVA/ByteArrayOutputStream.html",{loader:()=>A(()=>import("./ByteArrayOutputStream.html-BigUnRFH.js"),__vite__mapDeps([60,1])),meta:{d:16146432e5,l:"2021年3月2日",c:"Java",e:`<h2>什么是Java ByteArrayOutputStream</h2>
<p>ByteArrayOutputStream 对byte类型数据进行写入的类 相当于一个中间缓冲层，将类写入到文件等其他outputStream。它是对字节进行操作，属于内存操作流</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> ByteArrayOutputStream</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> OutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.07,words:621},t:"ByteArrayOutputStream",y:"a"}}],["/JAVA/Java%20SPI%E6%9C%BA%E5%88%B6.html",{loader:()=>A(()=>import("./Java SPI机制.html-CZewdyc6.js"),__vite__mapDeps([61,1])),meta:{d:15944256e5,l:"2020年7月11日",c:"Java",e:`<h2>什么是SPI</h2>
<p>SPI全称Service Provider Interface，翻译过来是服务提供接口。它是jdk内置的一种服务发现机制，它可以让服务定义与实现分离、解耦，大大提升了程序的扩展性。Java SPI 实际上是“基于接口的编程＋策略模式＋配置文件”组合实现的动态加载机制，提供了通过interface寻找implement的方法。</p>
<p>使用Java SPI需要符合的约定：</p>
<ul>
<li>Service provider提供Interface的具体实现后，在目录META-INF/services下的文件(以Interface全路径命名)中添加具体实现类的全路径名。</li>
<li>接口实现类的jar包存放在所使用的类加载器能找到的地方。</li>
<li>应用程序使用ServiceLoader动态加载实现类(根据目录META-INF/services下的配置文件找到实现类的全限定名并调用classloader来加载实现类到JVM)。</li>
<li>SPI的实现类必须具有无参数的构造方法。</li>
</ul>`,r:{minutes:3.86,words:1159},t:"Java SPI机制",y:"a"}}],["/JAVA/Java8_JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html",{loader:()=>A(()=>import("./Java8_JVM内存模型.html-DMtptNoS.js"),__vite__mapDeps([62,1])),meta:{d:16353792e5,l:"2021年10月28日",c:"JVM",e:`<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>
<h2>Program Counter Register</h2>
<p>Register 的命名源于CPU的寄存器，CPU只有把数据装载到寄存器才能够运行。</p>
<p>寄存器存储指令相关的现场信息，由于CPU时间片轮限制，众多线程在并发执行过程中，任何一个确定的时刻，一个处理器或者多核处理器中的一个内核，只会执行某个线程中的一条指令。这样必然导致经常中断或恢复，如何保证分毫无差呢?。</p>
<p>每个线程在创建后，都会产生自己的程序计数器和栈帧，程序计数器用来存放执行指令的偏移量和行号指示器等，线程执行或恢复都要依赖程序计数器。程序计数器在各个线程之间互不影响，此区域也不会发生内存溢出异常。</p>`,r:{minutes:23.08,words:6925},t:"Java8_JVM内存模型",y:"a"}}],["/JAVA/Java%E4%B8%ADatomic%E5%8C%85%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E7%B1%BB%E6%80%BB%E7%BB%93.html",{loader:()=>A(()=>import("./Java中atomic包中的原子操作类总结.html-BXf2lUJt.js"),__vite__mapDeps([63,1])),meta:{d:15904512e5,l:"2020年5月26日",c:"Java",e:`<h2>原子操作类介绍</h2>
<p>在并发编程中很容易出现并发安全的问题，有一个很简单的例子就是多线程更新变量i=1,比如多个线程执行i++操作，就有可能获取不到正确的值，而这个问题，<strong>最常用的方法是通过Synchronized进行控制来达到线程安全的目的</strong>。但是由于<strong>synchronized是采用的是悲观锁策略</strong>，并<strong>不是特别高效</strong>的一种解决方案。实际上，在J.U.C下的atomic包提供了一系列的操作简单，性能高效，并能保证线程安全的类去更新基本类型变量，数组元素，引用类型以及更新对象中的字段类型。atomic包下的这些类都是采用的是<strong>乐观锁策略去原子更新数据，在java中则是使用CAS操作具体实现</strong>。</p>`,r:{minutes:9.48,words:2843},t:"Java中atomic包中的原子操作类总结",y:"a"}}],["/JAVA/Java%E4%B8%AD%E7%9A%84%E9%94%81.html",{loader:()=>A(()=>import("./Java中的锁.html-D1P7IGFL.js"),__vite__mapDeps([64,1])),meta:{a:"Jakob Jenkov",d:16149024e5,l:"2021年3月5日",c:"Java",e:`<p>原文:http://tutorials.jenkov.com/java-concurrency/locks.html</p>
<p>锁像synchronized同步块一样，是一种线程同步机制，但比Java中的synchronized同步块更复杂。因为锁（以及其它更高级的线程同步机制）是由synchronized同步块的方式实现的，所以我们还不能完全摆脱synchronized关键字（译者注：这说的是Java 5之前的情况）。</p>
<p>自Java 5开始，java.util.concurrent.locks包中包含了一些锁的实现，因此你不用去实现自己的锁了。但是你仍然需要去了解怎样使用这些锁，且了解这些实现背后的理论也是很有用处的。可以参考我对java.util.concurrent.locks.Lock的介绍，以了解更多关于锁的信息。</p>`,r:{minutes:6.21,words:1862},t:"Java中的锁",y:"a"}}],["/JAVA/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./Java内存模型原理.html-DFhqpEh6.js"),__vite__mapDeps([65,1])),meta:{d:15904512e5,l:"2020年5月26日",c:"Java",e:`<h2>一、内存模型产生背景</h2>
<p>在介绍 Java 内存模型之前，我们先了解一下物理计算机中的并发问题，理解这些问题可以搞清楚内存模型产生的背景。</p>
<p>物理机遇到的并发问题与虚拟机中的情况有不少相似之处，物理机的解决方案对虚拟机的实现有相当的参考意义。</p>
<h3>1.物理机的并发问题</h3>
<p><strong>硬件的效率问题</strong></p>
<p>计算机处理器处理绝大多数运行任务都不可能只靠处理器“计算”就能完成，处理器至少需要与内存交互，如读取运算数据、存储运算结果，这个 I/O 操作很难消除(无法仅靠寄存器完成所有运算任务)。</p>
<p>由于计算机的存储设备与处理器的运算速度有几个数量级的差距，为了避免处理器等待缓慢的内存完成读写操作，现代计算机系统通过加入一层读写速度尽可能接近处理器运算速度的高速缓存。</p>`,r:{minutes:38.86,words:11659},t:"Java内存模型原理",y:"a"}}],["/JAVA/Java%E5%8F%8D%E5%B0%84.html",{loader:()=>A(()=>import("./Java反射.html-ClDKXSwe.js"),__vite__mapDeps([66,1])),meta:{d:15939072e5,l:"2020年7月5日",c:"Java",e:`<p>有了反射，我们的Java世界才变得更加多姿多彩。</p>
<h2>Java反射是什么</h2>
<p>Java的反射（reflection）机制是指在程序的<code>运行状态</code>中，可以构造任意一个类的对象，可以了解任意一个对象所属的类，可以了解任意一个类的成员变量和方法，可以调用任意一个对象的属性和方法。<code>这种动态获取程序信息以及动态调用对象的功能称为Java语言的反射机制</code>。反射被视为动态语言的关键。</p>
<p>我理解的Java反射的原理就是获取Class对象然后使用java.lang.reflect里提供的方法操作Class对象，Class与java.lang.reflect构成了java的反射技术。</p>`,r:{minutes:22.94,words:6881},t:"java反射原理",y:"a"}}],["/JAVA/Java%E5%AF%BC%E5%85%A5%E8%AF%AD%E5%8F%A5%E4%B8%AD%E4%B8%8D%E5%AE%9C%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6.html",{loader:()=>A(()=>import("./Java导入语句中不宜使用通配符.html-C-dLcDYP.js"),__vite__mapDeps([67,1])),meta:{d:15907104e5,l:"2020年5月29日",c:"Java",e:`<ol>
<li>它有助于识别类名冲突：在不同包中具有相同名称的两个类。这可以用*import。</li>
<li>它使依赖关系变得明确，并且让代码的可读性变强。</li>
<li>它能加快编译速度，因为编译器不需要搜索整个包来识别依赖项，尽管这在现代编译器中通常不是什么大问题。</li>
<li>使用现代IDE可以将显式导入的不便方面降至最低。 大多数IDE允许您折叠导入部分，因此它不会妨碍，在需要时自动填充导入，并自动识别未使用的导入以帮助清除它们。</li>
</ol>
<p>所以显式导入作为编码标准的一部分</p>
`,r:{minutes:.69,words:206},t:"Java导入语句中不宜使用通配符",y:"a"}}],["/JAVA/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.html",{loader:()=>A(()=>import("./Java类加载器.html-CNw9guIa.js"),__vite__mapDeps([68,1])),meta:{d:15943392e5,l:"2020年7月10日",c:"Java",e:`<h2>什么是类加载器</h2>
<p>通过一个类的全限定名来获取描述此类的二进制字节流这个动作放到Java虚拟机外部去实现，以便让应用程序自己决定如何去获取所需要的类。实现这个动作的代码模块称为“类加载器”。</p>
<h2>有哪几种类加载器</h2>
<p>JVM预定义的三种类型类加载器：</p>
<ul>
<li>启动(Bootstrap)类加载器(BootstrapClassLoader)：是用本地代码实现的类加载器，它负责将 %JRE_HOME%/lib下面的类库加载到内存中（比如rt.jar、resources.jar、charsets.jar、class文件等等）。另外需要注意的是可以通过启动jvm时指定-Xbootclasspath和路径来改变Bootstrap ClassLoader的加载目录。由于引导类加载器涉及到虚拟机本地实现细节，开发者无法直接获取到启动类加载器的引用，所以不允许直接通过引用进行操作。</li>
<li>标准扩展(Extension)类加载器：是由ExtClassLoader（sun.misc.Launcher$ExtClassLoader）实现的。它负责将JRE/lib/ext或者由系统变量java.ext.dir指定位置中的类库加载到内存中。开发者可以直接使用标准扩展类加载器。</li>
<li>系统(System)类加载器：是由AppClassLoader（sun.misc.Launcher$AppClassLoader）实现的。它负责将系统类路径（CLASSPATH）中指定的类库加载到内存中。开发者可以直接使用系统类加载器。</li>
</ul>`,r:{minutes:7.46,words:2237},t:"Java类加载器",y:"a"}}],["/JAVA/Java%E9%87%8C%E5%B8%A6%E6%A0%87%E7%AD%BE%E7%9A%84break%E5%92%8Ccontinue.html",{loader:()=>A(()=>import("./Java里带标签的break和continue.html-BHy4jlAO.js"),__vite__mapDeps([69,1])),meta:{d:15868224e5,l:"2020年4月14日",c:"Java",e:`<p>break和continue是老生常谈的东西，break是终止这层循环，包括之后的本层循环，continue是终止本次循环的语句，继续之后的本层循环。</p>
<p>在只有一层循环的时候，带标签和不带标签是没有区别的，以下都用break做试验。</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">[] args) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"i = "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> j</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"j = "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> j);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            break</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> tag</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.19,words:356},t:"Java里带标签的break和continue",y:"a"}}],["/JAVA/Jvm-dump-jstack-jmap-jstat.html",{loader:()=>A(()=>import("./Jvm-dump-jstack-jmap-jstat.html-Ou5FntSR.js"),__vite__mapDeps([70,1])),meta:{d:15868224e5,l:"2020年4月14日",c:"Java",e:`<p>这个问题阿里经常问，参考：<a href="https://www.cnblogs.com/aspirant/p/8625810.html" target="_blank" rel="noopener noreferrer">阿里面试</a></p>
<p>结论：</p>
<p><strong>(1)栈信息：<code>jstack &lt;pid&gt;</code>输出的信息</strong>。</p>
<p><strong>(2)堆信息：<code>jmap -dump &lt;pid&gt;</code>输出的文件</strong>，</p>
<p>(3)jstat查看gc情况，<code>jstat -gc  &lt;PID&gt; </code>间隔毫秒数 比如  <code>jstat -gc 12345 5000</code>  也就是每隔5秒打印进程12345的 gc情况</p>`,r:{minutes:8.05,words:2414},t:"Jvm dump jstack jmap jstat",y:"a"}}],["/JAVA/java%E6%B3%A8%E8%A7%A3.html",{loader:()=>A(()=>import("./java注解.html-Dc4jfB0f.js"),__vite__mapDeps([71,1])),meta:{d:15863904e5,l:"2020年4月9日",c:"Java",e:`<p>注解，也叫元数据。一种代码级别的说明，在JDK1.5之后引入的特性，与类、接口、枚举同一层次。可以声明在包、类、字段、方法、局部变量、方法参数等前面，来对这些元素进行说明，注释等。</p>
<p>作用分类：</p>
<ol>
<li>编写文档：通过代码里的标识的元数据生成文档【生成文档doc文档】</li>
<li>代码分析：通过代码里的标识的元数据对代码进行分析【使用反射】</li>
<li>编译检查：通过代码里的标识的元数据让编译器能过实现基本的编译检查【Override】</li>
</ol>
<p>java提供了四个元注解，所谓元注解就是负责注解其他注解。</p>
<ol>
<li>@Target ：规定注解所修饰的对象范围。
<ol>
<li>ElementType.CONSTRUCTIR;    构造器声明</li>
<li>ElementType.FIELD;     成员变量，对象，属性（包括enum实例)</li>
<li>ElementType.LOCAL_VARIABLE;    局部变量声明</li>
<li>ElementType.METHOD ; 方法声明</li>
<li>ElementType.PACKAGE; 包声明</li>
<li>ElementType.PARAMETER;参数声明</li>
<li>ElementType.TYPE; 类、接口（包括注解类型）或enum声明</li>
</ol>
</li>
<li>@Retention ： 表示注解的生命周期
<ol>
<li>RetentionPolicy.SOUREC: 在源文件中有效</li>
<li>RetentionPolicy.CLASS; 在class文件中有效</li>
<li>RetentionPolicy.RUNTIME;在运行时有效</li>
</ol>
</li>
<li>@Inherited : 标记注解，主要说明了一种继承性，意思是子类可以继承父类中的该注解（注意：只有当被贴上@Inherited标签的注解被用在类上的时候子类才能获得这个注解）。</li>
<li>@Documented ： 用于描述其它类型的annotation应该被作为被标注的程序成员的公共API,因此可以被例如javadoc此类的工具文档化。</li>
</ol>`,r:{minutes:1.4,words:419},t:"java注解",y:"a"}}],["/JAVA/web%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2.html",{loader:()=>A(()=>import("./web的发展历史.html-Ba2H4M-p.js"),__vite__mapDeps([72,1])),meta:{d:15956352e5,l:"2020年7月25日",c:"Java",e:`<h2>起因</h2>
<p>一开始我想看Spring Boot源码并写一些学习文章，然后发现我得先看Spring的代码。接着我又编译搭建了Spring的环境并结合书籍展开了学习，但是过程中又发现了很多疑问，不把这些疑问捋顺，心里很难受。</p>
<ul>
<li>怎么就使用了一个Spring-boot就起来了一个Web应用了？好，我可能自己会回答因为它内置了Tomcat/Jetty...容器的。</li>
<li>怎么仍一个war到Tomcat里，就部署起来了一个Web应用了？</li>
<li>我知道Servlet，以前大学里写过一点jsp、servlet，怎么就现在那样不用写了？</li>
<li>.....</li>
</ul>`,r:{minutes:29.22,words:8767},t:"WEB简史",y:"a"}}],["/JAVA/%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./代码设计原理.html-CC_Wj-Fh.js"),__vite__mapDeps([73,1])),meta:{d:15868224e5,l:"2020年4月14日",c:"Java",e:`<h2>代码设计原理</h2>
<ol>
<li>
<p>单一职责原则：一个类或者一个接口，最好只负责一项职责</p>
</li>
<li>
<p>里氏替换原则：子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法</p>
</li>
<li>
<p>依赖倒置原则：低层模块尽量都要有抽象类或者接口，或者两者都有</p>
</li>
<li>
<p>接口隔离原则：客户端不应该依赖它不需要的接口；一个类对另一个类的依赖应该建立在最小的接口上</p>
</li>
<li>
<p>迪米特法则：一个对象应该对其他对象保持最少的了解</p>
</li>
<li>
<p>开闭原则：一个软件实体如类、模版和函数应该对扩展，对修改关闭</p>
</li>
</ol>`,r:{minutes:.67,words:202},t:"代码设计原理",y:"a"}}],["/JAVA/%E4%BD%BF%E7%94%A8List.html",{loader:()=>A(()=>import("./使用List.html-pcsbNSd8.js"),__vite__mapDeps([74,1])),meta:{d:15869088e5,l:"2020年4月15日",c:"Java",e:`<p>在集合类中，<code>List</code>是最基础的一种集合：它是一种有序链表。</p>
<p><code>List</code>的行为和数组几乎完全相同：<code>List</code>内部按照放入元素的先后顺序存放，每个元素都可以通过索引确定自己的位置，<code>List</code>的索引和数组一样，从<code>0</code>开始。</p>
<p>数组和<code>List</code>类似，也是有序结构，如果我们使用数组，在添加和删除元素的时候，会非常不方便。例如，从一个已有的数组<code>{'A', 'B', 'C', 'D', 'E'}</code>中删除索引为<code>2</code>的元素：
</p>`,r:{minutes:6.93,words:2079},t:"使用List",y:"a"}}],["/JAVA/%E5%81%8F%E5%90%91%E9%94%81%E6%89%B9%E9%87%8F%E9%87%8D%E5%81%8F%E5%90%91%E4%B8%8E%E6%89%B9%E9%87%8F%E6%92%A4%E9%94%80.html",{loader:()=>A(()=>import("./偏向锁批量重偏向与批量撤销.html-D2t3d3jq.js"),__vite__mapDeps([75,1])),meta:{d:16117056e5,l:"2021年1月27日",c:"Java",e:`<blockquote>
<p>批量重偏向：当一个线程创建了大量对象并执行了初始的同步操作，后来另一个线程也来将这些对象作为锁对象进行操作，会导偏向锁重偏向的操作。</p>
</blockquote>
<blockquote>
<p>批量撤销：在多线程竞争剧烈的情况下，使用偏向锁将会降低效率，于是乎产生了批量撤销机制。</p>
</blockquote>
<blockquote>
<p>JVM的默认参数值:</p>
<ul>
<li>intx BiasedLockingBulkRebiasThreshold   = 20   默认偏向锁批量重偏向阈值</li>
<li>intx BiasedLockingBulkRevokeThreshold  = 40   默认偏向锁批量撤销阈值</li>
</ul>
</blockquote>`,r:{minutes:5.03,words:1508},t:"偏向锁批量重偏向与批量撤销",y:"a"}}],["/JAVA/%E5%88%B0%E5%BA%95%E4%BB%80%E4%B9%88%E6%98%AFclasspath.html",{loader:()=>A(()=>import("./到底什么是classpath.html-CdYFPwp_.js"),__vite__mapDeps([76,1])),meta:{d:16024608e5,l:"2020年10月12日",c:"Java",e:`<p>classpath是JVM用到的一个环境变量，它用来指示JVM如何搜索class。因为Java是编译型语言，源码文件是.java，而编译后的.class文件才是真正可以被JVM执行的字节码。因此，JVM需要知道，如果要加载一个abc.xyz.Hello的类，应该去哪搜索对应的Hello.class文件。所以，<code>classpath就是一组目录的集合</code>，它设置的搜索路径与操作系统相关。例如，在Windows系统上，用;分隔，带空格的目录用""括起来，可能长这样：</p>
<div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379">C:\\work\\project1\\bin</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">;C:\\shared;"D:\\My Documents\\project1\\bin"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:2.18,words:654},t:"到底什么是classpath?",y:"a"}}],["/JAVA/%E5%8A%A8%E6%89%8B%E4%BD%93%E9%AA%8CJVM%E4%B8%ADClass%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%94%AF%E4%B8%80%E6%80%A7.html",{loader:()=>A(()=>import("./动手体验JVM中Class对象的唯一性.html-kJacFTFg.js"),__vite__mapDeps([77,1])),meta:{d:15943392e5,l:"2020年7月10日",c:"Java",e:`<h2>概述</h2>
<p>本文不深究理论，不深究原理，从我们开发使用者的角度，动手实践，去体验一下JVM中，Class对象的唯一性与类加载器的关系。</p>
<h2>引入</h2>
<p>我们通常说：每个类，无论创建多少个实例，在JVM中都对应同一个Class对象。</p>
<p>其实这么说还是挺别扭的，首先是先有的Class对象，然后才有的类的实例。而且这么说其实也并不严谨，假如说我们有一个类的两个实例对象，而这两个实例对象在内存里对应的的class信息是由两个不同的类加载器加载的，也就是说这个时候这两个实例对应的就是两个不同的Class对象。Class对象的唯一性的确定因素之一就是加载它的类加载器。</p>`,r:{minutes:8.4,words:2520},t:"动手体验JVM中Class对象的唯一性",y:"a"}}],["/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93.html",{loader:()=>A(()=>import("./多线程基础知识总结.html-CK-0z8Na.js"),__vite__mapDeps([78,1])),meta:{d:15916608e5,l:"2020年6月9日",c:"Java",e:`<h2>基础概念</h2>
<p><strong>并发</strong>：在<strong>一段时间</strong>内多个任务同时执行，或者说是在一段很短的时间内可以执行多条程序指令，微观上看起来好像是可以同时运行多个进程，<strong>单核处理器</strong>就可以做到。</p>
<p><strong>并行</strong>：在<strong>同一时刻</strong>多个任务同时执行，或者说是在同一时刻可以执行多条程序指令，<strong>多核处理器</strong>才可以做到。</p>
<p><strong>单核处理器</strong>：顾名思义处理器只有一个逻辑核心，单核处理器并不是一个长久以来存在的概念，在近年来多核心处理器逐步普及之后，单核心的处理器为了与双核和四核对应而提出。要说明的一点是，目前大多数的操作系统教材中的单处理器都是指的单核处理器。</p>`,r:{minutes:8.52,words:2555},t:"多线程基础知识总结",y:"a"}}],["/JAVA/%E6%89%93%E5%8D%B0Java%E5%AF%B9%E8%B1%A1%E5%A4%B4.html",{loader:()=>A(()=>import("./打印Java对象头.html-BkSxnT2M.js"),__vite__mapDeps([79,1])),meta:{d:16116192e5,l:"2021年1月26日",c:"Java",e:`<h2>对象头形式</h2>
<p>JVM中对象头的方式有以下两种（以32位JVM为例）</p>
<h3>普通对象</h3>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">--------------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                     Object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Header</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bits)                  </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Mark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bits)         </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    Klass</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> bits) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-|</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.14,words:1541},t:"打印Java对象头",y:"a"}}],["/JAVA/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3Java%E9%94%81.html",{loader:()=>A(()=>import("./深入了解Java锁.html-DiXA5Vvl.js"),__vite__mapDeps([80,1])),meta:{d:16116192e5,l:"2021年1月26日",c:"Java",e:`<p>继<a href="/JAVA/%E6%89%93%E5%8D%B0Java%E5%AF%B9%E8%B1%A1%E5%A4%B4.html" target="_blank">打印Java对象头</a>，我们再深入探索一下Java锁。无锁状态我们就不说了，下面我们一一打印偏向锁、轻量锁，重量锁的对象头。</p>
<h2>打印偏向锁</h2>
<p>修改代码：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">[] args) throws InterruptedException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    synchronized</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> (a){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">ClassLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parseInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(a).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">toPrintable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.53,words:1358},t:"深入了解Java锁",y:"a"}}],["/JAVA/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%8E%BB%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6.html",{loader:()=>A(()=>import("./相对路径与绝对路径去读取文件.html-BI4NbWJs.js"),__vite__mapDeps([81,1])),meta:{d:16024608e5,l:"2020年10月12日",c:"Java",e:`<p>主要针对的是读取项目的配置文件。</p>
<h2>java.io读取文件</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> pom </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(path)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:2.28,words:685},t:"相对路径与绝对路径去读取文件",y:"a"}}],["/JAVA/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.html",{loader:()=>A(()=>import("./类加载机制.html-BIrrQz4Q.js"),__vite__mapDeps([82,1])),meta:{d:15945984e5,l:"2020年7月13日",c:"Java",e:`<h2>类加载机制</h2>
<p>Java虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型，这个过程被称作虚拟机的类加载机制。与那些在编译时需要进行连接的语言不同，在Java语言里面，类型的加载、连接和初始化过程都是在程序运行期间完成的，这种策略让Java语言进行提前编译会面临额外的困难，也会让类加载时稍微增加一些性能开销，但是却为Java应用提供了极高的扩展性和灵活性，Java天生可以动态扩展的语言特性就是依赖运行期动态加载和动态连接这个特点实现的。例如，编写一个面向接口的应用程序，可以等到运行时再指定其实际的实现类，用户可以通过Java预置的或自定义类加载器，让某个本地的应用程序在运行时从网络或其他地方上加载一个二进制流作为其程序代码的一部分。这种动态组装应用的方式目前已广泛应用于Java程序之中，从最基础的Applet、JSP到相对复杂的OSGi技术，都依赖着Java语言运行期类加载才得以诞生。</p>`,r:{minutes:28.28,words:8484},t:"类加载机制",y:"a"}}],["/JAVA/%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1.html",{loader:()=>A(()=>import("./线程通信.html-DJUlF1Ls.js"),__vite__mapDeps([83,1])),meta:{a:"Jakob Jenkov",d:16149024e5,l:"2021年3月5日",c:"Java",e:`<p>线程通信的目标是使线程间能够互相发送信号。另一方面，线程通信使线程能够等待其他线程的信号。</p>
<p>例如，线程B可以等待线程A的一个信号，这个信号会通知线程B数据已经准备好了。本文将讲解以下几个JAVA线程间通信的主题：</p>
<h2>通过共享对象通信</h2>
<p>线程间发送信号的一个简单方式是在共享对象的变量里设置信号值。线程A在一个同步块里设置boolean型成员变量hasDataToProcess为true，线程B也在同步块里读取hasDataToProcess这个成员变量。这个简单的例子使用了一个持有信号的对象，并提供了set和check方法:</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MySignal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> hasDataToProcess </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> synchronized</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> hasDataToProcess</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">hasDataToProcess</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> synchronized</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setHasDataToProcess</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">boolean</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> hasData</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">hasDataToProcess</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> hasData;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:10.18,words:3053},t:"线程通信",y:"a"}}],["/JAVA/%E8%AE%A9%E4%BD%A0%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3Synchronized.html",{loader:()=>A(()=>import("./让你彻底理解Synchronized.html-C1ijZg1Z.js"),__vite__mapDeps([84,1])),meta:{d:15904512e5,l:"2020年5月26日",c:"Java",e:`<h2>synchronized简介</h2>
<p>在学习知识前，我们先来看一个现象：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> SynchronizedDemo</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> thread</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> SynchronizedDemo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">InterruptedException</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">printStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"result: "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> count);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1000000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            count</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:15.67,words:4702},t:"彻底理解Synchronized",y:"a"}}],["/JOLT/JsonJolt%E6%95%99%E7%A8%8B.html",{loader:()=>A(()=>import("./JsonJolt教程.html-DDSGHZDq.js"),__vite__mapDeps([85,86,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"Jolt",e:`<p>这是国内外目前第一篇较为详细系统的讲述Java JOLT用法及部分原理的文章，如有错误，请及时留言指出。如有转载，请标明出处。</p>
`,r:{minutes:24.02,words:7205},t:"Json JOLT 教程",y:"a"}}],["/JOLT/JsonJolt%E6%95%99%E7%A8%8B%E8%8B%B1%E6%96%87%E7%89%88.html",{loader:()=>A(()=>import("./JsonJolt教程英文版.html-BB8Sygmy.js"),__vite__mapDeps([87,86,1])),meta:{d:15900192e5,l:"2020年5月21日",c:"Jolt",e:`<p>Content：</p>
<p>If there is any mistake, please leave a message.If reproduced, please indicate the source.</p>
<p>Jolt GitHub: <a href="https://github.com/bazaarvoice/jolt" target="_blank" rel="noopener noreferrer">https://github.com/bazaarvoice/jolt</a></p>
<p>Jolt online demo: <a href="https://jolt-demo.appspot.com" target="_blank" rel="noopener noreferrer">https://jolt-demo.appspot.com</a></p>`,r:{minutes:17.51,words:5254},t:"Json JOLT 教程(英文版)",y:"a"}}],["/JOLT/%E4%BD%BF%E7%94%A8jolt%E6%9B%BF%E6%8D%A2%E5%80%BC.html",{loader:()=>A(()=>import("./使用jolt替换值.html-DLnyRHI5.js"),__vite__mapDeps([88,1])),meta:{a:"张诚",d:16396128e5,l:"2021年12月16日",c:"Jolt",e:`<h2>场景需求</h2>
<p>现在有一组JSON格式的数据如下，可能因为各种原因吧，其中表示性别的<code>sex</code>字段并没有使用<code>男</code> <code>女</code>这样直接的值来表达，然后老板说：“我不要1、0，你给我换成我能看得懂的汉字”</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">	"id"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">	"name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"张三"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">	"sex"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"1"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}, {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">	"id"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">	"name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"李四"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">	"sex"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"0"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.69,words:1408},t:"使用jolt替换值",y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/001Spring%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",{loader:()=>A(()=>import("./001Spring基础知识.html-SgHpRHXE.js"),__vite__mapDeps([89,1])),meta:{d:16539552e5,l:"2022年5月31日",c:"Spring常见错误",g:"Spring",e:`<p>回顾 Spring 本身，什么是 Spring 最基础的知识呢？</p>
<p>其实就是那些 <mark><strong>Spring 最本质的实现和思想</strong></mark>。当你最开始学习的时候，你可能困惑于为什么要用 Spring，而随着对 Spring 原理的深入探究和应用，你慢慢会发现，最大的收获其实还是对于这个困惑的理解。接下来我就给你讲讲。</p>
<p>在进行“传统的”Java 编程时，对象与对象之间的关系都是紧密耦合的，例如服务类 Service 使用组件 ComponentA，则可能写出这样的代码：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> Service</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> ComponentA</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> component </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ComponentA</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"first component"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.2,words:1860},t:"Spring基础知识",O:1,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/002Bean%E5%AE%9A%E4%B9%89%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html",{loader:()=>A(()=>import("./002Bean定义常见错误.html-C0Nodngf.js"),__vite__mapDeps([90,1])),meta:{d:16539552e5,l:"2022年5月31日",c:"Spring常见错误",g:"Spring",e:`<p>Spring 的核心是围绕 Bean 进行的。不管是 Spring Boot 还是 Spring Cloud，只要名称中带有 Spring 关键字的技术都脱离不了 Bean，而要使用一个 Bean 少不了要先定义出来，所以 <mark><strong>定义一个 Bean 就变得格外重要了</strong></mark>。</p>
<p>当然，对于这么重要的工作，Spring 自然给我们提供了很多简单易用的方式。然而，这种简单易用得益于 Spring 的 <mark><strong>约定大于配置</strong></mark>，但我们往往不见得会对所有的约定都了然于胸，所以仍然会在 Bean 的定义上犯一些经典的错误。</p>`,r:{minutes:14.04,words:4211},t:"Bean 定义常见错误",O:2,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/003%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8A.html",{loader:()=>A(()=>import("./003依赖注入常见错误上.html-CR7A6Dd9.js"),__vite__mapDeps([91,1])),meta:{d:16540416e5,l:"2022年6月1日",c:"Spring常见错误",g:"Spring",e:`<p>提及 Spring 的优势或特性，我们都会立马想起 ==<strong>控制反转、依赖注入</strong>==这八字真言。而<code>@Autowired</code>正是用来支持依赖注入的核心利器之一。表面上看，它仅仅是一个注解，在使用上不应该出错。但是，在实际使用中，我们仍然会出现各式各样的错误，而且都堪称经典。所以这节课我就带着你学习下这些经典错误及其背后的原因，以防患于未然。</p>
<h2>案例 1：过多赠予，无所适从</h2>
<p>在使用 <code>@Autowired</code> 时，不管你是菜鸟级还是专家级的 Spring 使用者，都应该制造或者遭遇过类似的错误：</p>`,r:{minutes:14.67,words:4400},t:"依赖注入常见错误（上）",O:3,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/004%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8B.html",{loader:()=>A(()=>import("./004依赖注入常见错误下.html-Cw42jViP.js"),__vite__mapDeps([92,1])),meta:{d:16540416e5,l:"2022年6月1日",c:"Spring常见错误",g:"Spring",e:`<p>在实际应用中，我们也会使用<code>@Value</code>等不太常见的注解来完成自动注入，同时也存在注入到集合、数组等复杂类型的场景。这些情况下，我们也会遇到一些问题。所以这一讲我们不妨来梳理下。</p>
<h2>案例 1：@Value 没有注入预期的值</h2>
<p>在装配对象成员属性时，我们常常会使用<code> @Autowired</code> 来装配。但是，有时候我们也使用 <code>@Value</code> 进行装配。不过这两种注解使用风格不同，使用 <code>@Autowired</code> 一般都不会设置属性值，而 <code>@Value</code> 必须指定一个字符串值，因为其定义做了要求，定义代码如下：</p>`,r:{minutes:12.67,words:3800},t:"依赖注入常见错误（下）",O:4,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/005Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html",{loader:()=>A(()=>import("./005Bean生命周期常见错误.html-CEvZyeef.js"),__vite__mapDeps([93,1])),meta:{d:16542144e5,l:"2022年6月3日",c:"Spring常见错误",g:"Spring",e:`<p>虽然说 Spring 容器上手简单，可以仅仅通过学习一些有限的注解，即可达到快速使用的目的。但在工程实践中，我们依然会从中发现一些常见的错误。尤其当你对 Spring 的生命周期还没有深入了解时，类初始化及销毁过程中潜在的约定就不会很清楚。</p>
<p>这会导致这样一些状况发生：有些错误，我们可以在 Spring 的异常提示下快速解决，但却不理解背后的原理；而另一些错误，并不容易在开发环境下被发现，从而在产线上造成较为严重的后果。</p>
<p>接下来我们就具体解析下这些常见案例及其背后的原理。</p>
<h2>案例 1：构造器内抛空指针异常</h2>
<p>先看个例子。在构建宿舍管理系统时，有 <code>LightMgrService</code> 来管理<code> LightService</code>，从而控制宿舍灯的开启和关闭。我们希望在 <code>LightMgrService</code> 初始化时能够自动调用 <code>LightService</code> 的 check 方法来检查所有宿舍灯的电路是否正常，代码如下：</p>`,r:{minutes:14.23,words:4269},t:"Bean 生命周期常见错误",O:5,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/006SpringAOP%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8A.html",{loader:()=>A(()=>import("./006SpringAOP常见错误上.html-DNQmouFT.js"),__vite__mapDeps([94,1])),meta:{d:17196192e5,l:"2024年6月29日",c:"Spring常见错误",g:"Spring",e:`<p><mark><strong>Spring AOP 是 Spring 中除了依赖注入外（DI）最为核心的功能，顾名思义，AOP 即 Aspect Oriented Programming，翻译为面向切面编程。</strong></mark></p>
<p>而 Spring AOP 则利用 <code>CGlib</code> 和 <code>JDK</code> 动态代理等方式来实现运行期动态方法增强，其 <mark><strong>目的是将与业务无关的代码单独抽离出来，使其逻辑不再与业务代码耦合，从而降低系统的耦合性，提高程序的可重用性和开发效率</strong></mark>。因而 AOP 便成为了日志记录、监控管理、性能统计、异常处理、权限管理、统一认证等各个方面被广泛使用的技术。</p>`,r:{minutes:14.68,words:4404},t:"Spring AOP 常见错误（上）",O:6,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/007SpringAOP%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8B.html",{loader:()=>A(()=>import("./007SpringAOP常见错误下.html-B02KaT3n.js"),__vite__mapDeps([95,1])),meta:{d:17196192e5,l:"2024年6月29日",c:"Spring常见错误",g:"Spring",e:`<p>当一个系统采用的切面越来越多时，因为执行顺序而导致的问题便会逐步暴露出来，下面我们就重点看一下。</p>
<h2>案例 1：错乱混合不同类型的增强</h2>
<p>这个宿舍管理系统保护了一个电费充值模块，它包含了一个负责电费充值的类 <code>ElectricService</code>，还有一个充电方法 <code>charge()</code>：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> ElectricService</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> charge</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Electric charging ..."</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:13.17,words:3952},t:"Spring AOP 常见错误（下）",O:7,y:"a"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/008Spring%E4%BA%8B%E4%BB%B6%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html",{loader:()=>A(()=>import("./008Spring事件常见错误.html-B7A5RxiL.js"),__vite__mapDeps([96,1])),meta:{d:17196192e5,l:"2024年6月29日",c:"Spring常见错误",g:"Spring",e:`<p>作为 Spring 的关键功能支撑，Spring 事件是一个相对独立的点。或许你从没有在自己的项目中使用过 Spring 事件，但是你一定见过它的相关日志。而且在未来的编程实践中，你会发现，一旦你用上了 Spring 事件，往往完成的都是一些有趣的、强大的功能，例如动态配置。那么接下来我就来讲讲 Spring 事件上都有哪些常见的错误。</p>
<h2>案例 1：试图处理并不会抛出的事件</h2>
<p>Spring 事件的设计比较简单。说白了，就是监听器设计模式在 Spring 中的一种实现，参考下图：</p>
<figure><figcaption></figcaption></figure>`,r:{minutes:14.32,words:4295},t:"Spring事件常见错误",O:8,y:"a"}}],["/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/001-%E7%AE%A1%E7%90%86OracleRedoLog.html",{loader:()=>A(()=>import("./001-管理OracleRedoLog.html-B4F7Dx8h.js"),__vite__mapDeps([97,1])),meta:{d:15916608e5,l:"2020年6月9日",c:"数据库",e:`<p>通过完成诸如创建重做日志组和成员、重新定位和重命名重做日志成员、删除重做日志组和成员以及强制切换日志等任务，您可以管理重做日志。</p>
<h2>What Is the Redo Log?</h2>
<p>恢复操作最关键的结构是重做日志，它由两个或多个预先分配的文件组成，这些文件存储数据库中发生的所有更改。Oracle数据库的每个实例都有一个相关的重做日志，以便在实例失败时保护数据库。</p>
<h3>Redo Threads</h3>
<p>在多个数据库实例的上下文中，每个数据库实例的重做日志也称为重做线程。</p>
<p>在典型的配置中，只有一个数据库实例访问Oracle数据库，因此只有一个线程。然而，在Oracle Real Application Clusters环境中，两个或多个实例同时访问单个数据库，每个实例都有自己的重做线程。每个实例的单独重做线程避免了对一组重做日志文件的争用，从而消除了潜在的性能瓶颈。</p>`,r:{minutes:9.92,words:2977},t:"管理OracleRedoLog",y:"a"}}],["/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/BIT%E7%9A%84%E5%AD%97%E8%8A%82%E5%BA%8F.html",{loader:()=>A(()=>import("./BIT的字节序.html-CstJEDTE.js"),__vite__mapDeps([98,1])),meta:{a:"张诚",d:16377984e5,l:"2021年11月25日",c:"数据库",e:`<h2>前言</h2>
<p>以前真没有注意过字节序这个东西，直到最近在做Debezium开发并研读源码时，发现了一段有意思的代码。</p>
<p>简单来说这段代码是用来转BIT型的数据的，BIT(1)转成Boolean就不说了。重点是BIT(n &gt; 1)的时候，读取到的数据是byte[]或者BitSet。
byte[]是通过JDBC方式获取到的数据的格式，BitSet是采集CDC日志获取到的数据格式，都最终都会以 byte[]的格式输出出去。然后这里涉及
了一个字节序的问题。看这段代码的意思是只有MySQL的JDBC方式获取到的数据的格式是大端字节序，其他所有情况都是小端字节序。</p>`,r:{minutes:2.5,words:749},t:"BIT的字节序",y:"a"}}],["/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/Oracle12cLogMiner%E5%88%86%E6%9E%90Redo%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6.html",{loader:()=>A(()=>import("./Oracle12cLogMiner分析Redo日志文件.html-GcIDaAKw.js"),__vite__mapDeps([99,1])),meta:{d:15916608e5,l:"2020年6月9日",c:"数据库",e:`<p>官方文档(https://docs.oracle.com/database/121/SUTIL/GUID-3417B738-374C-4EE3-B15C-3A66E01AE2B5.htm#SUTIL019)</p>
<p>Oracle LogMiner是Oracle数据库的一部分，它允许你通过SQL接口在线查询和归档Redo日志文件。Redo日志文件包含关于数据库活动历史的信息。</p>
<h2>LogMiner Benefits</h2>
<p>对用户数据或数据库字典所做的所有更改都记录在Oracle redo日志文件中，以便可以执行数据库恢复操作。</p>
<p>由于LogMiner为Redo 日志文件提供了定义明确，易于使用且全面的关系接口，因此它既可以用作功能强大的数据审核工具，又可以用作复杂的数据分析工具。以下列表描述了LogMiner的一些关键功能：</p>`,r:{minutes:88.42,words:26526},t:"Oracle(12c)使用LogMiner分析Redo日志文件",y:"a"}}],["/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/%E5%9F%BA%E4%BA%8E%E6%B0%B4%E5%8D%B0%E7%9A%84CDC%E6%A1%86%E6%9E%B6.html",{loader:()=>A(()=>import("./基于水印的CDC框架.html-BspokES4.js"),__vite__mapDeps([100,1])),meta:{a:"张诚",d:16884288e5,l:"2023年7月4日",c:"CDC",e:`<p>原文：<a href="https://arxiv.org/pdf/2010.12597v1.pdf" target="_blank" rel="noopener noreferrer">DBLog: A Watermark Based Change-Data-Capture Framework</a></p>
<h2>概要</h2>
<p>对于应用系统来说，使用不同的异构数据库来满足特定的场景需求是很常见的模式，比如说用合适的数据库来存储标准的数据或者提供高效的查询能力。因此，对于这样的应用程序而言，多个数据库之间保持同步就是非常必要的。</p>
<p>人们尝试了一系列的方法来解决这个同步问题，例如双写和分布式事务，然而，这些方法在可行性、稳健性和可维护性方面都存在着局限。</p>`,r:{minutes:25.85,words:7754},t:"DBLog 基于水印标记的CDC框架(译)",y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/01-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html",{loader:()=>A(()=>import("./01-进程与线程基本概念.html-BUjYfa_E.js"),__vite__mapDeps([101,1])),meta:{d:16071264e5,l:"2020年12月5日",c:"深入浅出Java多线程",e:`<h2>1.1 进程产生的背景</h2>
<p>最初的计算机只能接受一些特定的指令，用户每输入一个指令，计算机就做出一个操作。当用户在思考或者输入时，计算机就在等待。这样效率非常低下，在很多时候，计算机都处在等待状态。</p>
<h3>批处理操作系统</h3>
<p>后来有了<strong>批处理操作体统</strong>,把一系列需要操作的指令写下来，形成一个清单，一次性交给计算机。用户将多个需要执行的程序写在磁带上，然后交由计算机去读取并逐个执行这些程序，并将输出结果写在另一个磁带上。</p>
<p>批处理操作系统在一定程度上提高了计算机的效率，但是由于<strong>批处理操作系统的指令运行方式仍然是串行的，内存中始终只有一个程序在运行</strong>，后面的程序需要等待前面的程序执行完成后才能开始执行，而前面的程序有时会由于I/O操作、网络等原因阻塞，所以<strong>批处理操作效率也不高</strong>。</p>`,r:{minutes:8.01,words:2402},t:"进程与线程基本概念",O:1,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/02-Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3.html",{loader:()=>A(()=>import("./02-Java多线程入门类和接口.html-C8XFDRp7.js"),__vite__mapDeps([102,1])),meta:{d:16071264e5,l:"2020年12月5日",c:"深入浅出Java多线程",e:`<h2>2.1 Thread类和Runnable接口</h2>
<p>首先，我们需要有一个<code>线程</code>类。JDK提供了<code>Thread</code>类和<code>Runnalble</code>接口来让我们实现自己的<code>线程</code>类。</p>
<ul>
<li>继承<code>Thread</code>类，并重写<code>run</code>方法；</li>
<li>实现<code>Runnable</code>接口的<code>run</code>方法；</li>
</ul>
<h3>2.1.1 继承Thread类</h3>
<p>先学会怎么用，再学原理。首先我们来看看怎么用Thread和Runnable来写一个Java多线程程序。首先是继承Thread类：</p>`,r:{minutes:7.88,words:2363},t:"Java多线程入门类和接口",O:2,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/03-%E7%BA%BF%E7%A8%8B%E7%BB%84%E5%92%8C%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7.html",{loader:()=>A(()=>import("./03-线程组和线程优先级.html-UZqYqVA0.js"),__vite__mapDeps([103,1])),meta:{d:16071264e5,l:"2020年12月5日",c:"深入浅出Java多线程",e:`<h2>3.1 线程组(ThreadGroup)</h2>
<p>Java中用ThreadGroup来表示线程组，我们可以使用线程组对线程进行批量控制。</p>
<p>ThreadGroup和Thread的关系就如同他们的字面意思一样简单粗暴，每个Thread必然存在于一个ThreadGroup中，Thread不能独立于ThreadGroup存在。执行main()方法线程的名字是main，如果在new Thread时没有显式指定，那么默认将父线程（当前执行new Thread的线程）线程组设置为自己的线程组。</p>
<p>示例代码：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> Demo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> testThread</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"testThread当前线程组名字："</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getThreadGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"testThread线程名字："</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">                    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        testThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"执行main方法线程名字："</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">currentThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.98,words:2093},t:"线程组和线程优先级",O:3,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/04-Java%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81%E5%8F%8A%E4%B8%BB%E8%A6%81%E8%BD%AC%E5%8C%96%E6%96%B9%E6%B3%95.html",{loader:()=>A(()=>import("./04-Java线程的状态及主要转化方法.html-BjuKbC8j.js"),__vite__mapDeps([104,1])),meta:{d:16071264e5,l:"2020年12月5日",c:"深入浅出Java多线程",e:`<h2>4.1 操作系统中的线程状态转换</h2>
<p>首先我们来看看操作系统中的线程状态转换。</p>
<blockquote>
<p>在现在的操作系统中，线程是被视为轻量级进程的，所以<strong>操作系统线程的状态其实和操作系统进程的状态是一致的</strong>。</p>
</blockquote>
<figure><figcaption></figcaption></figure>
<p>操作系统线程主要有以下三个状态：</p>
<ul>
<li>就绪状态(ready)：线程正在等待使用CPU，经调度程序调用之后可进入running状态。</li>
<li>执行状态(running)：线程正在使用CPU。</li>
<li>等待状态(waiting): 线程经过等待事件的调用或者正在等待其他资源（如I/O）。</li>
</ul>`,r:{minutes:11.86,words:3557},t:"Java线程的状态及主要转化方法",O:4,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/05-Java%E7%BA%BF%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1.html",{loader:()=>A(()=>import("./05-Java线程间的通信.html-C4tOJjFi.js"),__vite__mapDeps([105,1])),meta:{d:16072128e5,l:"2020年12月6日",c:"深入浅出Java多线程",e:`<p>合理的使用Java多线程可以更好地利用服务器资源。一般来讲，线程内部有自己私有的线程上下文，互不干扰。但是当我们需要多个线程之间相互协作的时候，就需要我们掌握Java线程的通信方式。本文将介绍Java线程之间的几种通信原理。</p>
`,r:{minutes:12.05,words:3615},t:"Java线程间的通信",O:5,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/06-Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",{loader:()=>A(()=>import("./06-Java内存模型基础知识.html-DcBJytB4.js"),__vite__mapDeps([106,1])),meta:{d:16072128e5,l:"2020年12月6日",c:"深入浅出Java多线程",e:`<h2>6.1 并发编程模型的两个关键问题</h2>
<ul>
<li>线程间如何通信？即：线程之间以何种机制来交换信息</li>
<li>线程间如何同步？即：线程以何种机制来控制不同线程间操作发生的相对顺序</li>
</ul>
<p>有两种并发模型可以解决这两个问题：</p>
<ul>
<li>消息传递并发模型</li>
<li>共享内存并发模型</li>
</ul>
<p>这两种模型之间的区别如下表所示：
</p>
<p><strong>在Java中，使用的是共享内存并发模型</strong>。</p>
<h2>6.2 Java内存模型的抽象结构</h2>
<h3>6.2.1  运行时内存的划分</h3>`,r:{minutes:4.48,words:1343},t:"Java内存模型基础知识",O:6,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/07-%E9%87%8D%E6%8E%92%E5%BA%8F%E4%B8%8Ehappens-before.html",{loader:()=>A(()=>import("./07-重排序与happens-before.html-DNL5Hel6.js"),__vite__mapDeps([107,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"深入浅出Java多线程",e:`<h2>7.1 什么是重排序？</h2>
<p>计算机在执行程序时，为了提高性能，编译器和处理器常常会对指令做重排。</p>
<p><strong>为什么指令重排序可以提高性能？</strong></p>
<p>简单地说，每一个指令都会包含多个步骤，每个步骤可能使用不同的硬件。因此，<strong>流水线技术</strong>产生了，它的原理是指令1还没有执行完，就可以开始执行指令2，而不用等到指令1执行结束之后再执行指令2，这样就大大提高了效率。</p>
<p>但是，流水线技术最害怕<strong>中断</strong>，恢复中断的代价是比较大的，所以我们要想尽办法不让流水线中断。指令重排就是减少中断的一种技术。</p>`,r:{minutes:11.39,words:3418},t:"重排序与happens-before",O:7,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/08-volatitle.html",{loader:()=>A(()=>import("./08-volatitle.html-CUNnWYn3.js"),__vite__mapDeps([108,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"深入浅出Java多线程",e:`<h2>8.1 几个基本概念</h2>
<p>在介绍volatile之前，我们先回顾及介绍几个基本的概念。</p>
<h3>8.1.1 内存可见性</h3>
<p>在Java内存模型那一章我们介绍了JMM有一个主内存，每个线程有自己私有的工作内存，工作内存中保存了一些变量在主内存的拷贝。</p>
<p><strong>内存可见性，指的是线程之间的可见性，当一个线程修改了共享变量时，另一个线程可以读取到这个修改后的值</strong>。</p>
<h3>8.1.2 重排序</h3>
<p>为优化程序性能，对原有的指令执行顺序进行优化重新排序。重排序可能发生在多个阶段，比如编译重排序、CPU重排序等。</p>`,r:{minutes:8.23,words:2469},t:"volatitle",O:8,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/09-synchronized%E4%B8%8E%E9%94%81.html",{loader:()=>A(()=>import("./09-synchronized与锁.html-wTpBnS8I.js"),__vite__mapDeps([109,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"深入浅出Java多线程",e:`<p>这篇文章我们来聊一聊Java多线程里面的“锁”。</p>
<p>首先需要明确的一点是：<strong>Java多线程的锁都是基于对象的</strong>，Java中的每一个对象都可以作为一个锁。</p>
<p>还有一点需要注意的是，我们常听到的<strong>类锁</strong>其实也是对象锁。</p>
<p>Java类只有一个Class对象（可以有多个实例对象，多个实例共享这个Class对象），而Class对象也是特殊的Java对象。所以我们常说的类锁，其实就是Class对象的锁。</p>
<h2>9.1 Synchronized关键字</h2>
<p>说到锁，我们通常会谈到<code>synchronized</code>这个关键字。它翻译成中文就是“同步”的意思。</p>`,r:{minutes:12.77,words:3830},t:"synchronized与锁",O:9,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/10-CAS%E4%B8%8E%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C.html",{loader:()=>A(()=>import("./10-CAS与原子操作.html-DwXxioJT.js"),__vite__mapDeps([110,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"深入浅出Java多线程",e:`<h2>10.1 乐观锁与悲观锁的概念</h2>
<p>锁可以从不同的角度分类。其中，乐观锁和悲观锁是一种分类方式。</p>
<p><strong>悲观锁：</strong></p>
<p>悲观锁就是我们常说的锁。对于悲观锁来说，它总是认为每次访问共享资源时会发生冲突，所以必须对每次数据操作加上锁，以保证临界区的程序同一时间只能有一个线程在执行。</p>
<p><strong>乐观锁：</strong></p>
<p>乐观锁又称为“无锁”，顾名思义，它是乐观派。乐观锁总是假设对共享资源的访问没有冲突，线程可以不停地执行，无需加锁也无需等待。而一旦多个线程发生冲突，乐观锁通常是使用一种称为CAS的技术来保证线程执行的安全性。</p>`,r:{minutes:9.16,words:2748},t:"CAS与原子操作",O:10,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/11-AQS.html",{loader:()=>A(()=>import("./11-AQS.html-Cy48yPl5.js"),__vite__mapDeps([111,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"深入浅出Java多线程",e:`<h2>11.1 AQS简介</h2>
<p><strong>AQS</strong>是<code>AbstractQueuedSynchronizer</code>的简称，即<code>抽象队列同步器</code>，从字面意思上理解:</p>
<ul>
<li>抽象：抽象类，只实现一些主要逻辑，有些方法由子类实现；</li>
<li>队列：使用先进先出（FIFO）队列存储数据；</li>
<li>同步：实现了同步的功能。</li>
</ul>
<p>那AQS有什么用呢？AQS是一个用来构建锁和同步器的框架，使用AQS能简单且高效地构造出应用广泛的同步器，比如我们提到的ReentrantLock，Semaphore，ReentrantReadWriteLock，SynchronousQueue，FutureTask等等皆是基于AQS的。</p>`,r:{minutes:7.89,words:2368},t:"AQS",O:11,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/12-%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./12-线程池原理.html-Cu3w3hPb.js"),__vite__mapDeps([112,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"深入浅出Java多线程",e:`<h2>12.1 为什么要使用线程池</h2>
<p>使用线程池主要有以下三个原因：</p>
<ol>
<li>创建/销毁线程需要消耗系统资源，线程池可以<strong>复用已创建的线程</strong>。</li>
<li><strong>控制并发的数量</strong>。并发数量过多，可能会导致资源消耗过多，从而造成服务器崩溃。（主要原因）</li>
<li><strong>可以对线程做统一管理</strong>。</li>
</ol>
<h2>12.2 线程池的原理</h2>
<p>Java中的线程池顶层接口是<code>Executor</code>接口，<code>ThreadPoolExecutor</code>是这个接口的实现类。</p>`,r:{minutes:15.2,words:4559},t:"线程池原理",O:12,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/13-%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.html",{loader:()=>A(()=>import("./13-阻塞队列.html-CNKF-suq.js"),__vite__mapDeps([113,1])),meta:{d:1607472e6,l:"2020年12月9日",c:"深入浅出Java多线程",e:`<h2>13.1 阻塞队列的由来</h2>
<p>我们假设一种场景，生产者一直生产资源，消费者一直消费资源，资源存储在一个缓冲池中，生产者将生产的资源存进缓冲池中，消费者从缓冲池中拿到资源进行消费，这就是大名鼎鼎的<strong>生产者-消费者模式</strong>。</p>
<p>该模式能够简化开发过程，一方面消除了生产者类与消费者类之间的代码依赖性，另一方面将生产数据的过程与使用数据的过程解耦简化负载。</p>
<p>我们自己coding实现这个模式的时候，因为需要让<strong>多个线程操作共享变量</strong>（即资源），所以很容易引发<strong>线程安全问题</strong>，造成<strong>重复消费</strong>和<strong>死锁</strong>，尤其是生产者和消费者存在多个的情况。另外，当缓冲池空了，我们需要阻塞消费者，唤醒生产者；当缓冲池满了，我们需要阻塞生产者，唤醒消费者，这些个<strong>等待-唤醒</strong>逻辑都需要自己实现。（这块不明白的同学，可以看最下方结语部分的链接）</p>`,r:{minutes:11.21,words:3363},t:"阻塞队列",O:13,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/14-%E9%94%81%E6%8E%A5%E5%8F%A3%E5%92%8C%E7%B1%BB.html",{loader:()=>A(()=>import("./14-锁接口和类.html-CeM2lnMi.js"),__vite__mapDeps([114,1])),meta:{d:1607472e6,l:"2020年12月9日",c:"深入浅出Java多线程",e:`<p>前面我们介绍了Java原生的锁——基于对象的锁，它一般是配合synchronized关键字来使用的。实际上，Java在<code>java.util.concurrent.locks</code>包下，还为我们提供了几个关于锁的类和接口。它们有更强大的功能或更高的性能。</p>
<h2>14.1 synchronized的不足之处</h2>
<p>我们先来看看<code>synchronized</code>有什么不足之处。</p>
<ul>
<li>如果临界区是只读操作，其实可以多线程一起执行，但使用synchronized的话，<strong>同一时间只能有一个线程执行</strong>。</li>
<li>synchronized无法知道线程有没有成功获取到锁</li>
<li>使用synchronized，如果临界区因为IO或者sleep方法等原因阻塞了，而当前线程又没有释放锁，就会导致<strong>所有线程等待</strong>。</li>
</ul>`,r:{minutes:12.48,words:3743},t:"锁接口和类",O:14,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/15-%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E9%9B%86%E5%90%88.html",{loader:()=>A(()=>import("./15-并发容器集合.html-C4xBlVW6.js"),__vite__mapDeps([115,1])),meta:{d:16075584e5,l:"2020年12月10日",c:"深入浅出Java多线程",e:`<h2>15.1 同步容器与并发容器</h2>
<p>我们知道在java.util包下提供了一些容器类，而Vector和HashTable是线程安全的容器类，但是这些容器实现同步的方式是通过对方法加锁(sychronized)方式实现的，这样读写均需要锁操作，导致性能低下。</p>
<p>而即使是Vector这样线程安全的类，在面对多线程下的复合操作的时候也是需要通过客户端加锁的方式保证原子性。如下面例子说明:</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> TestVector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    //方法一</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  Object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getLast</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Vector</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lastIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(lastIndex);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    //方法二</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> deleteLast</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Vector</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lastIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(lastIndex);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    //方法三</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  Object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> getLastSysnchronized</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Vector</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        synchronized</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(vector){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lastIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(lastIndex);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    //方法四</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> deleteLastSysnchronized</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Vector</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        synchronized</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (vector){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> lastIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            vector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(lastIndex);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.42,words:1625},t:"并发容器集合",O:15,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/16-CopyOnWrite%E5%AE%B9%E5%99%A8.html",{loader:()=>A(()=>import("./16-CopyOnWrite容器.html-CJCwUDAx.js"),__vite__mapDeps([116,1])),meta:{d:16075584e5,l:"2020年12月10日",c:"深入浅出Java多线程",e:`<h2>16.1 什么是CopyOnWrite容器</h2>
<p>在说到CopyOnWrite容器之前我们先来谈谈什么是CopyOnWrite机制，CopyOnWrite是计算机设计领域中的一种优化策略，也是一种在并发场景下常用的设计思想——写入时复制思想。</p>
<p>那什么是写入时复制思想呢？就是当有多个调用者同时去请求一个资源数据的时候，有一个调用者出于某些原因需要对当前的数据源进行修改，这个时候系统将会复制一个当前数据源的副本给调用者修改。</p>
<p>CopyOnWrite容器即<strong>写时复制的容器</strong>,当我们往一个容器中添加元素的时候，不直接往容器中添加，而是将当前容器进行copy，复制出来一个新的容器，然后向新容器中添加我们需要的元素，最后将原容器的引用指向新容器。</p>`,r:{minutes:5.2,words:1559},t:"CopyOnWrite容器",O:16,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/17-%E9%80%9A%E4%BF%A1%E5%B7%A5%E5%85%B7%E7%B1%BB.html",{loader:()=>A(()=>import("./17-通信工具类.html-B-E-0ca9.js"),__vite__mapDeps([117,1])),meta:{d:16075584e5,l:"2020年12月10日",c:"深入浅出Java多线程",e:`<p>JDK中提供了一些工具类以供开发者使用。这样的话我们在遇到一些常见的应用场景时就可以使用这些工具类，而不用自己再重复造轮子了。</p>
<p>它们都在java.util.concurrent包下。先总体概括一下都有哪些工具类，它们有什么作用，然后再分别介绍它们的主要使用方法和原理。</p>
<table>
<thead>
<tr>
<th>类</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>Semaphore</td>
<td>限制线程的数量</td>
</tr>
<tr>
<td>Exchanger</td>
<td>两个线程交换数据</td>
</tr>
<tr>
<td>CountDownLatch</td>
<td>线程等待直到计数器减为0时开始工作</td>
</tr>
<tr>
<td>CyclicBarrier</td>
<td>作用跟CountDownLatch类似，但是可以重复使用</td>
</tr>
<tr>
<td>Phaser</td>
<td>增强的CyclicBarrier</td>
</tr>
</tbody>
</table>`,r:{minutes:16.44,words:4932},t:"通信工具类",O:17,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/18-Fork_Join%E6%A1%86%E6%9E%B6.html",{loader:()=>A(()=>import("./18-Fork_Join框架.html-B6_aFQq6.js"),__vite__mapDeps([118,1])),meta:{d:16075584e5,l:"2020年12月10日",c:"深入浅出Java多线程",e:`<h2>18.1 什么是Fork/Join</h2>
<p>Fork/Join框架是一个实现了ExecutorService接口的多线程处理器，它专为那些可以通过递归分解成更细小的任务而设计，最大化的利用多核处理器来提高应用程序的性能。</p>
<p>与其他ExecutorService相关的实现相同的是，Fork/Join框架会将任务分配给线程池中的线程。而与之不同的是，Fork/Join框架在执行任务时使用了<strong>工作窃取算法</strong>。</p>
<p><strong>fork</strong>在英文里有分叉的意思，<strong>join</strong>在英文里连接、结合的意思。顾名思义，fork就是要使一个大任务分解成若干个小任务，而join就是最后将各个小任务的结果结合起来得到大任务的结果。</p>`,r:{minutes:9.27,words:2781},t:"Fork_Join框架",O:18,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/19-Java8Stream%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E5%8E%9F%E7%90%86.html",{loader:()=>A(()=>import("./19-Java8Stream并行计算原理.html-h9urEpt1.js"),__vite__mapDeps([119,1])),meta:{d:16075584e5,l:"2020年12月10日",c:"深入浅出Java多线程",e:`<h2>19.1 Java 8 Stream简介</h2>
<p>从Java 8 开始，我们可以使用<code>Stream</code>接口以及<strong>lambda表达式</strong>进行“流式计算”。它可以让我们对集合的操作更加简洁、更加可读、更加高效。</p>
<p>Stream接口有非常多用于集合计算的方法，比如判空操作empty、过滤操作filter、求最max值、查找操作findFirst和findAny等等。</p>
<h2>19.2 Stream单线程串行计算</h2>
<p>Stream接口默认是使用串行的方式，也就是说在一个线程里执行。下面举一个例子：</p>
`,r:{minutes:7.13,words:2139},t:"Java 8 Stream并行计算原理",O:19,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/20-%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1.html",{loader:()=>A(()=>import("./20-计划任务.html-DBQg0W8_.js"),__vite__mapDeps([120,1])),meta:{d:16075584e5,l:"2020年12月10日",c:"深入浅出Java多线程",e:`<p>自JDK 1.5 开始，JDK提供了<code>ScheduledThreadPoolExecutor</code>类用于计划任务（又称定时任务），这个类有两个用途：</p>
<ul>
<li>在给定的延迟之后运行任务</li>
<li>周期性重复执行任务</li>
</ul>
<p>在这之前，是使用<code>Timer</code>类来完成定时任务的，但是<code>Timer</code>有缺陷：</p>
<ul>
<li>Timer是<strong>单线程</strong>模式；</li>
<li>如果在执行任务期间某个TimerTask耗时较久，那么就会影响其它任务的调度；</li>
<li>Timer的任务调度是基于绝对时间的，对<strong>系统时间</strong>敏感；</li>
<li>Timer不会捕获执行TimerTask时所抛出的<strong>异常</strong>，由于Timer是单线程，所以一旦出现异常，则线程就会终止，其他任务也得不到执行。</li>
</ul>`,r:{minutes:14.06,words:4218},t:"计划任务",O:20,y:"a"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B.html",{loader:()=>A(()=>import("./深入浅出Java多线程.html-Bn2M1ktI.js"),__vite__mapDeps([121,1])),meta:{t:"深入浅出Java多线程",i:"home",O:21}}],["/%E7%AE%97%E6%B3%95/sf.html",{loader:()=>A(()=>import("./sf.html-DluZAiJi.js"),__vite__mapDeps([122,1])),meta:{t:"算法",i:"home"}}],["/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%89%8D%E9%A9%B1%E5%92%8C%E5%90%8E%E7%BB%A7%E8%8A%82%E7%82%B9.html",{loader:()=>A(()=>import("./二叉搜索树的前驱和后继节点.html-HQSq-Asf.js"),__vite__mapDeps([123,1])),meta:{d:15868224e5,l:"2020年4月14日",c:"算法",e:`<p>前驱节点 val值小于该节点val值并且值最大的节点
后继节点 val值大于该节点val值并且值最小的节点</p>
`,r:{minutes:2.27,words:682},t:"二叉搜索树的前驱和后继节点",y:"a"}}],["/%E7%AE%97%E6%B3%95/%E4%BB%80%E4%B9%88%E6%98%AF%E7%BA%A2%E9%BB%91%E6%A0%91.html",{loader:()=>A(()=>import("./什么是红黑树.html-CAHrS0uw.js"),__vite__mapDeps([124,1])),meta:{d:15868224e5,l:"2020年4月14日",c:"算法",e:`<p>什么是二叉查找树(BST)?</p>
<ol>
<li>左子树上所有的节点的值均小于或等于他根节点的值</li>
<li>右子树上所有的节点的值均大于或等于他根节点的值</li>
<li>左右子树也分别是二叉排序树</li>
</ol>
`,r:{minutes:3.43,words:1030},t:"什么是红黑树",y:"a"}}],["/%E7%AE%97%E6%B3%95/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html",{loader:()=>A(()=>import("./冒泡排序.html-CSj2NH6E.js"),__vite__mapDeps([125,1])),meta:{d:1587168e6,l:"2020年4月18日",c:"算法",e:`<h2>一.冒泡排序简介</h2>
<p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</p>
<p>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</p>
<p>针对所有的元素重复以上的步骤，除了最后一个。</p>
<p>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p>
<p>动态图：</p>
<figure><figcaption></figcaption></figure>
<h2>二.代码案例</h2>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD"> day0515</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> demo_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        //冒泡排序算法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">numbers</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">j</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">numbers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">numbers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">i;j</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(numbers[j]</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">numbers[j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">                    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> temp</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">numbers[j];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    numbers[j]</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">numbers[j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                    numbers[j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">temp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"从小到大排序后的结果是:"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">numbers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;i</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(numbers[i]</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.8,words:240},t:"冒泡排序",y:"a"}}],["/%E7%AE%97%E6%B3%95/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%9C%80%E5%BC%BA%E6%80%BB%E7%BB%93.html",{loader:()=>A(()=>import("./十大经典排序算法最强总结.html-jNVH2qFW.js"),__vite__mapDeps([126,1])),meta:{d:1587168e6,l:"2020年4月18日",c:"算法",e:`<h2>排序算法说明</h2>
<ul>
<li><strong>排序的定义</strong>:对一序列对象根据某个关键字进行排序。</li>
<li><strong>术语说明</strong>
<ul>
<li><strong>稳定</strong>：如果a原本在b前面，而a=b，排序之后a仍然在b的前面；</li>
<li><strong>不稳定</strong>：如果a原本在b的前面，而a=b，排序之后a可能会出现在b的后面；</li>
<li><strong>内排序</strong>：所有排序操作都在内存中完成；</li>
<li><strong>外排序</strong>：由于数据太大，因此把数据放在磁盘中，而排序通过磁盘和内存的数据传输才能进行；</li>
<li><strong>时间复杂度</strong>：一个算法执行所耗费的时间。</li>
<li><strong>空间复杂度</strong>：运行完一个程序所需内存的大小。</li>
</ul>
</li>
</ul>`,r:{minutes:18.08,words:5425},t:"十大经典排序算法最强总结",y:"a"}}],["/%E7%AE%97%E6%B3%95/%E5%9F%BA%E4%BA%8EJava%E5%AE%9E%E7%8E%B0%E7%BA%A2%E9%BB%91%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html",{loader:()=>A(()=>import("./基于Java实现红黑树的基本操作.html-DwNS0Cyw.js"),__vite__mapDeps([127,1])),meta:{d:15856128e5,l:"2020年3月31日",c:"算法",e:`<p>有随机数节点组成的二叉树的平均高度为logn，所以正常情况下二叉树查找的时间复杂度为O(logn)。但是，根据二叉树的特性，在最坏的情况下，比如存储的是一个有序的数据的话，那么所以的数据都会形成一条链，此时二叉树的深度为n，时间复杂度为O(n)。红黑树就是为了解决这个问题的，它能够保证在任何情况下树的深度都保持在log(n)左右。</p>
`,r:{minutes:22.26,words:6679},t:"基于Java实现红黑树的基本操作",y:"a"}}],["/%E7%AE%97%E6%B3%95/%E5%B9%B6%E6%9F%A5%E9%9B%86.html",{loader:()=>A(()=>import("./并查集.html-CDetsNpU.js"),__vite__mapDeps([128,1])),meta:{a:"张诚",d:16164576e5,l:"2021年3月23日",c:"算法",e:`<h2>概述</h2>
<p>并查集被很多OIer认为是最简洁而优雅的数据结构之一，主要用于解决一些<strong>元素分组</strong>的问题。它管理一系列<strong>不相交的集合</strong>，并支持两种操作：</p>
<ul>
<li><strong>合并</strong>（Union）：把两个不相交的集合合并为一个集合。</li>
<li><strong>查询</strong>（Find）：查询两个元素是否在同一个集合中。</li>
</ul>
<p>当然，这样的定义未免太过学术化，看完后恐怕不太能理解它具体有什么用。所以我们先来看看并查集最直接的一个应用场景：亲戚问题。</p>`,r:{minutes:7.96,words:2388},t:"并查集",y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/01-%E5%91%BD%E5%90%8D%E9%A3%8E%E6%A0%BC.html",{loader:()=>A(()=>import("./01-命名风格.html-CUIUQOmv.js"),__vite__mapDeps([129,1])),meta:{d:16073856e5,l:"2020年12月8日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】代码中的命名均不能以 <strong>下划线或美元符号</strong> 开始，也不能以 <strong>下划线或美元符号</strong> 结束。</li>
</ol>
<div class="hint-container caution">
<p class="hint-container-title">反例</p>
<ul>
<li>_name</li>
<li>__name</li>
<li>$name</li>
<li>name_</li>
<li>name$</li>
<li>name__</li>
</ul>
</div>
<ol start="2">
<li>【强制】所有编程相关的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。</li>
</ol>`,r:{minutes:5.38,words:1615},t:"命名风格",O:1,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/02-%E5%B8%B8%E9%87%8F%E5%AE%9A%E4%B9%89.html",{loader:()=>A(()=>import("./02-常量定义.html-T0itypdE.js"),__vite__mapDeps([130,1])),meta:{d:16077312e5,l:"2020年12月12日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】不允许任何魔法值（即未经预先定义的常量）直接出现在代码中。</li>
</ol>
<div class="hint-container caution">
<p class="hint-container-title">反例</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 本例中同学 A 定义了缓存的 key，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 然后缓存提取的同学 B 使用了 Id#taobao 来提取，少了下划线，导致故障。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> key </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "Id#taobao_"</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> tradeId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">cache</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(key, value);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,r:{minutes:2.02,words:606},t:"常量定义",O:2,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/03-%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F.html",{loader:()=>A(()=>import("./03-代码格式.html-CloFdb8y.js"),__vite__mapDeps([131,1])),meta:{d:16077312e5,l:"2020年12月12日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】如果是大括号内为空，则简洁地写成<code>{}</code>即可，大括号中间无需换行和空格；如果是非空代码块则：</li>
</ol>
<ul>
<li>1） 左大括号前不换行。</li>
<li>2） 左大括号后换行。</li>
<li>3） 右大括号前换行。</li>
<li>4） 右大括号后还有 else 等代码则不换行；表示终止的右大括号后必须换行。</li>
</ul>
<ol start="2">
<li>【强制】左小括号和右边相邻字符之间不出现空格；右小括号和左边相邻字符之间也不出现空格；而左大括号前需要加空格。详见第 5 条下方正例提示。</li>
</ol>`,r:{minutes:3.9,words:1170},t:"代码格式",O:3,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/04-OOP%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./04-OOP规约.html-DXKpgU7V.js"),__vite__mapDeps([132,1])),meta:{d:16127424e5,l:"2021年2月8日",c:"阿里Java开发手册",e:`<ol>
<li>
<p>【强制】避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成本，直接用类名来访问即可。</p>
</li>
<li>
<p>【强制】所有的覆写方法，必须加@Override 注解。</p>
</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>getObject()与 get0bject()的问题。一个是字母的 O，一个是数字的 0，加@Override 可以准确判断是否覆盖成功。另外，如果在抽象类中对方法签名进行修改，其实现类会马上编译报错。</p>
</div>`,r:{minutes:8.82,words:2645},t:"OOP 规约",O:4,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/05-%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4.html",{loader:()=>A(()=>import("./05-日期时间.html-BAUFxpdm.js"),__vite__mapDeps([133,1])),meta:{d:1613088e6,l:"2021年2月12日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】日期格式化时，传入 pattern 中表示年份统一使用小写的 y。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>日期格式化时，yyyy 表示当天所在的年，而大写的 YYYY 代表是 week in which year（JDK7 之后引入的概念），意思是当天所在的周属于的年份，一周从周日开始，周六结束，只要本周跨年，返回的 YYYY就是下一年。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">正例</p>
<p>表示日期和时间的格式如下所示：</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> SimpleDateFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"yyyy-MM-dd HH:mm:ss"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></div>`,r:{minutes:2.28,words:684},t:"日期时间",O:5,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/06-%E9%9B%86%E5%90%88%E5%A4%84%E7%90%86.html",{loader:()=>A(()=>import("./06-集合处理.html-DV4MBpCO.js"),__vite__mapDeps([134,1])),meta:{d:1613088e6,l:"2021年2月12日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】关于 <code>hashCode</code> 和 <code>equals</code> 的处理，遵循如下规则：</li>
</ol>
<ul>
<li>1） 只要重写<code>equals</code>，就必须重写<code>hashCode</code>。</li>
<li>2） 因为<code>Set</code>存储的是不重复的对象，依据<code>hashCode</code>和<code>equals</code>进行判断，所以<code>Set</code>存储的对象必须重写这两个方法。</li>
<li>3） 如果自定义对象作为<code>Map</code>的键，那么必须覆写<code>hashCode</code>和<code>equals</code>。</li>
</ul>`,r:{minutes:8.42,words:2525},t:"集合处理",O:6,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/07-%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86.html",{loader:()=>A(()=>import("./07-并发处理.html-CarY5Uah.js"),__vite__mapDeps([135,1])),meta:{d:16131744e5,l:"2021年2月13日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】获取单例对象需要保证线程安全，其中的方法也要保证线程安全。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>资源驱动类、工具类、单例工厂类都需要注意。</p>
</div>
<ol start="2">
<li>【强制】创建线程或线程池时请指定有意义的线程名称，方便出错时回溯。</li>
</ol>
<div class="hint-container tip">
<p class="hint-container-title">正例</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 自定义线程工厂，并且根据外部特征进行分组，比如，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 来自同一机房的调用，把机房编号赋值给whatFeaturOfGroup</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> UserThreadFactory</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> ThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">	private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> namePrefix</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">	private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> AtomicInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> nextId </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> AtomicInteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">	// 定义线程组名称，在 jstack 问题排查时，非常有帮助</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">	UserThreadFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> whatFeaturOfGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">		namePrefix </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "From UserThreadFactory's "</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> whatFeaturOfGroup </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "-Worker-"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">	@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">		public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Thread</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> newThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Runnable</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> task</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">		String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> namePrefix </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> nextId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getAndIncrement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">		Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> thread</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, task, name, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">		System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">		return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> thread; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">	}</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3">
<li>【强制】线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>线程池的好处是减少在创建和销毁线程上所消耗的时间以及系统资源的开销，解决资源不足的问题。如果不使用线程池，有可能造成系统创建大量同类线程而导致消耗完内存或者“过度切换”的问题。</p>
</div>
</div>`,r:{minutes:7.66,words:2297},t:"并发处理",O:7,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/08-%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5.html",{loader:()=>A(()=>import("./08-控制语句.html-BB7fjpp-.js"),__vite__mapDeps([136,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】在一个 switch 块内，每个 case 要么通过 continue/break/return 等来终止，要么注释说明程序将继续执行到哪一个 case 为止；在一个 switch 块内，都必须包含一个 defaul语句并且放在最后，即使它什么代码也没有。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>注意 break 是退出 switch 语句块，而 return 是退出方法体。</p>
</div>
<ol start="2">
<li>【强制】当 switch 括号内的变量类型为 String 并且此变量为外部参数时，必须先进行 null判断。</li>
</ol>`,r:{minutes:5.67,words:1701},t:"控制语句",O:8,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/09-%E6%B3%A8%E9%87%8A%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./09-注释规约.html-Cf-MN2z9.js"),__vite__mapDeps([137,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】类、类属性、类方法的注释必须使用 Javadoc 规范，使用<code>/**内容*/</code>格式，不得使用<code>// xxx</code>方式。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>在 IDE 编辑窗口中，Javadoc 方式会提示相关注释，生成 Javadoc 可以正确输出相应注释；在 IDE中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高阅读效率。</p>
</div>
<ol start="2">
<li>【强制】所有的<code>抽象方法（包括接口中的方法）</code>必须要用 Javadoc 注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能。</li>
</ol>`,r:{minutes:3.69,words:1107},t:"注释规约",O:9,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/10-%E5%85%B6%E5%AE%83.html",{loader:()=>A(()=>import("./10-其它.html-f_HT6iMK.js"),__vite__mapDeps([138,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>不要在方法体内定义：<code>Pattern pattern = Pattern.compile(“规则”);</code></p>
</div>
<ol start="2">
<li>【强制】避免用<code>Apache Beanutils</code>进行属性的 copy。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p><code>Apache BeanUtils </code>性能较差，可以使用其他方案比如<code> Spring BeanUtils</code>,<code> Cglib BeanCopier</code>，注意均是浅拷贝。
3. 【强制】 velocity 调用 POJO 类的属性时，直接使用属性名取值即可，模板引擎会自动按规范调用 POJO 的 getXxx()，如果是 boolean 基本数据类型变量（boolean 命名不需要加 is 前缀），会自动调用 isXxx()方法。</p>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>注意如果是 Boolean 包装类对象，优先调用 getXxx()的方法。</p>
</div>
</div>`,r:{minutes:1.82,words:545},t:"其它",O:10,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/11-%E9%94%99%E8%AF%AF%E7%A0%81.html",{loader:()=>A(()=>import("./11-错误码.html-gBIptGCF.js"),__vite__mapDeps([139,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】错误码的制定原则：快速溯源、简单易记、沟通标准化。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>错误码想得过于完美和复杂，就像康熙字典中的生僻字一样，用词似乎精准，但是字典不容易随身携带并且简单易懂。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">正例</p>
<p>错误码回答的问题是谁的错？错在哪？</p>
<ul>
<li>1）错误码必须能够快速知晓错误来源，可快速判断是谁的问题。</li>
<li>2）错误码易于记忆和比对（代码中容易 equals）。</li>
<li>3）错误码能够脱离文档和系统平台达到线下轻量化地自由沟通的目的。</li>
</ul>
</div>`,r:{minutes:3.42,words:1026},t:"错误码",O:11,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/12-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html",{loader:()=>A(()=>import("./12-异常处理.html-CIVPEgbU.js"),__vite__mapDeps([140,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】Java 类库中定义的可以通过预检查方式规避的 <code>RuntimeException</code> 异常不应该通过 catch 的方式来处理，比如：<code>NullPointerException</code>，<code>IndexOutOfBoundsException</code> 等等。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>无法通过预检查的异常除外，比如，在解析字符串形式的数字时，可能存在数字格式错误，不得不通过 catch NumberFormatException 来实现。</p>
</div>`,r:{minutes:5.19,words:1556},t:"异常处理",O:12,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/13-%E6%97%A5%E5%BF%97%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./13-日志规约.html-BoED_fHI.js"),__vite__mapDeps([141,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】应用中不可直接使用日志系统（Log4j、Logback）中的 API，而应依赖使用日志框架（SLF4J、JCL--Jakarta Commons Logging）中的 API，使用门面模式的日志框架，有利于维护和
各个类的日志处理方式统一。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 日志框架（SLF4J、JCL--Jakarta Commons Logging）的使用方式（推荐使用 SLF4J）使用 SLF4J：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> org.slf4j.Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> org.slf4j.LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Test</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 使用 JCL：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> org.apache.commons.logging.Log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> org.apache.commons.logging.LogFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> Log</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> log </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> LogFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getLog</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Test</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,r:{minutes:4.18,words:1253},t:"日志规约",O:13,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/14-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html",{loader:()=>A(()=>import("./14-单元测试.html-Br-kpJL4.js"),__vite__mapDeps([142,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】好的单元测试必须遵守 AIR 原则。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>单元测试在线上运行时，感觉像空气（AIR）一样并不存在，但在测试质量的保障上，却是非常关键的。好的单元测试宏观上来说，具有自动化、独立性、可重复执行的特点。</p>
<ul>
<li>A：Automatic（自动化）</li>
<li>I：Independent（独立性）</li>
<li>R：Repeatable（可重复）</li>
</ul>
<ol start="2">
<li>【强制】单元测试应该是全自动执行的，并且非交互式的。测试用例通常是被定期执行的，执行过程必须完全自动化才有意义。输出结果需要人工检查的测试不是一个好的单元测试。单元测试中不准使用 System.out 来进行人肉验证，必须使用 assert 来验证。</li>
<li>【强制】保持单元测试的独立性。为了保证单元测试稳定可靠且便于维护，单元测试用例之间决不能互相调用，也不能依赖执行的先后次序。</li>
</ol>
<div class="hint-container caution">
<p class="hint-container-title">反例</p>
<p>method2 需要依赖 method1 的执行，将执行结果作为 method2 的输入。</p>
</div>
</div>`,r:{minutes:4.96,words:1489},t:"单元测试",O:14,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/15-%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./15-安全规约.html-BJ9yfo16.js"),__vite__mapDeps([143,1])),meta:{d:16132608e5,l:"2021年2月14日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】隶属于用户个人的页面或者功能必须进行权限控制校验。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>防止没有做水平权限校验就可随意访问、修改、删除别人的数据，比如查看他人的私信内容。</p>
</div>
<ol start="2">
<li>【强制】用户敏感数据禁止直接展示，必须对展示数据进行脱敏。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>中国大陆个人手机号码显示为:137****0969，隐藏中间 4 位，防止隐私泄露。
::;
3. 【强制】用户输入的 SQL 参数严格使用参数绑定或者 METADATA 字段值限定，防止 SQL 注入，禁止字符串拼接 SQL 访问数据库。</p>
<div class="hint-container caution">
<p class="hint-container-title">反例</p>
<p>某系统签名大量被恶意修改，即是因为对于危险字符 # --没有进行转义，导致数据库更新时，where后边的信息被注释掉，对全库进行更新。</p>
</div>
</div>`,r:{minutes:2.37,words:711},t:"安全规约",O:15,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/16-%E5%BB%BA%E8%A1%A8%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./16-建表规约.html-Bd-xmpNJ.js"),__vite__mapDeps([144,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】表达是与否概念的字段，必须使用 <code>is_xxx</code> 的方式命名，数据类型是 <code>unsigned tinyint（1 表示是，0 表示否）</code>。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>任何字段如果为非负数，必须是 <code>unsigned</code>。</p>
</div>
<div class="hint-container note">
<p class="hint-container-title">注意</p>
<p>POJO 类中的任何布尔类型的变量，都不要加 is 前缀，所以，需要在<code>&lt;resultMap&gt;</code>设置从 is_xxx 到Xxx 的映射关系。数据库表示是与否的值，使用 tinyint 类型，坚持 is_xxx 的命名方式是为了明确其取值含义与取值范围。</p>
</div>`,r:{minutes:3.37,words:1010},t:"建表规约",O:16,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/17-%E7%B4%A2%E5%BC%95%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./17-索引规约.html-DVkZ2Ckd.js"),__vite__mapDeps([145,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】业务上具有唯一特性的字段，即使是组合字段，也必须建成唯一索引。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>不要以为唯一索引影响了 insert 速度，这个速度损耗可以忽略，但提高查找速度是明显的；另外，即使在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必然有脏数据产生。</p>
</div>
<ol start="2">
<li>【强制】超过三个表禁止 join。需要 join 的字段，数据类型保持绝对一致；多表关联查询时，保证被关联的字段需要有索引。</li>
</ol>`,r:{minutes:3.83,words:1150},t:"索引规约",O:17,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/18-SQL%E8%AF%AD%E5%8F%A5.html",{loader:()=>A(()=>import("./18-SQL语句.html-BrAtRCzf.js"),__vite__mapDeps([146,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】不要使用 count(列名)或 count(常量)来替代 count(<em>)，count(</em>)是 SQL92 定义的标准统计行数的语法，跟数据库无关，跟 NULL 和非 NULL 无关。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>count(*)会统计值为 NULL 的行，而 count(列名)不会统计此列为 NULL 值的行。</p>
</div>
<ol start="2">
<li>【强制】count(distinct col) 计算该列除 NULL 之外的不重复行数，注意 count(distinct col1, col2) 如果其中一列全为 NULL，那么即使另一列有不同的值，也返回为 0。</li>
<li>【强制】当某一列的值全是 NULL 时，count(col)的返回结果为 0，但 sum(col)的返回结果为NULL，因此使用 sum()时需注意 NPE 问题。</li>
</ol>`,r:{minutes:3.63,words:1089},t:"SQL语句",O:18,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/19-ORM%E6%98%A0%E5%B0%84.html",{loader:()=>A(()=>import("./19-ORM映射.html-DCVvD-LR.js"),__vite__mapDeps([147,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】在表查询中，一律不要使用 * 作为查询的字段列表，需要哪些字段必须明确写明。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<ul>
<li>1）增加查询分析器解析成本。</li>
<li>2）增减字段容易与 resultMap 配置不一致。</li>
<li>3）无用字段增加网络消耗，尤其是 text 类型的字段。</li>
</ul>
</div>
<ol start="2">
<li>【强制】POJO 类的布尔属性不能加 is，而数据库字段必须加 is_，要求在 resultMap 中进行字段与属性之间的映射。</li>
</ol>`,r:{minutes:2.22,words:666},t:"ORM映射",O:19,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/20-%E5%BA%94%E7%94%A8%E5%88%86%E5%B1%82.html",{loader:()=>A(()=>import("./20-应用分层.html-BsRfdgWv.js"),__vite__mapDeps([148,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【推荐】图中默认上层依赖于下层，箭头关系表示可直接依赖，如：开放接口层可以依赖于Web 层，也可以直接依赖于 Service 层，依此类推：
</li>
</ol>
<ul>
<li>开放接口层：可直接封装 Service 方法暴露成 RPC 接口；通过 Web 封装成 http 接口；网关控制层等。</li>
<li>终端显示层：各个端的模板渲染并执行显示的层。当前主要是 velocity 渲染，JS 渲染，JSP 渲染，移动端展示等。</li>
<li>Web 层：主要是对访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。</li>
<li>Service 层：相对具体的业务逻辑服务层。</li>
<li>Manager 层：通用业务处理层，它有如下特征：
<ul>
<li>1） 对第三方平台封装的层，预处理返回结果及转化异常信息。</li>
<li>2） 对 Service 层通用能力的下沉，如缓存方案、中间件通用处理。</li>
<li>3） 与 DAO 层交互，对多个 DAO 的组合复用。</li>
</ul>
</li>
<li>DAO 层：数据访问层，与底层 MySQL、Oracle、Hbase、OB 等进行数据交互。</li>
<li>外部接口或第三方平台：包括其它部门 RPC 开放接口，基础平台，其它公司的 HTTP 接口。</li>
</ul>`,r:{minutes:2.47,words:742},t:"应用分层",O:20,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/21-%E4%BA%8C%E6%96%B9%E5%BA%93%E4%BE%9D%E8%B5%96.html",{loader:()=>A(()=>import("./21-二方库依赖.html-CiRm2Rru.js"),__vite__mapDeps([149,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】定义 GAV 遵从以下规则：</li>
</ol>
<ul>
<li>1） GroupID 格式：com.{公司/BU }.业务线 [.子业务线]，最多 4 级。</li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>{公司/BU} 例如：alibaba/taobao/tmall/aliexpress 等 BU 一级；子业务线可选。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">正例</p>
<p>com.taobao.jstorm 或 com.alibaba.dubbo.register</p>
</div>`,r:{minutes:3.77,words:1131},t:"二方库依赖",O:21,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/22-%E6%9C%8D%E5%8A%A1%E5%99%A8.html",{loader:()=>A(()=>import("./22-服务器.html-CneVEMdA.js"),__vite__mapDeps([150,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【推荐】高并发服务器建议调小 TCP 协议的 time_wait 超时时间。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>操作系统默认 240 秒后，才会关闭处于 time_wait 状态的连接，在高并发访问下，服务器端会因为处于 time_wait 的连接数太多，可能无法建立新的连接，所以需要在服务器上调小此等待值。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">正例</p>
<p>在 linux 服务器上请通过变更/etc/sysctl.conf 文件去修改该缺省值（秒）：net.ipv4.tcp_fin_timeout = 30</p>
</div>`,r:{minutes:1.56,words:467},t:"服务器",O:22,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/23-%E8%AE%BE%E8%AE%A1%E8%A7%84%E7%BA%A6.html",{loader:()=>A(()=>import("./23-设计规约.html-CE95F_jp.js"),__vite__mapDeps([151,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>【强制】存储方案和底层数据结构的设计获得评审一致通过，并沉淀成为文档。</li>
</ol>
<div class="hint-container warning">
<p class="hint-container-title">说明</p>
<p>有缺陷的底层数据结构容易导致系统风险上升，可扩展性下降，重构成本也会因历史数据迁移和系统平滑过渡而陡然增加，所以，存储方案和数据结构需要认真地进行设计和评审，生产环境提交执行后，
需要进行 double check。</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">正例</p>
<p>评审内容包括存储介质选型、表结构设计能否满足技术方案、存取性能和存储空间能否满足业务发展、表或字段之间的辩证关系、字段名称、字段类型、索引等；数据结构变更（如在原有表中新增字段）
也需要进行评审通过后上线。</p>
</div>`,r:{minutes:6.89,words:2068},t:"设计规约",O:23,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/24-%E4%B8%93%E6%9C%89%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html",{loader:()=>A(()=>import("./24-专有名词解释.html-B8bEOiSy.js"),__vite__mapDeps([152,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<ol>
<li>CAS（Compare And Swap）: 阿里巴巴专指数据库表一一对应的 POJO 类。解决多线程并行情况下使用锁造成性能损耗的一种机制，这是硬件实现的原子操作。CAS 操作包含三个操作
数：内存位置、预期原值和新值。如果内存位置的值与预期原值相匹配，那么处理器会自动将该位置值更新为新值。否则，处理器不做任何操作。</li>
<li>DO（Data Object）: 阿里巴巴专指数据库表一一对应的 POJO 类。</li>
<li>GAV（GroupId、ArtifactId、Version）: Maven 坐标，是用来唯一标识 jar 包。</li>
<li>OOP（Object Oriented Programming）: 本文泛指类、对象的编程处理方式。</li>
<li>AQS（AbstractQueuedSynchronizer）: 利用先进先出队列实现的底层同步工具类，它是很多上层同步实现类的基础，比如：ReentrantLock、CountDownLatch、Semaphore 等，它们通
过继承 AQS 实现其模版方法，然后将 AQS 子类作为同步组件的内部类，通常命名为 Sync。</li>
<li>ORM（Object Relation Mapping）: 对象关系映射，对象领域模型与底层数据之间的转换，本文泛指 iBATIS, mybatis 等框架。</li>
<li>POJO（Plain Ordinary Java Object）: 在本规约中，POJO 专指只有 setter/getter/toString 的简单类，包括 DO/DTO/BO/VO 等。</li>
<li>AO（Application Object）: 阿里巴巴专指 Application Object，即在 Service 层上，极为贴近业务的复用代码。</li>
<li>NPE（java.lang.NullPointerException）: 空指针异常。</li>
<li>OOM（Out Of Memory）: 源于 java.lang.OutOfMemoryError，当 JVM 没有足够的内存来为对象分配空间并且垃圾回收器也无法回收空间时，系统出现的严重状况。</li>
<li>一方库: 本工程内部子项目模块依赖的库（jar 包）。</li>
<li>二方库: 公司内部发布到中央仓库，可供公司内部其它应用依赖的库（jar 包）。</li>
<li>三方库: 公司之外的开源库（jar 包）。</li>
</ol>`,r:{minutes:1.63,words:489},t:"专有名词解释",O:24,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/25-%E9%94%99%E8%AF%AF%E7%A0%81%E5%88%97%E8%A1%A8.html",{loader:()=>A(()=>import("./25-错误码列表.html-BkYzUkyO.js"),__vite__mapDeps([153,1])),meta:{d:16133472e5,l:"2021年2月15日",c:"阿里Java开发手册",e:`<p>




</p>
`,r:{minutes:.09,words:26},t:"错误码列表",O:25,y:"a"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/%E6%89%8B%E6%8A%84%E7%89%88.html",{loader:()=>A(()=>import("./手抄版.html-DCMbYHyl.js"),__vite__mapDeps([154,1])),meta:{t:"Java开发手册手抄版",i:"home",O:26}}],["/404.html",{loader:()=>A(()=>import("./404.html-V0hjt1Ve.js"),__vite__mapDeps([155,1])),meta:{t:""}}],["/ApacheNIFI%E5%BC%80%E5%8F%91/",{loader:()=>A(()=>import("./index.html-CC4iuST5.js"),__vite__mapDeps([156,1])),meta:{t:"Apache NIFI开发"}}],["/ApacheNIFI%E6%95%99%E7%A8%8B/",{loader:()=>A(()=>import("./index.html-MZ3QpB4E.js"),__vite__mapDeps([157,1])),meta:{t:"Apache NIFI教程"}}],["/IO%E6%B5%81(java)/",{loader:()=>A(()=>import("./index.html-BXwaok11.js"),__vite__mapDeps([158,1])),meta:{t:"IO流(java)"}}],["/JAVA/",{loader:()=>A(()=>import("./index.html-iWOq-sm5.js"),__vite__mapDeps([159,1])),meta:{t:"JAVA"}}],["/JOLT/",{loader:()=>A(()=>import("./index.html-sOTwhthQ.js"),__vite__mapDeps([160,1])),meta:{t:"JOLT"}}],["/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/",{loader:()=>A(()=>import("./index.html-D2Xifwg2.js"),__vite__mapDeps([161,1])),meta:{t:"Spring常见错误"}}],["/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/",{loader:()=>A(()=>import("./index.html-D07Dg_DC.js"),__vite__mapDeps([162,1])),meta:{t:"数据库 CDC"}}],["/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>A(()=>import("./index.html-Cgu2KLqJ.js"),__vite__mapDeps([163,1])),meta:{t:"深入浅出 Java多线程"}}],["/%E7%AE%97%E6%B3%95/",{loader:()=>A(()=>import("./index.html-B3MbM2Co.js"),__vite__mapDeps([164,1])),meta:{t:"算法"}}],["/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/",{loader:()=>A(()=>import("./index.html-CXu5v_3w.js"),__vite__mapDeps([165,1])),meta:{t:"阿里 Java开发手册"}}],["/category/",{loader:()=>A(()=>import("./index.html-Duae6afY.js"),__vite__mapDeps([166,1])),meta:{t:"分类",I:!1}}],["/category/apachenifi%E5%BC%80%E5%8F%91/",{loader:()=>A(()=>import("./index.html-DrwcxWr9.js"),__vite__mapDeps([167,1])),meta:{t:"ApacheNIFI开发 分类",I:!1}}],["/category/apachenifi%E6%95%99%E7%A8%8B/",{loader:()=>A(()=>import("./index.html-5_SyRr1R.js"),__vite__mapDeps([168,1])),meta:{t:"ApacheNIFI教程 分类",I:!1}}],["/category/java/",{loader:()=>A(()=>import("./index.html-CHfkRuyF.js"),__vite__mapDeps([169,1])),meta:{t:"Java 分类",I:!1}}],["/category/jvm/",{loader:()=>A(()=>import("./index.html-BNdR9iCn.js"),__vite__mapDeps([170,1])),meta:{t:"JVM 分类",I:!1}}],["/category/jolt/",{loader:()=>A(()=>import("./index.html-B_rNGm5Z.js"),__vite__mapDeps([171,1])),meta:{t:"Jolt 分类",I:!1}}],["/category/spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/",{loader:()=>A(()=>import("./index.html-DkQthL7O.js"),__vite__mapDeps([172,1])),meta:{t:"Spring常见错误 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>A(()=>import("./index.html-CGu7mdjW.js"),__vite__mapDeps([173,1])),meta:{t:"数据库 分类",I:!1}}],["/category/cdc/",{loader:()=>A(()=>import("./index.html-eyIRDnL8.js"),__vite__mapDeps([174,1])),meta:{t:"CDC 分类",I:!1}}],["/category/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAjava%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>A(()=>import("./index.html-CiLzeJO_.js"),__vite__mapDeps([175,1])),meta:{t:"深入浅出Java多线程 分类",I:!1}}],["/category/%E7%AE%97%E6%B3%95/",{loader:()=>A(()=>import("./index.html-DFqdE5RZ.js"),__vite__mapDeps([176,1])),meta:{t:"算法 分类",I:!1}}],["/category/%E9%98%BF%E9%87%8Cjava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/",{loader:()=>A(()=>import("./index.html-DKqMZdsp.js"),__vite__mapDeps([177,1])),meta:{t:"阿里Java开发手册 分类",I:!1}}],["/tag/",{loader:()=>A(()=>import("./index.html-DS5gatQa.js"),__vite__mapDeps([178,1])),meta:{t:"标签",I:!1}}],["/tag/nifi/",{loader:()=>A(()=>import("./index.html-CVezFrlK.js"),__vite__mapDeps([179,1])),meta:{t:"标签: NIFI",I:!1}}],["/tag/spring/",{loader:()=>A(()=>import("./index.html-DrnQL6BI.js"),__vite__mapDeps([180,1])),meta:{t:"标签: Spring",I:!1}}],["/article/",{loader:()=>A(()=>import("./index.html-BiwKskjj.js"),__vite__mapDeps([181,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>A(()=>import("./index.html-xIHMTvJZ.js"),__vite__mapDeps([182,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>A(()=>import("./index.html-CMBWwZUJ.js"),__vite__mapDeps([183,1])),meta:{t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.4.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const Ca=typeof document<"u";function mB(s){return s.__esModule||s[Symbol.toStringTag]==="Module"}const os=Object.assign;function Ul(s,i){const a={};for(const n in i){const l=i[n];a[n]=ui(l)?l.map(s):s(l)}return a}const tn=()=>{},ui=Array.isArray,Ap=/#/g,DB=/&/g,fB=/\//g,bB=/=/g,_B=/\?/g,Fp=/\+/g,IB=/%5B/g,SB=/%5D/g,vp=/%5E/g,wB=/%60/g,Cp=/%7B/g,OB=/%7C/g,mp=/%7D/g,TB=/%20/g;function ne(s){return encodeURI(""+s).replace(OB,"|").replace(IB,"[").replace(SB,"]")}function PB(s){return ne(s).replace(Cp,"{").replace(mp,"}").replace(vp,"^")}function yt(s){return ne(s).replace(Fp,"%2B").replace(TB,"+").replace(Ap,"%23").replace(DB,"%26").replace(wB,"`").replace(Cp,"{").replace(mp,"}").replace(vp,"^")}function NB(s){return yt(s).replace(bB,"%3D")}function LB(s){return ne(s).replace(Ap,"%23").replace(_B,"%3F")}function xB(s){return s==null?"":LB(s).replace(fB,"%2F")}function cn(s){try{return decodeURIComponent(""+s)}catch{}return""+s}const RB=/\/$/,MB=s=>s.replace(RB,"");function Gl(s,i,a="/"){let n,l={},t="",e="";const k=i.indexOf("#");let p=i.indexOf("?");return k<p&&k>=0&&(p=-1),p>-1&&(n=i.slice(0,p),t=i.slice(p+1,k>-1?k:i.length),l=s(t)),k>-1&&(n=n||i.slice(0,k),e=i.slice(k,i.length)),n=VB(n??i,a),{fullPath:n+(t&&"?")+t+e,path:n,query:l,hash:cn(e)}}function $B(s,i){const a=i.query?s(i.query):"";return i.path+(a&&"?")+a+(i.hash||"")}function vh(s,i){return!i||!s.toLowerCase().startsWith(i.toLowerCase())?s:s.slice(i.length)||"/"}function JB(s,i,a){const n=i.matched.length-1,l=a.matched.length-1;return n>-1&&n===l&&Na(i.matched[n],a.matched[l])&&Dp(i.params,a.params)&&s(i.query)===s(a.query)&&i.hash===a.hash}function Na(s,i){return(s.aliasOf||s)===(i.aliasOf||i)}function Dp(s,i){if(Object.keys(s).length!==Object.keys(i).length)return!1;for(const a in s)if(!jB(s[a],i[a]))return!1;return!0}function jB(s,i){return ui(s)?Ch(s,i):ui(i)?Ch(i,s):s===i}function Ch(s,i){return ui(i)?s.length===i.length&&s.every((a,n)=>a===i[n]):s.length===1&&s[0]===i}function VB(s,i){if(s.startsWith("/"))return s;if(!s)return i;const a=i.split("/"),n=s.split("/"),l=n[n.length-1];(l===".."||l===".")&&n.push("");let t=a.length-1,e,k;for(e=0;e<n.length;e++)if(k=n[e],k!==".")if(k==="..")t>1&&t--;else break;return a.slice(0,t).join("/")+"/"+n.slice(e).join("/")}const Ti={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var on;(function(s){s.pop="pop",s.push="push"})(on||(on={}));var en;(function(s){s.back="back",s.forward="forward",s.unknown=""})(en||(en={}));function HB(s){if(!s)if(Ca){const i=document.querySelector("base");s=i&&i.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),MB(s)}const zB=/^[^#]+#/;function UB(s,i){return s.replace(zB,"#")+i}function GB(s,i){const a=document.documentElement.getBoundingClientRect(),n=s.getBoundingClientRect();return{behavior:i.behavior,left:n.left-a.left-(i.left||0),top:n.top-a.top-(i.top||0)}}const Dl=()=>({left:window.scrollX,top:window.scrollY});function WB(s){let i;if("el"in s){const a=s.el,n=typeof a=="string"&&a.startsWith("#"),l=typeof a=="string"?n?document.getElementById(a.slice(1)):document.querySelector(a):a;if(!l)return;i=GB(l,s)}else i=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(i):window.scrollTo(i.left!=null?i.left:window.scrollX,i.top!=null?i.top:window.scrollY)}function mh(s,i){return(history.state?history.state.position-i:-1)+s}const Et=new Map;function qB(s,i){Et.set(s,i)}function KB(s){const i=Et.get(s);return Et.delete(s),i}let YB=()=>location.protocol+"//"+location.host;function fp(s,i){const{pathname:a,search:n,hash:l}=i,t=s.indexOf("#");if(t>-1){let k=l.includes(s.slice(t))?s.slice(t).length:1,p=l.slice(k);return p[0]!=="/"&&(p="/"+p),vh(p,"")}return vh(a,s)+n+l}function QB(s,i,a,n){let l=[],t=[],e=null;const k=({state:B})=>{const c=fp(s,location),E=a.value,F=i.value;let m=0;if(B){if(a.value=c,i.value=B,e&&e===E){e=null;return}m=F?B.position-F.position:0}else n(c);l.forEach(C=>{C(a.value,E,{delta:m,type:on.pop,direction:m?m>0?en.forward:en.back:en.unknown})})};function p(){e=a.value}function r(B){l.push(B);const c=()=>{const E=l.indexOf(B);E>-1&&l.splice(E,1)};return t.push(c),c}function d(){const{history:B}=window;B.state&&B.replaceState(os({},B.state,{scroll:Dl()}),"")}function g(){for(const B of t)B();t=[],window.removeEventListener("popstate",k),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",k),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:p,listen:r,destroy:g}}function Dh(s,i,a,n=!1,l=!1){return{back:s,current:i,forward:a,replaced:n,position:window.history.length,scroll:l?Dl():null}}function XB(s){const{history:i,location:a}=window,n={value:fp(s,a)},l={value:i.state};l.value||t(n.value,{back:null,current:n.value,forward:null,position:i.length-1,replaced:!0,scroll:null},!0);function t(p,r,d){const g=s.indexOf("#"),B=g>-1?(a.host&&document.querySelector("base")?s:s.slice(g))+p:YB()+s+p;try{i[d?"replaceState":"pushState"](r,"",B),l.value=r}catch(c){console.error(c),a[d?"replace":"assign"](B)}}function e(p,r){const d=os({},i.state,Dh(l.value.back,p,l.value.forward,!0),r,{position:l.value.position});t(p,d,!0),n.value=p}function k(p,r){const d=os({},l.value,i.state,{forward:p,scroll:Dl()});t(d.current,d,!0);const g=os({},Dh(n.value,p,null),{position:d.position+1},r);t(p,g,!1),n.value=p}return{location:n,state:l,push:k,replace:e}}function ZB(s){s=HB(s);const i=XB(s),a=QB(s,i.state,i.location,i.replace);function n(t,e=!0){e||a.pauseListeners(),history.go(t)}const l=os({location:"",base:s,go:n,createHref:UB.bind(null,s)},i,a);return Object.defineProperty(l,"location",{enumerable:!0,get:()=>i.location.value}),Object.defineProperty(l,"state",{enumerable:!0,get:()=>i.state.value}),l}function sc(s){return typeof s=="string"||s&&typeof s=="object"}function bp(s){return typeof s=="string"||typeof s=="symbol"}const _p=Symbol("");var fh;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(fh||(fh={}));function La(s,i){return os(new Error,{type:s,[_p]:!0},i)}function wi(s,i){return s instanceof Error&&_p in s&&(i==null||!!(s.type&i))}const bh="[^/]+?",ic={sensitive:!1,strict:!1,start:!0,end:!0},ac=/[.+*?^${}()[\]/\\]/g;function nc(s,i){const a=os({},ic,i),n=[];let l=a.start?"^":"";const t=[];for(const r of s){const d=r.length?[]:[90];a.strict&&!r.length&&(l+="/");for(let g=0;g<r.length;g++){const B=r[g];let c=40+(a.sensitive?.25:0);if(B.type===0)g||(l+="/"),l+=B.value.replace(ac,"\\$&"),c+=40;else if(B.type===1){const{value:E,repeatable:F,optional:m,regexp:C}=B;t.push({name:E,repeatable:F,optional:m});const D=C||bh;if(D!==bh){c+=10;try{new RegExp(`(${D})`)}catch(b){throw new Error(`Invalid custom RegExp for param "${E}" (${D}): `+b.message)}}let u=F?`((?:${D})(?:/(?:${D}))*)`:`(${D})`;g||(u=m&&r.length<2?`(?:/${u})`:"/"+u),m&&(u+="?"),l+=u,c+=20,m&&(c+=-8),F&&(c+=-20),D===".*"&&(c+=-50)}d.push(c)}n.push(d)}if(a.strict&&a.end){const r=n.length-1;n[r][n[r].length-1]+=.7000000000000001}a.strict||(l+="/?"),a.end?l+="$":a.strict&&(l+="(?:/|$)");const e=new RegExp(l,a.sensitive?"":"i");function k(r){const d=r.match(e),g={};if(!d)return null;for(let B=1;B<d.length;B++){const c=d[B]||"",E=t[B-1];g[E.name]=c&&E.repeatable?c.split("/"):c}return g}function p(r){let d="",g=!1;for(const B of s){(!g||!d.endsWith("/"))&&(d+="/"),g=!1;for(const c of B)if(c.type===0)d+=c.value;else if(c.type===1){const{value:E,repeatable:F,optional:m}=c,C=E in r?r[E]:"";if(ui(C)&&!F)throw new Error(`Provided param "${E}" is an array but it is not repeatable (* or + modifiers)`);const D=ui(C)?C.join("/"):C;if(!D)if(m)B.length<2&&(d.endsWith("/")?d=d.slice(0,-1):g=!0);else throw new Error(`Missing required param "${E}"`);d+=D}}return d||"/"}return{re:e,score:n,keys:t,parse:k,stringify:p}}function lc(s,i){let a=0;for(;a<s.length&&a<i.length;){const n=i[a]-s[a];if(n)return n;a++}return s.length<i.length?s.length===1&&s[0]===80?-1:1:s.length>i.length?i.length===1&&i[0]===80?1:-1:0}function Ip(s,i){let a=0;const n=s.score,l=i.score;for(;a<n.length&&a<l.length;){const t=lc(n[a],l[a]);if(t)return t;a++}if(Math.abs(l.length-n.length)===1){if(_h(n))return 1;if(_h(l))return-1}return l.length-n.length}function _h(s){const i=s[s.length-1];return s.length>0&&i[i.length-1]<0}const tc={type:0,value:""},ec=/[a-zA-Z0-9_]/;function hc(s){if(!s)return[[]];if(s==="/")return[[tc]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function i(c){throw new Error(`ERR (${a})/"${r}": ${c}`)}let a=0,n=a;const l=[];let t;function e(){t&&l.push(t),t=[]}let k=0,p,r="",d="";function g(){r&&(a===0?t.push({type:0,value:r}):a===1||a===2||a===3?(t.length>1&&(p==="*"||p==="+")&&i(`A repeatable param (${r}) must be alone in its segment. eg: '/:ids+.`),t.push({type:1,value:r,regexp:d,repeatable:p==="*"||p==="+",optional:p==="*"||p==="?"})):i("Invalid state to consume buffer"),r="")}function B(){r+=p}for(;k<s.length;){if(p=s[k++],p==="\\"&&a!==2){n=a,a=4;continue}switch(a){case 0:p==="/"?(r&&g(),e()):p===":"?(g(),a=1):B();break;case 4:B(),a=n;break;case 1:p==="("?a=2:ec.test(p)?B():(g(),a=0,p!=="*"&&p!=="?"&&p!=="+"&&k--);break;case 2:p===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+p:a=3:d+=p;break;case 3:g(),a=0,p!=="*"&&p!=="?"&&p!=="+"&&k--,d="";break;default:i("Unknown state");break}}return a===2&&i(`Unfinished custom RegExp for param "${r}"`),g(),e(),l}function kc(s,i,a){const n=nc(hc(s.path),a),l=os(n,{record:s,parent:i,children:[],alias:[]});return i&&!l.record.aliasOf==!i.record.aliasOf&&i.children.push(l),l}function pc(s,i){const a=[],n=new Map;i=wh({strict:!1,end:!0,sensitive:!1},i);function l(g){return n.get(g)}function t(g,B,c){const E=!c,F=rc(g);F.aliasOf=c&&c.record;const m=wh(i,g),C=[F];if("alias"in g){const b=typeof g.alias=="string"?[g.alias]:g.alias;for(const R of b)C.push(os({},F,{components:c?c.record.components:F.components,path:R,aliasOf:c?c.record:F}))}let D,u;for(const b of C){const{path:R}=b;if(B&&R[0]!=="/"){const P=B.record.path,w=P[P.length-1]==="/"?"":"/";b.path=B.record.path+(R&&w+R)}if(D=kc(b,B,m),c?c.alias.push(D):(u=u||D,u!==D&&u.alias.push(D),E&&g.name&&!Sh(D)&&e(g.name)),Sp(D)&&p(D),F.children){const P=F.children;for(let w=0;w<P.length;w++)t(P[w],D,c&&c.children[w])}c=c||D}return u?()=>{e(u)}:tn}function e(g){if(bp(g)){const B=n.get(g);B&&(n.delete(g),a.splice(a.indexOf(B),1),B.children.forEach(e),B.alias.forEach(e))}else{const B=a.indexOf(g);B>-1&&(a.splice(B,1),g.record.name&&n.delete(g.record.name),g.children.forEach(e),g.alias.forEach(e))}}function k(){return a}function p(g){const B=Bc(g,a);a.splice(B,0,g),g.record.name&&!Sh(g)&&n.set(g.record.name,g)}function r(g,B){let c,E={},F,m;if("name"in g&&g.name){if(c=n.get(g.name),!c)throw La(1,{location:g});m=c.record.name,E=os(Ih(B.params,c.keys.filter(u=>!u.optional).concat(c.parent?c.parent.keys.filter(u=>u.optional):[]).map(u=>u.name)),g.params&&Ih(g.params,c.keys.map(u=>u.name))),F=c.stringify(E)}else if(g.path!=null)F=g.path,c=a.find(u=>u.re.test(F)),c&&(E=c.parse(F),m=c.record.name);else{if(c=B.name?n.get(B.name):a.find(u=>u.re.test(B.path)),!c)throw La(1,{location:g,currentLocation:B});m=c.record.name,E=os({},B.params,g.params),F=c.stringify(E)}const C=[];let D=c;for(;D;)C.unshift(D.record),D=D.parent;return{name:m,path:F,params:E,matched:C,meta:gc(C)}}s.forEach(g=>t(g));function d(){a.length=0,n.clear()}return{addRoute:t,resolve:r,removeRoute:e,clearRoutes:d,getRoutes:k,getRecordMatcher:l}}function Ih(s,i){const a={};for(const n of i)n in s&&(a[n]=s[n]);return a}function rc(s){return{path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:void 0,beforeEnter:s.beforeEnter,props:dc(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}}}function dc(s){const i={},a=s.props||!1;if("component"in s)i.default=a;else for(const n in s.components)i[n]=typeof a=="object"?a[n]:a;return i}function Sh(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function gc(s){return s.reduce((i,a)=>os(i,a.meta),{})}function wh(s,i){const a={};for(const n in s)a[n]=n in i?i[n]:s[n];return a}function Bc(s,i){let a=0,n=i.length;for(;a!==n;){const t=a+n>>1;Ip(s,i[t])<0?n=t:a=t+1}const l=cc(s);return l&&(n=i.lastIndexOf(l,n-1)),n}function cc(s){let i=s;for(;i=i.parent;)if(Sp(i)&&Ip(s,i)===0)return i}function Sp({record:s}){return!!(s.name||s.components&&Object.keys(s.components).length||s.redirect)}function oc(s){const i={};if(s===""||s==="?")return i;const n=(s[0]==="?"?s.slice(1):s).split("&");for(let l=0;l<n.length;++l){const t=n[l].replace(Fp," "),e=t.indexOf("="),k=cn(e<0?t:t.slice(0,e)),p=e<0?null:cn(t.slice(e+1));if(k in i){let r=i[k];ui(r)||(r=i[k]=[r]),r.push(p)}else i[k]=p}return i}function Oh(s){let i="";for(let a in s){const n=s[a];if(a=NB(a),n==null){n!==void 0&&(i+=(i.length?"&":"")+a);continue}(ui(n)?n.map(t=>t&&yt(t)):[n&&yt(n)]).forEach(t=>{t!==void 0&&(i+=(i.length?"&":"")+a,t!=null&&(i+="="+t))})}return i}function yc(s){const i={};for(const a in s){const n=s[a];n!==void 0&&(i[a]=ui(n)?n.map(l=>l==null?null:""+l):n==null?n:""+n)}return i}const Ec=Symbol(""),Th=Symbol(""),fl=Symbol(""),le=Symbol(""),ut=Symbol("");function Ga(){let s=[];function i(n){return s.push(n),()=>{const l=s.indexOf(n);l>-1&&s.splice(l,1)}}function a(){s=[]}return{add:i,list:()=>s.slice(),reset:a}}function qi(s,i,a,n,l,t=e=>e()){const e=n&&(n.enterCallbacks[l]=n.enterCallbacks[l]||[]);return()=>new Promise((k,p)=>{const r=B=>{B===!1?p(La(4,{from:a,to:i})):B instanceof Error?p(B):sc(B)?p(La(2,{from:i,to:B})):(e&&n.enterCallbacks[l]===e&&typeof B=="function"&&e.push(B),k())},d=t(()=>s.call(n&&n.instances[l],i,a,r));let g=Promise.resolve(d);s.length<3&&(g=g.then(r)),g.catch(B=>p(B))})}function Wl(s,i,a,n,l=t=>t()){const t=[];for(const e of s)for(const k in e.components){let p=e.components[k];if(!(i!=="beforeRouteEnter"&&!e.instances[k]))if(uc(p)){const d=(p.__vccOpts||p)[i];d&&t.push(qi(d,a,n,e,k,l))}else{let r=p();t.push(()=>r.then(d=>{if(!d)return Promise.reject(new Error(`Couldn't resolve component "${k}" at "${e.path}"`));const g=mB(d)?d.default:d;e.components[k]=g;const c=(g.__vccOpts||g)[i];return c&&qi(c,a,n,e,k,l)()}))}}return t}function uc(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function Ph(s){const i=Ds(fl),a=Ds(le),n=v(()=>{const p=ga(s.to);return i.resolve(p)}),l=v(()=>{const{matched:p}=n.value,{length:r}=p,d=p[r-1],g=a.matched;if(!d||!g.length)return-1;const B=g.findIndex(Na.bind(null,d));if(B>-1)return B;const c=Nh(p[r-2]);return r>1&&Nh(d)===c&&g[g.length-1].path!==c?g.findIndex(Na.bind(null,p[r-2])):B}),t=v(()=>l.value>-1&&Cc(a.params,n.value.params)),e=v(()=>l.value>-1&&l.value===a.matched.length-1&&Dp(a.params,n.value.params));function k(p={}){return vc(p)?i[ga(s.replace)?"replace":"push"](ga(s.to)).catch(tn):Promise.resolve()}return{route:n,href:v(()=>n.value.href),isActive:t,isExactActive:e,navigate:k}}const Ac=$({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Ph,setup(s,{slots:i}){const a=mn(Ph(s)),{options:n}=Ds(fl),l=v(()=>({[Lh(s.activeClass,n.linkActiveClass,"router-link-active")]:a.isActive,[Lh(s.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:a.isExactActive}));return()=>{const t=i.default&&i.default(a);return s.custom?t:h("a",{"aria-current":a.isExactActive?s.ariaCurrentValue:null,href:a.href,onClick:a.navigate,class:l.value},t)}}}),Fc=Ac;function vc(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const i=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(i))return}return s.preventDefault&&s.preventDefault(),!0}}function Cc(s,i){for(const a in i){const n=i[a],l=s[a];if(typeof n=="string"){if(n!==l)return!1}else if(!ui(l)||l.length!==n.length||n.some((t,e)=>t!==l[e]))return!1}return!0}function Nh(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const Lh=(s,i,a)=>s??i??a,mc=$({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:i,slots:a}){const n=Ds(ut),l=v(()=>s.route||n.value),t=Ds(Th,0),e=v(()=>{let r=ga(t);const{matched:d}=l.value;let g;for(;(g=d[r])&&!g.components;)r++;return r}),k=v(()=>l.value.matched[e.value]);Ei(Th,v(()=>e.value+1)),Ei(Ec,k),Ei(ut,l);const p=Y();return ds(()=>[p.value,k.value,s.name],([r,d,g],[B,c,E])=>{d&&(d.instances[g]=r,c&&c!==d&&r&&r===B&&(d.leaveGuards.size||(d.leaveGuards=c.leaveGuards),d.updateGuards.size||(d.updateGuards=c.updateGuards))),r&&d&&(!c||!Na(d,c)||!B)&&(d.enterCallbacks[g]||[]).forEach(F=>F(r))},{flush:"post"}),()=>{const r=l.value,d=s.name,g=k.value,B=g&&g.components[d];if(!B)return xh(a.default,{Component:B,route:r});const c=g.props[d],E=c?c===!0?r.params:typeof c=="function"?c(r):c:null,m=h(B,os({},E,i,{onVnodeUnmounted:C=>{C.component.isUnmounted&&(g.instances[d]=null)},ref:p}));return xh(a.default,{Component:m,route:r})||m}}});function xh(s,i){if(!s)return null;const a=s(i);return a.length===1?a[0]:a}const Dc=mc;function fc(s){const i=pc(s.routes,s),a=s.parseQuery||oc,n=s.stringifyQuery||Oh,l=s.history,t=Ga(),e=Ga(),k=Ga(),p=ws(Ti);let r=Ti;Ca&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=Ul.bind(null,_=>""+_),g=Ul.bind(null,xB),B=Ul.bind(null,cn);function c(_,z){let j,K;return bp(_)?(j=i.getRecordMatcher(_),K=z):K=_,i.addRoute(K,j)}function E(_){const z=i.getRecordMatcher(_);z&&i.removeRoute(z)}function F(){return i.getRoutes().map(_=>_.record)}function m(_){return!!i.getRecordMatcher(_)}function C(_,z){if(z=os({},z||p.value),typeof _=="string"){const y=Gl(a,_,z.path),f=i.resolve({path:y.path},z),S=l.createHref(y.fullPath);return os(y,f,{params:B(f.params),hash:cn(y.hash),redirectedFrom:void 0,href:S})}let j;if(_.path!=null)j=os({},_,{path:Gl(a,_.path,z.path).path});else{const y=os({},_.params);for(const f in y)y[f]==null&&delete y[f];j=os({},_,{params:g(y)}),z.params=g(z.params)}const K=i.resolve(j,z),hs=_.hash||"";K.params=d(B(K.params));const ys=$B(n,os({},_,{hash:PB(hs),path:K.path})),o=l.createHref(ys);return os({fullPath:ys,hash:hs,query:n===Oh?yc(_.query):_.query||{}},K,{redirectedFrom:void 0,href:o})}function D(_){return typeof _=="string"?Gl(a,_,p.value.path):os({},_)}function u(_,z){if(r!==_)return La(8,{from:z,to:_})}function b(_){return w(_)}function R(_){return b(os(D(_),{replace:!0}))}function P(_){const z=_.matched[_.matched.length-1];if(z&&z.redirect){const{redirect:j}=z;let K=typeof j=="function"?j(_):j;return typeof K=="string"&&(K=K.includes("?")||K.includes("#")?K=D(K):{path:K},K.params={}),os({query:_.query,hash:_.hash,params:K.path!=null?{}:_.params},K)}}function w(_,z){const j=r=C(_),K=p.value,hs=_.state,ys=_.force,o=_.replace===!0,y=P(j);if(y)return w(os(D(y),{state:typeof y=="object"?os({},hs,y.state):hs,force:ys,replace:o}),z||j);const f=j;f.redirectedFrom=z;let S;return!ys&&JB(n,K,j)&&(S=La(16,{to:f,from:K}),ni(K,K,!0,!1)),(S?Promise.resolve(S):T(f,K)).catch(I=>wi(I)?wi(I,2)?I:vi(I):q(I,f,K)).then(I=>{if(I){if(wi(I,2))return w(os({replace:o},D(I.to),{state:typeof I.to=="object"?os({},hs,I.to.state):hs,force:ys}),z||f)}else I=N(f,K,!0,o,hs);return H(f,K,I),I})}function U(_,z){const j=u(_,z);return j?Promise.reject(j):Promise.resolve()}function J(_){const z=Si.values().next().value;return z&&typeof z.runWithContext=="function"?z.runWithContext(_):_()}function T(_,z){let j;const[K,hs,ys]=bc(_,z);j=Wl(K.reverse(),"beforeRouteLeave",_,z);for(const y of K)y.leaveGuards.forEach(f=>{j.push(qi(f,_,z))});const o=U.bind(null,_,z);return j.push(o),Ts(j).then(()=>{j=[];for(const y of t.list())j.push(qi(y,_,z));return j.push(o),Ts(j)}).then(()=>{j=Wl(hs,"beforeRouteUpdate",_,z);for(const y of hs)y.updateGuards.forEach(f=>{j.push(qi(f,_,z))});return j.push(o),Ts(j)}).then(()=>{j=[];for(const y of ys)if(y.beforeEnter)if(ui(y.beforeEnter))for(const f of y.beforeEnter)j.push(qi(f,_,z));else j.push(qi(y.beforeEnter,_,z));return j.push(o),Ts(j)}).then(()=>(_.matched.forEach(y=>y.enterCallbacks={}),j=Wl(ys,"beforeRouteEnter",_,z,J),j.push(o),Ts(j))).then(()=>{j=[];for(const y of e.list())j.push(qi(y,_,z));return j.push(o),Ts(j)}).catch(y=>wi(y,8)?y:Promise.reject(y))}function H(_,z,j){k.list().forEach(K=>J(()=>K(_,z,j)))}function N(_,z,j,K,hs){const ys=u(_,z);if(ys)return ys;const o=z===Ti,y=Ca?history.state:{};j&&(K||o?l.replace(_.fullPath,os({scroll:o&&y&&y.scroll},hs)):l.push(_.fullPath,hs)),p.value=_,ni(_,z,j,o),vi()}let Z;function us(){Z||(Z=l.listen((_,z,j)=>{if(!Ci.listening)return;const K=C(_),hs=P(K);if(hs){w(os(hs,{replace:!0}),K).catch(tn);return}r=K;const ys=p.value;Ca&&qB(mh(ys.fullPath,j.delta),Dl()),T(K,ys).catch(o=>wi(o,12)?o:wi(o,2)?(w(o.to,K).then(y=>{wi(y,20)&&!j.delta&&j.type===on.pop&&l.go(-1,!1)}).catch(tn),Promise.reject()):(j.delta&&l.go(-j.delta,!1),q(o,K,ys))).then(o=>{o=o||N(K,ys,!1),o&&(j.delta&&!wi(o,8)?l.go(-j.delta,!1):j.type===on.pop&&wi(o,20)&&l.go(-1,!1)),H(K,ys,o)}).catch(tn)}))}let As=Ga(),W=Ga(),ss;function q(_,z,j){vi(_);const K=W.list();return K.length?K.forEach(hs=>hs(_,z,j)):console.error(_),Promise.reject(_)}function Os(){return ss&&p.value!==Ti?Promise.resolve():new Promise((_,z)=>{As.add([_,z])})}function vi(_){return ss||(ss=!_,us(),As.list().forEach(([z,j])=>_?j(_):z()),As.reset()),_}function ni(_,z,j,K){const{scrollBehavior:hs}=s;if(!Ca||!hs)return Promise.resolve();const ys=!j&&KB(mh(_.fullPath,0))||(K||!j)&&history.state&&history.state.scroll||null;return Mi().then(()=>hs(_,z,ys)).then(o=>o&&WB(o)).catch(o=>q(o,_,z))}const Ls=_=>l.go(_);let Xs;const Si=new Set,Ci={currentRoute:p,listening:!0,addRoute:c,removeRoute:E,clearRoutes:i.clearRoutes,hasRoute:m,getRoutes:F,resolve:C,options:s,push:b,replace:R,go:Ls,back:()=>Ls(-1),forward:()=>Ls(1),beforeEach:t.add,beforeResolve:e.add,afterEach:k.add,onError:W.add,isReady:Os,install(_){const z=this;_.component("RouterLink",Fc),_.component("RouterView",Dc),_.config.globalProperties.$router=z,Object.defineProperty(_.config.globalProperties,"$route",{enumerable:!0,get:()=>ga(p)}),Ca&&!Xs&&p.value===Ti&&(Xs=!0,b(l.location).catch(hs=>{}));const j={};for(const hs in Ti)Object.defineProperty(j,hs,{get:()=>p.value[hs],enumerable:!0});_.provide(fl,z),_.provide(le,Ck(j)),_.provide(ut,p);const K=_.unmount;Si.add(_),_.unmount=function(){Si.delete(_),Si.size<1&&(r=Ti,Z&&Z(),Z=null,p.value=Ti,Xs=!1,ss=!1),K()}}};function Ts(_){return _.reduce((z,j)=>z.then(()=>J(j)),Promise.resolve())}return Ci}function bc(s,i){const a=[],n=[],l=[],t=Math.max(i.matched.length,s.matched.length);for(let e=0;e<t;e++){const k=i.matched[e];k&&(s.matched.find(r=>Na(r,k))?n.push(k):a.push(k));const p=s.matched[e];p&&(i.matched.find(r=>Na(r,p))||l.push(p))}return[a,n,l]}function ya(){return Ds(fl)}function bi(s){return Ds(le)}var te=Symbol(""),Fi=()=>{const s=Ds(te);if(!s)throw new Error("useClientData() is called without provider.");return s},_c=()=>Fi().pageComponent,fs=()=>Fi().pageData,cs=()=>Fi().pageFrontmatter,Ic=()=>Fi().pageHead,wp=()=>Fi().pageLang,Sc=()=>Fi().pageLayout,ia=()=>Fi().routeLocale,wc=()=>Fi().routePath,Oc=()=>Fi().routes,Op=()=>Fi().siteData,wn=()=>Fi().siteLocaleData,Tc=Symbol(""),At=ws(vB),Ia=ws(CB),Tp=(s,i)=>{const a=dB(s,i);if(Ia.value[a])return a;const n=encodeURI(a);if(Ia.value[n])return n;const l=At.value[a]||At.value[n];return l||a},gi=(s,i)=>{const{pathname:a,hashAndQueries:n}=yp(s),l=Tp(a,i),t=l+n;return Ia.value[l]?{...Ia.value[l],path:t,notFound:!1}:{...Ia.value["/404.html"],path:t,notFound:!0}},Pc=(s,i)=>{const{pathname:a,hashAndQueries:n}=yp(s);return Tp(a,i)+n},Nc=s=>{if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget){const i=s.currentTarget.getAttribute("target");if(i!=null&&i.match(/\b_blank\b/i))return}return s.preventDefault(),!0}},Ps=$({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(s,{slots:i}){const a=ya(),n=bi(),l=v(()=>s.to.startsWith("#")||s.to.startsWith("?")?s.to:`/${Pc(s.to,n.path).substring(1)}`);return()=>{var t;return h("a",{class:["route-link",{[s.activeClass]:s.active}],href:l.value,onClick:(e={})=>{Nc(e)&&a.push(s.to).catch()}},(t=i.default)==null?void 0:t.call(i))}}}),Lc=$({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:i}){const a=$a(s,"config"),n=bi(),l=Op(),t=v(()=>Sn(a.value.link)),e=v(()=>a.value.target||(t.value?"_blank":void 0)),k=v(()=>e.value==="_blank"),p=v(()=>!t.value&&!k.value),r=v(()=>a.value.rel||(k.value?"noopener noreferrer":null)),d=v(()=>a.value.ariaLabel??a.value.text),g=v(()=>{if(a.value.exact)return!1;const c=Object.keys(l.value.locales);return c.length?c.every(E=>E!==a.value.link):a.value.link!=="/"}),B=v(()=>p.value?a.value.activeMatch?(a.value.activeMatch instanceof RegExp?a.value.activeMatch:new RegExp(a.value.activeMatch,"u")).test(n.path):g.value?n.path.startsWith(a.value.link):n.path===a.value.link:!1);return()=>{const{before:c,after:E,default:F}=i,m=(F==null?void 0:F(a.value))||[c==null?void 0:c(a.value),a.value.text,E==null?void 0:E(a.value)];return p.value?h(Ps,{class:"auto-link",to:a.value.link,active:B.value,"aria-label":d.value},()=>m):h("a",{class:"auto-link external-link",href:a.value.link,"aria-label":d.value,rel:r.value,target:e.value},m)}}}),bl=$({name:"ClientOnly",setup(s,i){const a=Y(!1);return Cs(()=>{a.value=!0}),()=>{var n,l;return a.value?(l=(n=i.slots).default)==null?void 0:l.call(n):null}}}),Pp=$({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(s){const i=_c(),a=v(()=>{if(!s.path)return i.value;const n=gi(s.path);return Md(()=>n.loader().then(({comp:l})=>l))});return()=>h(a.value)}}),xc="Layout",Rc="en-US",ta=mn({resolveLayouts:s=>s.reduce((i,a)=>({...i,...a.layouts}),{}),resolvePageHead:(s,i,a)=>{const n=bs(i.description)?i.description:a.description,l=[...Array.isArray(i.head)?i.head:[],...a.head,["title",{},s],["meta",{name:"description",content:n}]];return EB(l)},resolvePageHeadTitle:(s,i)=>[s.title,i.title].filter(a=>!!a).join(" | "),resolvePageLang:(s,i)=>s.lang||i.lang||Rc,resolvePageLayout:(s,i)=>{const a=bs(s.frontmatter.layout)?s.frontmatter.layout:xc;if(!i[a])throw new Error(`[vuepress] Cannot resolve layout: ${a}`);return i[a]},resolveRouteLocale:(s,i)=>gB(s,decodeURI(i)),resolveSiteLocaleData:({base:s,locales:i,...a},n)=>{var l;return{...a,...i[n],head:[...((l=i[n])==null?void 0:l.head)??[],...a.head??[]]}}}),_i=(s={})=>s,Es=s=>oa(s)?s:`/${up(s)}`;const Mc=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),On=s=>{const i=ia();return v(()=>s[i.value]??{})};var ai=Uint8Array,Da=Uint16Array,$c=Int32Array,Np=new ai([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Lp=new ai([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Jc=new ai([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),xp=function(s,i){for(var a=new Da(31),n=0;n<31;++n)a[n]=i+=1<<s[n-1];for(var l=new $c(a[30]),n=1;n<30;++n)for(var t=a[n];t<a[n+1];++t)l[t]=t-a[n]<<5|n;return{b:a,r:l}},Rp=xp(Np,2),Mp=Rp.b,jc=Rp.r;Mp[28]=258,jc[258]=28;var Vc=xp(Lp,0),Hc=Vc.b,Ft=new Da(32768);for(var vs=0;vs<32768;++vs){var Vi=(vs&43690)>>1|(vs&21845)<<1;Vi=(Vi&52428)>>2|(Vi&13107)<<2,Vi=(Vi&61680)>>4|(Vi&3855)<<4,Ft[vs]=((Vi&65280)>>8|(Vi&255)<<8)>>1}var hn=function(s,i,a){for(var n=s.length,l=0,t=new Da(i);l<n;++l)s[l]&&++t[s[l]-1];var e=new Da(i);for(l=1;l<i;++l)e[l]=e[l-1]+t[l-1]<<1;var k;if(a){k=new Da(1<<i);var p=15-i;for(l=0;l<n;++l)if(s[l])for(var r=l<<4|s[l],d=i-s[l],g=e[s[l]-1]++<<d,B=g|(1<<d)-1;g<=B;++g)k[Ft[g]>>p]=r}else for(k=new Da(n),l=0;l<n;++l)s[l]&&(k[l]=Ft[e[s[l]-1]++]>>15-s[l]);return k},Tn=new ai(288);for(var vs=0;vs<144;++vs)Tn[vs]=8;for(var vs=144;vs<256;++vs)Tn[vs]=9;for(var vs=256;vs<280;++vs)Tn[vs]=7;for(var vs=280;vs<288;++vs)Tn[vs]=8;var $p=new ai(32);for(var vs=0;vs<32;++vs)$p[vs]=5;var zc=hn(Tn,9,1),Uc=hn($p,5,1),ql=function(s){for(var i=s[0],a=1;a<s.length;++a)s[a]>i&&(i=s[a]);return i},ci=function(s,i,a){var n=i/8|0;return(s[n]|s[n+1]<<8)>>(i&7)&a},Kl=function(s,i){var a=i/8|0;return(s[a]|s[a+1]<<8|s[a+2]<<16)>>(i&7)},Gc=function(s){return(s+7)/8|0},Jp=function(s,i,a){return(i==null||i<0)&&(i=0),(a==null||a>s.length)&&(a=s.length),new ai(s.subarray(i,a))},Wc=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ei=function(s,i,a){var n=new Error(i||Wc[s]);if(n.code=s,Error.captureStackTrace&&Error.captureStackTrace(n,ei),!a)throw n;return n},qc=function(s,i,a,n){var l=s.length,t=0;if(!l||i.f&&!i.l)return a||new ai(0);var e=!a,k=e||i.i!=2,p=i.i;e&&(a=new ai(l*3));var r=function(hs){var ys=a.length;if(hs>ys){var o=new ai(Math.max(ys*2,hs));o.set(a),a=o}},d=i.f||0,g=i.p||0,B=i.b||0,c=i.l,E=i.d,F=i.m,m=i.n,C=l*8;do{if(!c){d=ci(s,g,1);var D=ci(s,g+1,3);if(g+=3,D)if(D==1)c=zc,E=Uc,F=9,m=5;else if(D==2){var P=ci(s,g,31)+257,w=ci(s,g+10,15)+4,U=P+ci(s,g+5,31)+1;g+=14;for(var J=new ai(U),T=new ai(19),H=0;H<w;++H)T[Jc[H]]=ci(s,g+H*3,7);g+=w*3;for(var N=ql(T),Z=(1<<N)-1,us=hn(T,N,1),H=0;H<U;){var As=us[ci(s,g,Z)];g+=As&15;var u=As>>4;if(u<16)J[H++]=u;else{var W=0,ss=0;for(u==16?(ss=3+ci(s,g,3),g+=2,W=J[H-1]):u==17?(ss=3+ci(s,g,7),g+=3):u==18&&(ss=11+ci(s,g,127),g+=7);ss--;)J[H++]=W}}var q=J.subarray(0,P),Os=J.subarray(P);F=ql(q),m=ql(Os),c=hn(q,F,1),E=hn(Os,m,1)}else ei(1);else{var u=Gc(g)+4,b=s[u-4]|s[u-3]<<8,R=u+b;if(R>l){p&&ei(0);break}k&&r(B+b),a.set(s.subarray(u,R),B),i.b=B+=b,i.p=g=R*8,i.f=d;continue}if(g>C){p&&ei(0);break}}k&&r(B+131072);for(var vi=(1<<F)-1,ni=(1<<m)-1,Ls=g;;Ls=g){var W=c[Kl(s,g)&vi],Xs=W>>4;if(g+=W&15,g>C){p&&ei(0);break}if(W||ei(2),Xs<256)a[B++]=Xs;else if(Xs==256){Ls=g,c=null;break}else{var Si=Xs-254;if(Xs>264){var H=Xs-257,Ci=Np[H];Si=ci(s,g,(1<<Ci)-1)+Mp[H],g+=Ci}var Ts=E[Kl(s,g)&ni],_=Ts>>4;Ts||ei(3),g+=Ts&15;var Os=Hc[_];if(_>3){var Ci=Lp[_];Os+=Kl(s,g)&(1<<Ci)-1,g+=Ci}if(g>C){p&&ei(0);break}k&&r(B+131072);var z=B+Si;if(B<Os){var j=t-Os,K=Math.min(Os,z);for(j+B<0&&ei(3);B<K;++B)a[B]=n[j+B]}for(;B<z;++B)a[B]=a[B-Os]}}i.l=c,i.p=Ls,i.b=B,i.f=d,c&&(d=1,i.m=F,i.d=E,i.n=m)}while(!d);return B!=a.length&&e?Jp(a,0,B):a.subarray(0,B)},Kc=new ai(0),Yc=function(s,i){return((s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31)&&ei(6,"invalid zlib data"),(s[1]>>5&1)==+!i&&ei(6,"invalid zlib data: "+(s[1]&32?"need":"unexpected")+" dictionary"),(s[1]>>3&4)+2};function Qc(s,i){return qc(s.subarray(Yc(s,i),-4),{i:2},i,i)}var vt=typeof TextDecoder<"u"&&new TextDecoder,Xc=0;try{vt.decode(Kc,{stream:!0}),Xc=1}catch{}var Zc=function(s){for(var i="",a=0;;){var n=s[a++],l=(n>127)+(n>223)+(n>239);if(a+l>s.length)return{s:i,r:Jp(s,a-1)};l?l==3?(n=((n&15)<<18|(s[a++]&63)<<12|(s[a++]&63)<<6|s[a++]&63)-65536,i+=String.fromCharCode(55296|n>>10,56320|n&1023)):l&1?i+=String.fromCharCode((n&31)<<6|s[a++]&63):i+=String.fromCharCode((n&15)<<12|(s[a++]&63)<<6|s[a++]&63):i+=String.fromCharCode(n)}};function so(s,i){{for(var a=new ai(s.length),n=0;n<s.length;++n)a[n]=s.charCodeAt(n);return a}for(var l=s.length,n=0;n<l;++n);}function io(s,i){var a;if(vt)return vt.decode(s);var n=Zc(s),l=n.s,a=n.r;return a.length&&ei(8),l}const Rh=s=>{const i=atob(s);return io(Qc(so(i)))},Gs=(s,i)=>{var n;const a=(n=(i==null?void 0:i._instance)||bn())==null?void 0:n.appContext.components;return a?s in a||di(s)in a||Cn(di(s))in a:!1},jp=s=>new Promise(i=>setTimeout(i,s)),Vp=s=>typeof s<"u",Yl=s=>typeof s=="number",Ct=Array.isArray,yn=(s,i)=>bs(s)&&s.startsWith(i),ao=(s,i)=>bs(s)&&s.endsWith(i),Pn=Object.entries,Ai=Object.keys,ee=s=>{if(s){if(typeof s=="number")return new Date(s);const i=Date.parse(s.toString());if(!Number.isNaN(i))return new Date(i)}return null},_l=s=>yn(s,"/");function Va(s){return rk()?(Hr(s),!0):!1}function Js(s){return typeof s=="function"?s():ga(s)}const Nn=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const no=Object.prototype.toString,lo=s=>no.call(s)==="[object Object]",Ba=()=>{},Mh=to();function to(){var s,i;return Nn&&((s=window==null?void 0:window.navigator)==null?void 0:s.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((i=window==null?void 0:window.navigator)==null?void 0:i.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function he(s,i){function a(...n){return new Promise((l,t)=>{Promise.resolve(s(()=>i.apply(this,n),{fn:i,thisArg:this,args:n})).then(l).catch(t)})}return a}const Hp=s=>s();function eo(s,i={}){let a,n,l=Ba;const t=k=>{clearTimeout(k),l(),l=Ba};return k=>{const p=Js(s),r=Js(i.maxWait);return a&&t(a),p<=0||r!==void 0&&r<=0?(n&&(t(n),n=null),Promise.resolve(k())):new Promise((d,g)=>{l=i.rejectOnCancel?g:d,r&&!n&&(n=setTimeout(()=>{a&&t(a),n=null,d(k())},r)),a=setTimeout(()=>{n&&t(n),n=null,d(k())},p)})}}function ho(...s){let i=0,a,n=!0,l=Ba,t,e,k,p,r;!$s(s[0])&&typeof s[0]=="object"?{delay:e,trailing:k=!0,leading:p=!0,rejectOnCancel:r=!1}=s[0]:[e,k=!0,p=!0,r=!1]=s;const d=()=>{a&&(clearTimeout(a),a=void 0,l(),l=Ba)};return B=>{const c=Js(e),E=Date.now()-i,F=()=>t=B();return d(),c<=0?(i=Date.now(),F()):(E>c&&(p||!n)?(i=Date.now(),F()):k&&(t=new Promise((m,C)=>{l=r?C:m,a=setTimeout(()=>{i=Date.now(),n=!0,m(F()),d()},Math.max(0,c-E))})),!p&&!a&&(a=setTimeout(()=>n=!0,c)),n=!1,t)}}function ko(s=Hp){const i=Y(!0);function a(){i.value=!1}function n(){i.value=!0}const l=(...t)=>{i.value&&s(...t)};return{isActive:ca(i),pause:a,resume:n,eventFilter:l}}function po(s){let i;function a(){return i||(i=s()),i}return a.reset=async()=>{const n=i;i=void 0,n&&await n},a}function zp(s){return bn()}function ro(...s){if(s.length!==1)return $a(...s);const i=s[0];return typeof i=="function"?ca(_k(()=>({get:i,set:Ba}))):Y(i)}function go(s,i=200,a={}){return he(eo(i,a),s)}function Bo(s,i=200,a=!1,n=!0,l=!1){return he(ho(i,a,n,l),s)}function co(s,i,a={}){const{eventFilter:n=Hp,...l}=a;return ds(s,he(n,i),l)}function oo(s,i,a={}){const{eventFilter:n,...l}=a,{eventFilter:t,pause:e,resume:k,isActive:p}=ko(n);return{stop:co(s,i,{...l,eventFilter:t}),pause:e,resume:k,isActive:p}}function Il(s,i=!0,a){zp()?Cs(s,a):i?s():Mi(s)}function yo(s,i){zp()&&Ja(s,i)}function Eo(s,i,a={}){const{immediate:n=!0}=a,l=Y(!1);let t=null;function e(){t&&(clearTimeout(t),t=null)}function k(){l.value=!1,e()}function p(...r){e(),l.value=!0,t=setTimeout(()=>{l.value=!1,t=null,s(...r)},Js(i))}return n&&(l.value=!0,Nn&&p()),Va(k),{isPending:ca(l),start:p,stop:k}}function En(s=!1,i={}){const{truthyValue:a=!0,falsyValue:n=!1}=i,l=$s(s),t=Y(s);function e(k){if(arguments.length)return t.value=k,t.value;{const p=Js(a);return t.value=t.value===p?Js(n):p,t.value}}return l?e:[t,e]}function Ni(s){var i;const a=Js(s);return(i=a==null?void 0:a.$el)!=null?i:a}const Ri=Nn?window:void 0,Up=Nn?window.document:void 0,Gp=Nn?window.navigator:void 0;function Ns(...s){let i,a,n,l;if(typeof s[0]=="string"||Array.isArray(s[0])?([a,n,l]=s,i=Ri):[i,a,n,l]=s,!i)return Ba;Array.isArray(a)||(a=[a]),Array.isArray(n)||(n=[n]);const t=[],e=()=>{t.forEach(d=>d()),t.length=0},k=(d,g,B,c)=>(d.addEventListener(g,B,c),()=>d.removeEventListener(g,B,c)),p=ds(()=>[Ni(i),Js(l)],([d,g])=>{if(e(),!d)return;const B=lo(g)?{...g}:g;t.push(...a.flatMap(c=>n.map(E=>k(d,c,E,B))))},{immediate:!0,flush:"post"}),r=()=>{p(),e()};return Va(r),r}function uo(){const s=Y(!1),i=bn();return i&&Cs(()=>{s.value=!0},i),s}function Ln(s){const i=uo();return v(()=>(i.value,!!s()))}function ke(s,i={}){const{window:a=Ri}=i,n=Ln(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let l;const t=Y(!1),e=r=>{t.value=r.matches},k=()=>{l&&("removeEventListener"in l?l.removeEventListener("change",e):l.removeListener(e))},p=Yk(()=>{n.value&&(k(),l=a.matchMedia(Js(s)),"addEventListener"in l?l.addEventListener("change",e):l.addListener(e),t.value=l.matches)});return Va(()=>{p(),k(),l=void 0}),t}function $h(s,i={}){const{controls:a=!1,navigator:n=Gp}=i,l=Ln(()=>n&&"permissions"in n);let t;const e=typeof s=="string"?{name:s}:s,k=Y(),p=()=>{t&&(k.value=t.state)},r=po(async()=>{if(l.value){if(!t)try{t=await n.permissions.query(e),Ns(t,"change",p),p()}catch{k.value="prompt"}return t}});return r(),a?{state:k,isSupported:l,query:r}:k}function Ao(s={}){const{navigator:i=Gp,read:a=!1,source:n,copiedDuring:l=1500,legacy:t=!1}=s,e=Ln(()=>i&&"clipboard"in i),k=$h("clipboard-read"),p=$h("clipboard-write"),r=v(()=>e.value||t),d=Y(""),g=Y(!1),B=Eo(()=>g.value=!1,l);function c(){e.value&&C(k.value)?i.clipboard.readText().then(D=>{d.value=D}):d.value=m()}r.value&&a&&Ns(["copy","cut"],c);async function E(D=Js(n)){r.value&&D!=null&&(e.value&&C(p.value)?await i.clipboard.writeText(D):F(D),d.value=D,g.value=!0,B.start())}function F(D){const u=document.createElement("textarea");u.value=D??"",u.style.position="absolute",u.style.opacity="0",document.body.appendChild(u),u.select(),document.execCommand("copy"),u.remove()}function m(){var D,u,b;return(b=(u=(D=document==null?void 0:document.getSelection)==null?void 0:D.call(document))==null?void 0:u.toString())!=null?b:""}function C(D){return D==="granted"||D==="prompt"}return{isSupported:r,text:d,copied:g,copy:E}}const Zn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},sl="__vueuse_ssr_handlers__",Fo=vo();function vo(){return sl in Zn||(Zn[sl]=Zn[sl]||{}),Zn[sl]}function Co(s,i){return Fo[s]||i}function mo(s){return s==null?"any":s instanceof Set?"set":s instanceof Map?"map":s instanceof Date?"date":typeof s=="boolean"?"boolean":typeof s=="string"?"string":typeof s=="object"?"object":Number.isNaN(s)?"any":"number"}const Do={boolean:{read:s=>s==="true",write:s=>String(s)},object:{read:s=>JSON.parse(s),write:s=>JSON.stringify(s)},number:{read:s=>Number.parseFloat(s),write:s=>String(s)},any:{read:s=>s,write:s=>String(s)},string:{read:s=>s,write:s=>String(s)},map:{read:s=>new Map(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s.entries()))},set:{read:s=>new Set(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s))},date:{read:s=>new Date(s),write:s=>s.toISOString()}},Jh="vueuse-storage";function Ha(s,i,a,n={}){var l;const{flush:t="pre",deep:e=!0,listenToStorageChanges:k=!0,writeDefaults:p=!0,mergeDefaults:r=!1,shallow:d,window:g=Ri,eventFilter:B,onError:c=T=>{console.error(T)},initOnMounted:E}=n,F=(d?ws:Y)(typeof i=="function"?i():i);if(!a)try{a=Co("getDefaultStorage",()=>{var T;return(T=Ri)==null?void 0:T.localStorage})()}catch(T){c(T)}if(!a)return F;const m=Js(i),C=mo(m),D=(l=n.serializer)!=null?l:Do[C],{pause:u,resume:b}=oo(F,()=>P(F.value),{flush:t,deep:e,eventFilter:B});g&&k&&Il(()=>{Ns(g,"storage",U),Ns(g,Jh,J),E&&U()}),E||U();function R(T,H){g&&g.dispatchEvent(new CustomEvent(Jh,{detail:{key:s,oldValue:T,newValue:H,storageArea:a}}))}function P(T){try{const H=a.getItem(s);if(T==null)R(H,null),a.removeItem(s);else{const N=D.write(T);H!==N&&(a.setItem(s,N),R(H,N))}}catch(H){c(H)}}function w(T){const H=T?T.newValue:a.getItem(s);if(H==null)return p&&m!=null&&a.setItem(s,D.write(m)),m;if(!T&&r){const N=D.read(H);return typeof r=="function"?r(N,m):C==="object"&&!Array.isArray(N)?{...m,...N}:N}else return typeof H!="string"?H:D.read(H)}function U(T){if(!(T&&T.storageArea!==a)){if(T&&T.key==null){F.value=m;return}if(!(T&&T.key!==s)){u();try{(T==null?void 0:T.newValue)!==D.write(F.value)&&(F.value=w(T))}catch(H){c(H)}finally{T?Mi(b):b()}}}}function J(T){U(T.detail)}return F}function fo(s){return ke("(prefers-color-scheme: dark)",s)}function bo(s,i,a={}){const{window:n=Ri,...l}=a;let t;const e=Ln(()=>n&&"ResizeObserver"in n),k=()=>{t&&(t.disconnect(),t=void 0)},p=v(()=>Array.isArray(s)?s.map(g=>Ni(g)):[Ni(s)]),r=ds(p,g=>{if(k(),e.value&&n){t=new ResizeObserver(i);for(const B of g)B&&t.observe(B,l)}},{immediate:!0,flush:"post"}),d=()=>{k(),r()};return Va(d),{isSupported:e,stop:d}}function _o(s,i={width:0,height:0},a={}){const{window:n=Ri,box:l="content-box"}=a,t=v(()=>{var g,B;return(B=(g=Ni(s))==null?void 0:g.namespaceURI)==null?void 0:B.includes("svg")}),e=Y(i.width),k=Y(i.height),{stop:p}=bo(s,([g])=>{const B=l==="border-box"?g.borderBoxSize:l==="content-box"?g.contentBoxSize:g.devicePixelContentBoxSize;if(n&&t.value){const c=Ni(s);if(c){const E=c.getBoundingClientRect();e.value=E.width,k.value=E.height}}else if(B){const c=Array.isArray(B)?B:[B];e.value=c.reduce((E,{inlineSize:F})=>E+F,0),k.value=c.reduce((E,{blockSize:F})=>E+F,0)}else e.value=g.contentRect.width,k.value=g.contentRect.height},a);Il(()=>{const g=Ni(s);g&&(e.value="offsetWidth"in g?g.offsetWidth:i.width,k.value="offsetHeight"in g?g.offsetHeight:i.height)});const r=ds(()=>Ni(s),g=>{e.value=g?i.width:0,k.value=g?i.height:0});function d(){p(),r()}return{width:e,height:k,stop:d}}const jh=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function pe(s,i={}){const{document:a=Up,autoExit:n=!1}=i,l=v(()=>{var C;return(C=Ni(s))!=null?C:a==null?void 0:a.querySelector("html")}),t=Y(!1),e=v(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(C=>a&&C in a||l.value&&C in l.value)),k=v(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(C=>a&&C in a||l.value&&C in l.value)),p=v(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(C=>a&&C in a||l.value&&C in l.value)),r=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(C=>a&&C in a),d=Ln(()=>l.value&&a&&e.value!==void 0&&k.value!==void 0&&p.value!==void 0),g=()=>r?(a==null?void 0:a[r])===l.value:!1,B=()=>{if(p.value){if(a&&a[p.value]!=null)return a[p.value];{const C=l.value;if((C==null?void 0:C[p.value])!=null)return!!C[p.value]}}return!1};async function c(){if(!(!d.value||!t.value)){if(k.value)if((a==null?void 0:a[k.value])!=null)await a[k.value]();else{const C=l.value;(C==null?void 0:C[k.value])!=null&&await C[k.value]()}t.value=!1}}async function E(){if(!d.value||t.value)return;B()&&await c();const C=l.value;e.value&&(C==null?void 0:C[e.value])!=null&&(await C[e.value](),t.value=!0)}async function F(){await(t.value?c():E())}const m=()=>{const C=B();(!C||C&&g())&&(t.value=C)};return Ns(a,jh,m,!1),Ns(()=>Ni(l),jh,m,!1),n&&Va(c),{isSupported:d,isFullscreen:t,enter:E,exit:c,toggle:F}}function Ql(s){return typeof Window<"u"&&s instanceof Window?s.document.documentElement:typeof Document<"u"&&s instanceof Document?s.documentElement:s}function Xl(s,i=Ba,a={}){const{immediate:n=!0,manual:l=!1,type:t="text/javascript",async:e=!0,crossOrigin:k,referrerPolicy:p,noModule:r,defer:d,document:g=Up,attrs:B={}}=a,c=Y(null);let E=null;const F=D=>new Promise((u,b)=>{const R=U=>(c.value=U,u(U),U);if(!g){u(!1);return}let P=!1,w=g.querySelector(`script[src="${Js(s)}"]`);w?w.hasAttribute("data-loaded")&&R(w):(w=g.createElement("script"),w.type=t,w.async=e,w.src=Js(s),d&&(w.defer=d),k&&(w.crossOrigin=k),r&&(w.noModule=r),p&&(w.referrerPolicy=p),Object.entries(B).forEach(([U,J])=>w==null?void 0:w.setAttribute(U,J)),P=!0),w.addEventListener("error",U=>b(U)),w.addEventListener("abort",U=>b(U)),w.addEventListener("load",()=>{w.setAttribute("data-loaded","true"),i(w),R(w)}),P&&(w=g.head.appendChild(w)),D||R(w)}),m=(D=!0)=>(E||(E=F(D)),E),C=()=>{if(!g)return;E=null,c.value&&(c.value=null);const D=g.querySelector(`script[src="${Js(s)}"]`);D&&g.head.removeChild(D)};return n&&!l&&Il(m),l||yo(C),{scriptTag:c,load:m,unload:C}}function Wp(s){const i=window.getComputedStyle(s);if(i.overflowX==="scroll"||i.overflowY==="scroll"||i.overflowX==="auto"&&s.clientWidth<s.scrollWidth||i.overflowY==="auto"&&s.clientHeight<s.scrollHeight)return!0;{const a=s.parentNode;return!a||a.tagName==="BODY"?!1:Wp(a)}}function Io(s){const i=s||window.event,a=i.target;return Wp(a)?!1:i.touches.length>1?!0:(i.preventDefault&&i.preventDefault(),!1)}const Zl=new WeakMap;function qp(s,i=!1){const a=Y(i);let n=null,l="";ds(ro(s),k=>{const p=Ql(Js(k));if(p){const r=p;if(Zl.get(r)||Zl.set(r,r.style.overflow),r.style.overflow!=="hidden"&&(l=r.style.overflow),r.style.overflow==="hidden")return a.value=!0;if(a.value)return r.style.overflow="hidden"}},{immediate:!0});const t=()=>{const k=Ql(Js(s));!k||a.value||(Mh&&(n=Ns(k,"touchmove",p=>{Io(p)},{passive:!1})),k.style.overflow="hidden",a.value=!0)},e=()=>{const k=Ql(Js(s));!k||!a.value||(Mh&&(n==null||n()),k.style.overflow=l,Zl.delete(k),a.value=!1)};return Va(e),v({get(){return a.value},set(k){k?t():e()}})}function Kp(s,i,a={}){const{window:n=Ri}=a;return Ha(s,i,n==null?void 0:n.sessionStorage,a)}function So(s={}){const{window:i=Ri,behavior:a="auto"}=s;if(!i)return{x:Y(0),y:Y(0)};const n=Y(i.scrollX),l=Y(i.scrollY),t=v({get(){return n.value},set(k){scrollTo({left:k,behavior:a})}}),e=v({get(){return l.value},set(k){scrollTo({top:k,behavior:a})}});return Ns(i,"scroll",()=>{n.value=i.scrollX,l.value=i.scrollY},{capture:!1,passive:!0}),{x:t,y:e}}function wo(s={}){const{window:i=Ri,initialWidth:a=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:l=!0,includeScrollbar:t=!0}=s,e=Y(a),k=Y(n),p=()=>{i&&(t?(e.value=i.innerWidth,k.value=i.innerHeight):(e.value=i.document.documentElement.clientWidth,k.value=i.document.documentElement.clientHeight))};if(p(),Il(p),Ns("resize",p,{passive:!0}),l){const r=ke("(orientation: portrait)");ds(r,()=>p())}return{width:e,height:k}}var Oo=$({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(s){const i=v(()=>{const n=["font-icon icon"],l=`fas fa-${s.icon}`;return n.push("fa-fw fa-sm"),n.push(s.icon.includes(" ")?s.icon:l),n}),a=v(()=>{const n={};return s.color&&(n.color=s.color),s.size&&(n["font-size"]=Number.isNaN(Number(s.size))?s.size:`${s.size}px`),Ai(n).length?n:null});return()=>s.icon?h("span",{key:s.icon,class:i.value,style:a.value}):null}});const Yp=({type:s="info",text:i="",vertical:a,color:n},{slots:l})=>{var t;return h("span",{class:["vp-badge",s,{diy:n}],style:{verticalAlign:a??!1,backgroundColor:n??!1}},((t=l.default)==null?void 0:t.call(l))??i)};Yp.displayName="Badge";const Qp=({title:s,desc:i="",logo:a,background:n,color:l,link:t})=>{const e=[a?h("img",{class:"vp-card-logo",src:Es(a),loading:"lazy","no-view":""}):null,h("div",{class:"vp-card-content"},[h("div",{class:"vp-card-title",innerHTML:s}),h("hr"),h("div",{class:"vp-card-desc",innerHTML:i})])],k={};return n&&(k.background=n),l&&(k.color=l),t?ml(t)?h("a",{class:"vp-card",href:t,target:"_blank",style:k},e):h(Ps,{to:t,class:"vp-card",style:k},()=>e):h("div",{class:"vp-card",style:k},e)};Qp.displayName="VPCard";const To=_i({enhance:({app:s})=>{Gs("FontIcon")||s.component("FontIcon",Oo),Gs("Badge")||s.component("Badge",Yp),Gs("VPCard")||s.component("VPCard",Qp)},setup:()=>{Xl("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),Xl("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),Xl("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]}),Po=Object.freeze(Object.defineProperty({__proto__:null,default:To},Symbol.toStringTag,{value:"Module"})),Vh=async(s,i)=>{const{path:a,query:n}=s.currentRoute.value,{scrollBehavior:l}=s.options;s.options.scrollBehavior=void 0,await s.replace({path:a,query:n,hash:i}),s.options.scrollBehavior=l},No=({headerLinkSelector:s,headerAnchorSelector:i,delay:a,offset:n=5})=>{const l=ya();Ns("scroll",go(()=>{var E,F;const e=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(e-0)<n){Vh(l,"");return}const p=window.innerHeight+e,r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),d=Math.abs(r-p)<n,g=Array.from(document.querySelectorAll(s)),c=Array.from(document.querySelectorAll(i)).filter(m=>g.some(C=>C.hash===m.hash));for(let m=0;m<c.length;m++){const C=c[m],D=c[m+1],u=e>=(((E=C.parentElement)==null?void 0:E.offsetTop)??0)-n,b=!D||e<(((F=D.parentElement)==null?void 0:F.offsetTop)??0)-n;if(!(u&&b))continue;const P=decodeURIComponent(l.currentRoute.value.hash),w=decodeURIComponent(C.hash);if(P===w)return;if(d){for(let U=m+1;U<c.length;U++)if(P===decodeURIComponent(c[U].hash))return}Vh(l,w);return}},a))},Lo=".vp-sidebar-link, .vp-toc-link",xo=".header-anchor",Ro=200,Mo=5,$o=_i({setup(){No({headerLinkSelector:Lo,headerAnchorSelector:xo,delay:Ro,offset:Mo})}}),Jo=Object.freeze(Object.defineProperty({__proto__:null,default:$o},Symbol.toStringTag,{value:"Module"}));let Xp=s=>bs(s.title)?{title:s.title}:null;const Zp=Symbol(""),jo=s=>{Xp=s},Vo=()=>Ds(Zp),Ho=s=>{s.provide(Zp,Xp)};var zo={"/":{title:"目录",empty:"暂无目录"}};const Uo=$({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(s){const i=Vo(),a=On(zo),n=fs(),l=Oc(),t=Op(),k=ws(Pn(l.value).map(([r,{meta:d}])=>{const g=i(d);if(!g)return null;const B=r.split("/").length;return{level:ao(r,"/")?B-2:B-1,base:r.replace(/\/[^/]+\/?$/,"/"),path:r,...g}}).filter(r=>ja(r)&&bs(r.title))),p=v(()=>{const r=s.base?uB(Ep(s.base)):n.value.path.replace(/\/[^/]+$/,"/"),d=r.split("/").length-2,g=[];return k.value.filter(({level:B,path:c})=>{if(!yn(c,r)||c===r)return!1;if(r==="/"){const E=Ai(t.value.locales).filter(F=>F!=="/");if(c==="/404.html"||E.some(F=>yn(c,F)))return!1}return B-d<=s.level}).sort(({title:B,level:c,order:E},{title:F,level:m,order:C})=>{const D=c-m;return D||(Yl(E)?Yl(C)?E>0?C>0?E-C:-1:C<0?E-C:1:E:Yl(C)?C:B.localeCompare(F))}).forEach(B=>{var F;const{base:c,level:E}=B;switch(E-d){case 1:{g.push(B);break}case 2:{const m=g.find(C=>C.path===c);m&&(m.children??(m.children=[])).push(B);break}default:{const m=g.find(C=>C.path===c.replace(/\/[^/]+\/$/,"/"));if(m){const C=(F=m.children)==null?void 0:F.find(D=>D.path===c);C&&(C.children??(C.children=[])).push(B)}}}}),g});return()=>{const r=p.value.some(d=>d.children);return h("div",{class:["vp-catalog-wrapper",{index:s.index}]},[s.hideHeading?null:h("h2",{class:"vp-catalog-main-title"},a.value.title),p.value.length?h(s.index?"ol":"ul",{class:["vp-catalogs",{deep:r}]},p.value.map(({children:d=[],title:g,path:B,content:c})=>{const E=h(Ps,{class:"vp-catalog-title",to:B},()=>c?h(c):g);return h("li",{class:"vp-catalog"},r?[h("h3",{id:g,class:["vp-catalog-child-title",{"has-children":d.length}]},[h("a",{href:`#${g}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),E]),d.length?h(s.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:F=[],content:m,path:C,title:D})=>h("li",{class:"vp-child-catalog"},[h("div",{class:["vp-catalog-sub-title",{"has-children":F.length}]},[h("a",{href:`#${D}`,class:"vp-catalog-header-anchor"},"#"),h(Ps,{class:"vp-catalog-title",to:C},()=>m?h(m):D)]),F.length?h(s.index?"ol":"div",{class:s.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},F.map(({content:u,path:b,title:R})=>s.index?h("li",{class:"vp-sub-catalog"},h(Ps,{to:b},()=>u?h(u):R)):h(Ps,{class:"vp-sub-catalog-link",to:b},()=>u?h(u):R))):null]))):null]:h("div",{class:"vp-catalog-child-title"},E))})):h("p",{class:"vp-empty-catalog"},a.value.empty)])}}}),Go=_i({enhance:({app:s})=>{Ho(s),Gs("Catalog",s)||s.component("Catalog",Uo)}}),Wo=Object.freeze(Object.defineProperty({__proto__:null,default:Go},Symbol.toStringTag,{value:"Module"}));var qo={"/":{backToTop:"返回顶部"}};const Ko=$({name:"BackToTop",setup(){const s=cs(),i=On(qo),a=ws(),{height:n}=_o(a),{height:l}=wo(),{y:t}=So(),e=v(()=>s.value.backToTop!==!1&&t.value>100),k=v(()=>t.value/(n.value-l.value)*100);return Cs(()=>{a.value=document.body}),()=>h(Zi,{name:"back-to-top"},()=>e.value?h("button",{type:"button",class:"vp-back-to-top-button","aria-label":i.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[h("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":k.value},h("svg",h("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*k.value*.48} ${Math.PI*(100-k.value)*.48}`}))),h("div",{class:"back-to-top-icon"})]):null)}}),Yo=_i({rootComponents:[Ko]}),Qo=Object.freeze(Object.defineProperty({__proto__:null,default:Yo},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const ks={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:s=>{const i=ks.isStarted();s=st(s,ks.settings.minimum,1),ks.status=s===1?null:s;const a=ks.render(!i),n=a.querySelector(ks.settings.barSelector),l=ks.settings.speed,t=ks.settings.easing;return a.offsetWidth,Xo(e=>{il(n,{transform:"translate3d("+Hh(s)+"%,0,0)",transition:"all "+l+"ms "+t}),s===1?(il(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(()=>{il(a,{transition:"all "+l+"ms linear",opacity:"0"}),setTimeout(()=>{ks.remove(),e()},l)},l)):setTimeout(()=>e(),l)}),ks},isStarted:()=>typeof ks.status=="number",start:()=>{ks.status||ks.set(0);const s=()=>{setTimeout(()=>{ks.status&&(ks.trickle(),s())},ks.settings.trickleSpeed)};return ks.settings.trickle&&s(),ks},done:s=>!s&&!ks.status?ks:ks.inc(.3+.5*Math.random()).set(1),inc:s=>{let i=ks.status;return i?(typeof s!="number"&&(s=(1-i)*st(Math.random()*i,.1,.95)),i=st(i+s,0,.994),ks.set(i)):ks.start()},trickle:()=>ks.inc(Math.random()*ks.settings.trickleRate),render:s=>{if(ks.isRendered())return document.getElementById("nprogress");zh(document.documentElement,"nprogress-busy");const i=document.createElement("div");i.id="nprogress",i.innerHTML=ks.settings.template;const a=i.querySelector(ks.settings.barSelector),n=s?"-100":Hh(ks.status||0),l=document.querySelector(ks.settings.parent);return il(a,{transition:"all 0 linear",transform:"translate3d("+n+"%,0,0)"}),l!==document.body&&zh(l,"nprogress-custom-parent"),l==null||l.appendChild(i),i},remove:()=>{Uh(document.documentElement,"nprogress-busy"),Uh(document.querySelector(ks.settings.parent),"nprogress-custom-parent");const s=document.getElementById("nprogress");s&&Zo(s)},isRendered:()=>!!document.getElementById("nprogress")},st=(s,i,a)=>s<i?i:s>a?a:s,Hh=s=>(-1+s)*100,Xo=function(){const s=[];function i(){const a=s.shift();a&&a(i)}return function(a){s.push(a),s.length===1&&i()}}(),il=function(){const s=["Webkit","O","Moz","ms"],i={};function a(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(k,p){return p.toUpperCase()})}function n(e){const k=document.body.style;if(e in k)return e;let p=s.length;const r=e.charAt(0).toUpperCase()+e.slice(1);let d;for(;p--;)if(d=s[p]+r,d in k)return d;return e}function l(e){return e=a(e),i[e]??(i[e]=n(e))}function t(e,k,p){k=l(k),e.style[k]=p}return function(e,k){for(const p in k){const r=k[p];r!==void 0&&Object.prototype.hasOwnProperty.call(k,p)&&t(e,p,r)}}}(),s2=(s,i)=>(typeof s=="string"?s:re(s)).indexOf(" "+i+" ")>=0,zh=(s,i)=>{const a=re(s),n=a+i;s2(a,i)||(s.className=n.substring(1))},Uh=(s,i)=>{const a=re(s);if(!s2(s,i))return;const n=a.replace(" "+i+" "," ");s.className=n.substring(1,n.length-1)},re=s=>(" "+(s.className||"")+" ").replace(/\s+/gi," "),Zo=s=>{s&&s.parentNode&&s.parentNode.removeChild(s)},sy=()=>{Cs(()=>{const s=ya(),i=new Set;i.add(s.currentRoute.value.path),s.beforeEach(a=>{i.has(a.path)||ks.start()}),s.afterEach(a=>{i.add(a.path),ks.done()})})},iy=_i({setup(){sy()}}),ay=Object.freeze(Object.defineProperty({__proto__:null,default:iy},Symbol.toStringTag,{value:"Module"})),ny=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$iiFjGBHS9DdonvL2t4T3JuvVJGtBEpsTtfYHq6dZqhKVwYZUNWHYu"]}},"author":{"name":"Panda诚","url":"https://zhangchengk.github.io/about/intro.html"},"logo":"/panda.gif","repo":"zhangchengk","docsDir":"src","fullscreen":true,"footer":"读书又笔记","displayFooter":true,"pageInfo":["Author","Original","Date","Category","Tag","ReadingTime"],"blog":{"avatar":"/avatar.png","name":"Panda诚","description":"越规范 越简单","medias":{"GitHub":"https://github.com/zhangchengk"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"Home","link":"/","icon":"home"},{"text":"时间轴","link":"/timeline/","icon":"date"},{"text":"Tags","link":"/tag/","icon":"tag"}]}}}'),ly=Y(ny),i2=()=>ly,a2=Symbol(""),ty=()=>{const s=Ds(a2);if(!s)throw new Error("useThemeLocaleData() is called without provider.");return s},ey=(s,i)=>{const{locales:a,...n}=s;return{...n,...a==null?void 0:a[i]}},hy=_i({enhance({app:s}){const i=i2(),a=s._context.provides[te],n=v(()=>ey(i.value,a.routeLocale.value));s.provide(a2,n),Object.defineProperties(s.config.globalProperties,{$theme:{get(){return i.value}},$themeLocale:{get(){return n.value}}})}}),ky=Object.freeze(Object.defineProperty({__proto__:null,default:hy},Symbol.toStringTag,{value:"Module"})),py=/language-(shellscript|shell|bash|sh|zsh)/,ry=({delay:s=500,duration:i=2e3,locales:a,selector:n,showInMobile:l,ignoreSelector:t=[],transform:e})=>{const k=ke("(max-width: 419px)"),p=v(()=>!k.value||l),r=On(a),d=fs(),g=m=>{var D;if(m.hasAttribute("copy-code-registered"))return;const C=document.createElement("button");C.type="button",C.classList.add("vp-copy-code-button"),C.setAttribute("aria-label",r.value.copy),C.setAttribute("data-copied",r.value.copied),(D=m.parentElement)==null||D.insertBefore(C,m),m.setAttribute("copy-code-registered","")};ds(()=>[d.value.path,p.value],async()=>{document.body.classList.toggle("copy-code-disabled",!p.value),p.value&&(await Mi(),await jp(s),document.querySelectorAll(n.join(",")).forEach(g))},{immediate:!0});const{copy:c}=Ao({legacy:!0}),E=new WeakMap,F=(m,C,D)=>{const u=C.cloneNode(!0);t.length&&u.querySelectorAll(t.join(",")).forEach(R=>R.remove()),e&&e(u);let b=u.textContent||"";py.test(m.className)&&(b=b.replace(/^ *(\$|>) /gm,"")),c(b).then(()=>{if(i<=0)return;D.classList.add("copied"),clearTimeout(E.get(D));const R=setTimeout(()=>{D.classList.remove("copied"),D.blur(),E.delete(D)},i);E.set(D,R)})};Ns("click",m=>{const C=m.target;if(p.value&&C.matches('div[class*="language-"] > button.vp-copy-code-button')){const D=C.parentElement,u=C.nextElementSibling;if(!D||!u)return;F(D,u,C)}})};var dy={"/":{copy:"复制代码",copied:"已复制"}},gy=['.theme-hope-content div[class*="language-"] pre'];const By=_i({setup:()=>{ry({selector:gy,locales:dy,duration:2e3,delay:500,showInMobile:!1})}}),cy=Object.freeze(Object.defineProperty({__proto__:null,default:By},Symbol.toStringTag,{value:"Module"})),al=Ha("VUEPRESS_CODE_TAB_STORE",{});var oy=$({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:i}){const a=Y(s.active),n=ws([]),l=()=>{s.tabId&&(al.value[s.tabId]=s.data[a.value].id)},t=(r=a.value)=>{a.value=r<n.value.length-1?r+1:0,n.value[a.value].focus()},e=(r=a.value)=>{a.value=r>0?r-1:n.value.length-1,n.value[a.value].focus()},k=(r,d)=>{r.key===" "||r.key==="Enter"?(r.preventDefault(),a.value=d):r.key==="ArrowRight"?(r.preventDefault(),t()):r.key==="ArrowLeft"&&(r.preventDefault(),e()),s.tabId&&(al.value[s.tabId]=s.data[a.value].id)},p=()=>{if(s.tabId){const r=s.data.findIndex(({id:d})=>al.value[s.tabId]===d);if(r!==-1)return r}return s.active};return Cs(()=>{a.value=p(),ds(()=>al.value[s.tabId],(r,d)=>{if(s.tabId&&r!==d){const g=s.data.findIndex(({id:B})=>B===r);g!==-1&&(a.value=g)}})}),()=>s.data.length?h("div",{class:"vp-code-tabs"},[h("div",{class:"vp-code-tabs-nav",role:"tablist"},s.data.map(({id:r},d)=>{const g=d===a.value;return h("button",{type:"button",ref:B=>{B&&(n.value[d]=B)},class:["vp-code-tab-nav",{active:g}],role:"tab","aria-controls":`codetab-${s.id}-${d}`,"aria-selected":g,onClick:()=>{a.value=d,l()},onKeydown:B=>k(B,d)},i[`title${d}`]({value:r,isActive:g}))})),s.data.map(({id:r},d)=>{const g=d===a.value;return h("div",{class:["vp-code-tab",{active:g}],id:`codetab-${s.id}-${d}`,role:"tabpanel","aria-expanded":g},[h("div",{class:"vp-code-tab-title"},i[`title${d}`]({value:r,isActive:g})),i[`tab${d}`]({value:r,isActive:g})])})]):null}});const n2=({active:s=!1},{slots:i})=>{var a;return h("div",{class:["code-group-item",{active:s}],"aria-selected":s},(a=i.default)==null?void 0:a.call(i))};n2.displayName="CodeGroupItem";const yy=$({name:"CodeGroup",slots:Object,setup(s,{slots:i}){const a=Y(-1),n=ws([]),l=(k=a.value)=>{a.value=k<n.value.length-1?k+1:0,n.value[a.value].focus()},t=(k=a.value)=>{a.value=k>0?k-1:n.value.length-1,n.value[a.value].focus()},e=(k,p)=>{k.key===" "||k.key==="Enter"?(k.preventDefault(),a.value=p):k.key==="ArrowRight"?(k.preventDefault(),l(p)):k.key==="ArrowLeft"&&(k.preventDefault(),t(p))};return()=>{var p;const k=(((p=i.default)==null?void 0:p.call(i))||[]).filter(r=>r.type.name==="CodeGroupItem").map(r=>(r.props===null&&(r.props={}),r));return k.length===0?null:(a.value<0||a.value>k.length-1?(a.value=k.findIndex(r=>"active"in r.props),a.value===-1&&(a.value=0)):k.forEach((r,d)=>{r.props.active=d===a.value}),h("div",{class:"code-group"},[h("div",{class:"code-group-nav"},k.map((r,d)=>{const g=d===a.value;return h("button",{type:"button",ref:B=>{B&&(n.value[d]=B)},class:["code-group-nav-tab",{active:g}],"aria-pressed":g,"aria-expanded":g,onClick:()=>{a.value=d},onKeydown:B=>e(B,d)},r.props.title)})),k]))}}}),gs=({name:s="",color:i="currentColor",ariaLabel:a},{attrs:n,slots:l})=>{var t;return h("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:i,"aria-label":a??`${s} icon`,...n},(t=l.default)==null?void 0:t.call(l))};gs.displayName="IconBase";const l2=({size:s=48,stroke:i=4,wrapper:a=!0,height:n=2*s})=>{const l=h("svg",{xmlns:"http://www.w3.org/2000/svg",width:s,height:s,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[h("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),h("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":i,"stroke-linecap":"round"},[h("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),h("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return a?h("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${n}px`},l):l};l2.displayName="LoadingIcon";const Sl=(s,{slots:i})=>{var a;return(a=i.default)==null?void 0:a.call(i)},Ey=s=>oa(s)?s:`https://github.com/${s}`,de=(s="")=>!oa(s)||/github\.com/.test(s)?"GitHub":/bitbucket\.org/.test(s)?"Bitbucket":/gitlab\.com/.test(s)?"GitLab":/gitee\.com/.test(s)?"Gitee":null,t2=()=>h(gs,{name:"github"},()=>h("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));t2.displayName="GitHubIcon";const e2=()=>h(gs,{name:"gitee"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));e2.displayName="GiteeIcon";const h2=()=>h(gs,{name:"bitbucket"},()=>h("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));h2.displayName="BitbucketIcon";const k2=()=>h(gs,{name:"source"},()=>h("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));k2.displayName="SourceIcon";const uy=({link:s,type:i=de(s??"")})=>{if(!i)return null;const a=i.toLowerCase();return h(a==="bitbucket"?h2:a==="github"?t2:a==="gitlab"?"GitLab":a==="gitee"?e2:k2)},Ay=(s,i=0)=>{let a=3735928559^i,n=1103547991^i;for(let l=0,t;l<s.length;l++)t=s.charCodeAt(l),a=Math.imul(a^t,2654435761),n=Math.imul(n^t,1597334677);return a=Math.imul(a^a>>>16,2246822507),a^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(a^a>>>13,3266489909),4294967296*(2097151&n)+(a>>>0)},xn=(s,i)=>Ay(s)%i;let Fy=class{constructor(){Pl(this,"containerElement");Pl(this,"messageElements",{});const i="message-container",a=document.getElementById(i);a?this.containerElement=a:(this.containerElement=document.createElement("div"),this.containerElement.id=i,document.body.appendChild(this.containerElement))}pop(i,a=2e3){const n=document.createElement("div"),l=Date.now();return n.className="message move-in",n.innerHTML=i,this.containerElement.appendChild(n),this.messageElements[l]=n,a>0&&setTimeout(()=>{this.close(l)},a),l}close(i){if(i){const a=this.messageElements[i];a.classList.remove("move-in"),a.classList.add("move-out"),a.addEventListener("animationend",()=>{a.remove(),delete this.messageElements[i]})}else Ai(this.messageElements).forEach(a=>this.close(Number(a)))}destroy(){document.body.removeChild(this.containerElement)}};const p2=/#.*$/u,vy=s=>{const i=p2.exec(s);return i?i[0]:""},Gh=s=>decodeURI(s).replace(p2,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),r2=(s,i)=>{if(!Vp(i))return!1;const a=Gh(s.path),n=Gh(i),l=vy(i);return l?l===s.hash&&(!n||a===n):a===n};var Cy=s=>Object.prototype.toString.call(s)==="[object Object]",un=s=>typeof s=="string";const d2=Array.isArray,Wh=s=>Cy(s)&&un(s.name),An=(s,i=!1)=>s?d2(s)?s.map(a=>un(a)?{name:a}:Wh(a)?a:null).filter(a=>a!==null):un(s)?[{name:s}]:Wh(s)?[s]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${i?"":"| false"} | undefined\`, but got`,s),[]):[],g2=(s,i)=>{if(s){if(d2(s)&&s.every(un))return s;if(un(s))return[s];console.error(`Expect ${i} to be \`string[] | string | undefined\`, but got`,s)}return[]},B2=s=>g2(s,"category"),c2=s=>g2(s,"tag"),my='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',Dy='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var fy={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const it=fy,qh={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},by=(s,i,a)=>{const n=document.createElement(s);return ja(i)&&Ai(i).forEach(l=>{if(l.indexOf("data"))n[l]=i[l];else{const t=l.replace("data","");n.dataset[t]=i[l]}}),n},ge=s=>({...it,...s,jsLib:Array.from(new Set([...it.jsLib??[],...s.jsLib??[]])),cssLib:Array.from(new Set([...it.cssLib??[],...s.cssLib??[]]))}),Sa=(s,i)=>{if(Vp(s[i]))return s[i];const a=new Promise(n=>{var t;const l=document.createElement("script");l.src=i,(t=document.querySelector("body"))==null||t.appendChild(l),l.onload=()=>{n()}});return s[i]=a,a},_y=(s,i)=>{if(i.css&&Array.from(s.childNodes).every(a=>a.nodeName!=="STYLE")){const a=by("style",{innerHTML:i.css});s.appendChild(a)}},Iy=(s,i,a)=>{const n=a.getScript();if(n&&Array.from(i.childNodes).every(l=>l.nodeName!=="SCRIPT")){const l=document.createElement("script");l.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${s} .vp-code-demo-display').shadowRoot;
${n}}`)),i.appendChild(l)}},Sy=["html","js","css"],wy=s=>{const i=Ai(s),a={html:[],js:[],css:[],isLegal:!1};return Sy.forEach(n=>{const l=i.filter(t=>qh[n].types.includes(t));if(l.length){const t=l[0];a[n]=[s[t].replace(/^\n|\n$/g,""),qh[n].map[t]??t]}}),a.isLegal=(!a.html.length||a.html[1]==="none")&&(!a.js.length||a.js[1]==="none")&&(!a.css.length||a.css[1]==="none"),a},o2=s=>s.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),y2=s=>`<div id="app">
${o2(s)}
</div>`,Oy=s=>`${s.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,Ty=s=>s.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),E2=s=>`(function(exports){var module={};module.exports=exports;${s};return module.exports.__esModule.exports.default:module.exports;})({})`,Py=(s,i)=>{const a=ge(i),n=s.js[0]??"";return{...a,html:o2(s.html[0]??""),js:n,css:s.css[0]??"",isLegal:s.isLegal,getScript:()=>{var l;return a.useBabel?((l=window.Babel.transform(n,{presets:["es2015"]}))==null?void 0:l.code)??"":n}}},Ny=/<template>([\s\S]+)<\/template>/u,Ly=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,xy=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,Ry=(s,i)=>{const a=ge(i),n=s.html[0]??"",l=Ny.exec(n),t=Ly.exec(n),e=xy.exec(n),k=(l==null?void 0:l[1].replace(/^\n|\n$/g,""))??"",[p="",r=""]=t?[t[4].replace(/^\n|\n$/g,""),t[3]]:[],[d="",g=""]=e?[e[4].replace(/^\n|\n$/g,""),e[3]]:[],B=r===""&&(g===""||g==="css");return{...a,html:y2(k),js:Ty(p),css:d,isLegal:B,jsLib:[a.vue,...a.jsLib],getScript:()=>{var E,F;const c=i.useBabel?((F=(E=window.Babel)==null?void 0:E.transform(p,{presets:["es2015"]}))==null?void 0:F.code)??"":p.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${E2(c)};appOptions.template=\`${k.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},My=(s,i)=>{var l;const a=ge(i),n=s.js[0]??"";return{...a,html:y2(""),js:Oy(n),css:s.css[0]??((l=s.js[0])==null?void 0:l.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:s.isLegal,jsLib:[a.react,a.reactDOM,...a.jsLib],jsx:!0,getScript:()=>{var e,k;const t=((k=(e=window.Babel)==null?void 0:e.transform(n,{presets:["es2015","react"]}))==null?void 0:k.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${E2(t)}))`}}},wa={},$y=s=>Promise.all([Sa(wa,s.babel),Sa(wa,s.react),Sa(wa,s.reactDOM)]),Jy=s=>{const i=[Sa(wa,s.vue)];return s.useBabel&&i.push(Sa(wa,s.babel)),Promise.all(i)},jy=s=>s.useBabel?Sa(wa,s.babel):Promise.resolve();var Vy=$({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(s,{slots:i}){const[a,n]=En(!1),l=ws(),t=ws(),e=Y("0"),k=Y(!1),p=v(()=>JSON.parse(s.config?Rh(s.config):"{}")),r=v(()=>{const E=JSON.parse(Rh(s.code));return wy(E)}),d=v(()=>s.type==="react"?My(r.value,p.value):s.type==="vue"?Ry(r.value,p.value):Py(r.value,p.value)),g=v(()=>d.value.isLegal),B=(E=!1)=>{const F=l.value.attachShadow({mode:"open"}),m=document.createElement("div");m.classList.add("code-demo-app"),F.appendChild(m),g.value?(E&&(m.innerHTML=d.value.html),_y(F,d.value),Iy(s.id,F,d.value),e.value="0"):e.value="auto",k.value=!0},c=()=>{switch(s.type){case"react":return $y(d.value).then(()=>B());case"vue":return Jy(d.value).then(()=>B());default:return jy(d.value).then(()=>B(!0))}};return Ns("beforeprint",()=>{n(!0)}),Cs(()=>{setTimeout(()=>{c()},800)}),()=>{var E;return h("div",{class:"vp-code-demo",id:s.id},[h("div",{class:"vp-code-demo-header"},[d.value.isLegal?h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",a.value?"down":"end"],onClick:()=>{e.value=a.value?"0":`${t.value.clientHeight+13.8}px`,n()}}):null,s.title?h("span",{class:"vp-code-demo-title"},decodeURIComponent(s.title)):null,d.value.isLegal&&d.value.jsfiddle!==!1?h("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[h("input",{type:"hidden",name:"html",value:d.value.html}),h("input",{type:"hidden",name:"js",value:d.value.js}),h("input",{type:"hidden",name:"css",value:d.value.css}),h("input",{type:"hidden",name:"wrap",value:"1"}),h("input",{type:"hidden",name:"panel_js",value:"3"}),h("input",{type:"hidden",name:"resources",value:[...d.value.cssLib,...d.value.jsLib].join(",")}),h("button",{type:"submit",class:"jsfiddle-button",innerHTML:Dy,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!d.value.isLegal||d.value.codepen!==!1?h("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[h("input",{type:"hidden",name:"data",value:JSON.stringify({html:d.value.html,js:d.value.js,css:d.value.css,js_external:d.value.jsLib.join(";"),css_external:d.value.cssLib.join(";"),layout:d.value.codepenLayout,html_pre_processor:r.value?r.value.html[1]:"none",js_pre_processor:r.value?r.value.js[1]:d.value.jsx?"babel":"none",css_pre_processor:r.value?r.value.css[1]:"none",editors:d.value.codepenEditors})}),h("button",{type:"submit",innerHTML:my,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),k.value?null:h(l2,{class:"vp-code-demo-loading"}),h("div",{ref:l,class:"vp-code-demo-display",style:{display:g.value&&k.value?"block":"none"}}),h("div",{class:"vp-code-demo-code-wrapper",style:{height:e.value}},h("div",{ref:t,class:"vp-code-demo-codes"},(E=i.default)==null?void 0:E.call(i)))])}}}),Hy=$({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(s,{slots:i}){const[a,n]=En(!1),l=ws(),t=Y("0");return Ns("beforeprint",()=>{n(!0)}),()=>{var e,k;return h("div",{class:"vp-md-demo",id:s.id},[h("div",{class:"vp-md-demo-header"},[h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",a.value?"down":"end"],onClick:()=>{t.value=a.value?"0":`${l.value.clientHeight+13.8}px`,n()}}),s.title?decodeURIComponent(s.title):null]),h("div",{class:"vp-md-demo-display"},(e=i.default)==null?void 0:e.call(i)),h("div",{class:"vp-md-demo-code-wrapper",style:{height:t.value}},h("div",{ref:l,class:"vp-md-demo-codes"},(k=i.code)==null?void 0:k.call(i)))])}}});const zy=()=>{Ns("beforeprint",()=>{document.querySelectorAll("details").forEach(s=>{s.open=!0})})},at=Ha("VUEPRESS_TAB_STORE",{});var Uy=$({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:i}){const a=Y(s.active),n=ws([]),l=()=>{s.tabId&&(at.value[s.tabId]=s.data[a.value].id)},t=(r=a.value)=>{a.value=r<n.value.length-1?r+1:0,n.value[a.value].focus()},e=(r=a.value)=>{a.value=r>0?r-1:n.value.length-1,n.value[a.value].focus()},k=(r,d)=>{r.key===" "||r.key==="Enter"?(r.preventDefault(),a.value=d):r.key==="ArrowRight"?(r.preventDefault(),t()):r.key==="ArrowLeft"&&(r.preventDefault(),e()),l()},p=()=>{if(s.tabId){const r=s.data.findIndex(({id:d})=>at.value[s.tabId]===d);if(r!==-1)return r}return s.active};return Cs(()=>{a.value=p(),ds(()=>at.value[s.tabId],(r,d)=>{if(s.tabId&&r!==d){const g=s.data.findIndex(({id:B})=>B===r);g!==-1&&(a.value=g)}})}),()=>s.data.length?h("div",{class:"vp-tabs"},[h("div",{class:"vp-tabs-nav",role:"tablist"},s.data.map(({id:r},d)=>{const g=d===a.value;return h("button",{type:"button",ref:B=>{B&&(n.value[d]=B)},class:["vp-tab-nav",{active:g}],role:"tab","aria-controls":`tab-${s.id}-${d}`,"aria-selected":g,onClick:()=>{a.value=d,l()},onKeydown:B=>k(B,d)},i[`title${d}`]({value:r,isActive:g}))})),s.data.map(({id:r},d)=>{const g=d===a.value;return h("div",{class:["vp-tab",{active:g}],id:`tab-${s.id}-${d}`,role:"tabpanel","aria-expanded":g},[h("div",{class:"vp-tab-title"},i[`title${d}`]({value:r,isActive:g})),i[`tab${d}`]({value:r,isActive:g})])})]):null}});const Gy=_i({enhance:({app:s})=>{s.component("CodeTabs",oy),Gs("CodeGroup",s)||s.component("CodeGroup",yy),Gs("CodeGroupItem",s)||s.component("CodeGroupItem",n2),s.component("CodeDemo",Vy),s.component("MdDemo",Hy),s.component("Tabs",Uy)},setup:()=>{zy()}}),Wy=Object.freeze(Object.defineProperty({__proto__:null,default:Gy},Symbol.toStringTag,{value:"Module"})),qy=Y({}),u2=Symbol(""),Ky=()=>Ds(u2),Yy=s=>{s.provide(u2,qy)},Qy='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',Xy=s=>bs(s)?Array.from(document.querySelectorAll(s)):s.map(i=>Array.from(document.querySelectorAll(i))).flat(),A2=s=>new Promise((i,a)=>{s.complete?i({type:"image",element:s,src:s.src,width:s.naturalWidth,height:s.naturalHeight,alt:s.alt,msrc:s.src}):(s.onload=()=>i(A2(s)),s.onerror=n=>a(n))}),Zy=(s,{download:i=!0,fullscreen:a=!0}={})=>{s.on("uiRegister",()=>{if(s.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(n,l)=>{const t=[];let e=-1;for(let k=0;k<l.getNumItems();k++){const p=document.createElement("div");p.className="photo-swipe-bullet",p.onclick=r=>{l.goTo(t.indexOf(r.target))},t.push(p),n.appendChild(p)}l.on("change",()=>{e>=0&&t[e].classList.remove("active"),t[l.currIndex].classList.add("active"),e=l.currIndex})}}),a){const{isSupported:n,toggle:l}=pe();n.value&&s.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{l()}})}i&&s.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(n,l)=>{n.setAttribute("download",""),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener"),l.on("change",()=>{n.setAttribute("href",l.currSlide.data.src)})}})})},s9=(s,{scrollToClose:i=!0,download:a=!0,fullscreen:n=!0,...l})=>A(async()=>{const{default:t}=await import("./photoswipe.esm-GXRgw7eJ.js");return{default:t}},[]).then(({default:t})=>{let e=null;const k=s.map(p=>({html:Qy,element:p,msrc:p.src}));return s.forEach((p,r)=>{const d=()=>{e==null||e.destroy(),e=new t({preloaderDelay:0,showHideAnimationType:"zoom",...l,dataSource:k,index:r,...i?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),Zy(e,{download:a,fullscreen:n}),e.addFilter("thumbEl",()=>p),e.addFilter("placeholderSrc",()=>p.src),e.init()};p.getAttribute("photo-swipe")||(p.style.cursor="zoom-in",p.addEventListener("click",()=>{d()}),p.addEventListener("keypress",({key:g})=>{g==="Enter"&&d()}),p.setAttribute("photo-swipe","")),A2(p).then(g=>{k.splice(r,1,g),e==null||e.refreshSlideContent(r)})}),i?Ns("wheel",()=>{e==null||e.close()}):()=>{}}),i9=({selector:s,locales:i,delay:a=500,download:n=!0,fullscreen:l=!0,scrollToClose:t=!0})=>{const e=Ky(),k=On(i),p=fs(),r=cs();let d=null;const g=()=>{const{photoSwipe:B}=r.value;B!==!1&&Mi().then(()=>jp(a)).then(async()=>{const c=bs(B)?B:s;d=await s9(Xy(c),{...e.value,...k.value,download:n,fullscreen:l,scrollToClose:t})})};Cs(()=>{g(),ds(()=>[p.value.path,e.value],()=>{d==null||d(),g()})}),Ja(()=>{d==null||d()})};var a9={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const n9=".theme-hope-content :not(a) > img:not([no-view])",l9=a9,t9=800,e9=!0,h9=!0,k9=!0,p9=_i({enhance:({app:s})=>{Yy(s)},setup:()=>{i9({selector:n9,delay:t9,locales:l9,download:e9,fullscreen:h9,scrollToClose:k9})}}),r9=Object.freeze(Object.defineProperty({__proto__:null,default:p9},Symbol.toStringTag,{value:"Module"})),F2=()=>{const s=fs();return v(()=>s.value.readingTime??null)},v2=(s,i)=>{const{minutes:a,words:n}=s,{less1Minute:l,word:t,time:e}=i;return{time:a<1?l:e.replace("$time",Math.round(a).toString()),words:t.replace("$word",n.toString())}};var Kh={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const Yh={words:"",time:""},mt=typeof Kh>"u"?null:Kh,C2=()=>mt?On(mt):v(()=>null),d9=()=>{if(typeof mt>"u")return v(()=>Yh);const s=F2(),i=C2();return v(()=>s.value&&i.value?v2(s.value,i.value):Yh)},Ii=()=>i2(),es=()=>ty(),Ws=()=>{const s=Ii();return v(()=>!!s.value.pure)},hl=()=>null,g9="719px",B9="1440px",c9="false",o9="9",Ea={mobileBreakPoint:g9,pcBreakPoint:B9,enableThemeColor:c9,colorNumber:o9},Be={"/":["",{text:"Apache NIFI开发",prefix:"ApacheNIFI开发/",collapsible:!0,children:["001-编译NIFI源码","002-NIFI自定义开发规范","003-Processor的一些方法","004-自定义Processor","005-自定义ExpressionLanguage","006-NIFI启动源码","007-在HTTP模式下开启权限模块","008-JettyServer源码","009-NiFi源码","010-nifi注解","011-Debezium详细嵌入NIFI","nifi-env-sh","nifi-sh-start","nifi-sh","RunNiFi源码"]},{text:"Apache NIFI教程",prefix:"ApacheNIFI教程/",collapsible:!0,children:["001-NiFi术语","002-带你体验ApacheNIFI","003-NIFI入门","004-数据抽取的常见方法","005-基于增量字段同步数据","006-NIFI各个NAR包功能概述","007-Nar包加载机制源码解读","008-Nar包下的MANIFEST.MF","009-Apache NIFI类资源隔离机制","010-Apache NIFI Processor情况","011-理解connection","012-理解maxThread设置","013-RunDuration理解","014-ContentRepositoryArchiving理解","015-Controller Services是守护进程","016-NIFI调度","017-NIFI高可用","018-通过配置优化NiFi性能","019-NIFI里的数据库连接池","020-为什么建议使用NIFI里的Record","021-NIFI贡献代码","022-NIFI开启HTTPS","023-ExecuteScript脚本教程","024-内容存储库原理","025-FlowFile存储库原理","026-预写日志(WAL)","027-Provenance存储库原理","028-NIFI架构","029-NIFI事务原理","030-数据库字段类型","031-1.14","032-CaptureChangeMySQL","033-流程告警","034-JWT","037-MySQL全字段测试","000-ApacheNIFI历史"]},{text:"IO流(java)",prefix:"IO流(java)/",collapsible:!0,children:["01-输入输出流","02-File","03-缓冲流BufferedInputStream与BufferedOutputStream","04-缓冲流BufferedReader与BufferedWriter","05-转换流InputStreamReader与OutputStreamWriter","06-ByteArrayInputStream与ByteArrayOutputStream","07-CommonsIO2.5-FileUtils"]},{text:"JAVA",prefix:"JAVA/",collapsible:!0,children:["ByteArrayOutputStream","Java SPI机制","Java8_JVM内存模型","Java中atomic包中的原子操作类总结","Java中的锁","Java内存模型原理","Java反射","Java导入语句中不宜使用通配符","java注解","Java类加载器","Java里带标签的break和continue","Jvm-dump-jstack-jmap-jstat","web的发展历史","代码设计原理","使用List","偏向锁批量重偏向与批量撤销","到底什么是classpath","动手体验JVM中Class对象的唯一性","多线程基础知识总结","让你彻底理解Synchronized","打印Java对象头","深入了解Java锁","相对路径与绝对路径去读取文件","类加载机制","线程通信"]},{text:"JOLT",prefix:"JOLT/",collapsible:!0,children:["JsonJolt教程","JsonJolt教程英文版","使用jolt替换值"]},{text:"Spring常见错误",prefix:"Spring常见错误/",collapsible:!0,children:["001Spring基础知识","002Bean定义常见错误","003依赖注入常见错误上","004依赖注入常见错误下","005Bean生命周期常见错误","006SpringAOP常见错误上","007SpringAOP常见错误下","008Spring事件常见错误"]},{text:"数据库 CDC",prefix:"数据库CDC/",collapsible:!0,children:["BIT的字节序","基于水印的CDC框架","Oracle12cLogMiner分析Redo日志文件","001-管理OracleRedoLog"]},{text:"深入浅出 Java多线程",prefix:"深入浅出Java多线程/",collapsible:!0,children:["01-进程与线程基本概念","02-Java多线程入门类和接口","03-线程组和线程优先级","04-Java线程的状态及主要转化方法","05-Java线程间的通信","06-Java内存模型基础知识","07-重排序与happens-before","08-volatitle","09-synchronized与锁","10-CAS与原子操作","11-AQS","12-线程池原理","13-阻塞队列","14-锁接口和类","15-并发容器集合","16-CopyOnWrite容器","17-通信工具类","18-Fork_Join框架","19-Java8Stream并行计算原理","20-计划任务","深入浅出Java多线程"]},{text:"算法",prefix:"算法/",collapsible:!0,children:["二叉搜索树的前驱和后继节点","什么是红黑树","冒泡排序","十大经典排序算法最强总结","基于Java实现红黑树的基本操作","并查集","sf"]},{text:"阿里 Java开发手册",prefix:"阿里Java开发手册/",collapsible:!0,children:["01-命名风格","02-常量定义","03-代码格式","04-OOP规约","05-日期时间","06-集合处理","07-并发处理","08-控制语句","09-注释规约","10-其它","11-错误码","12-异常处理","13-日志规约","14-单元测试","15-安全规约","16-建表规约","17-索引规约","18-SQL语句","19-ORM映射","20-应用分层","21-二方库依赖","22-服务器","23-设计规约","24-专有名词解释","25-错误码列表","手抄版"]}]},m2=s=>{const{icon:i="",color:a,size:n}=s,l=a||n?{}:null;return a&&(l.color=a),n&&(l.height=Number.isNaN(Number(n))?n:`${n}px`),oa(i)?h("img",{class:"icon",src:i,alt:"","no-view":"",style:l}):_l(i)?h("img",{class:"icon",src:Es(i),alt:"","aria-hidden":"","no-view":"",style:l}):h(ri("FontIcon"),s)};m2.displayName="HopeIcon";var Hs=m2;const D2=()=>{const s=es();return v(()=>s.value.author)},y9="http://.",ua=()=>{const s=ya(),i=bi();return a=>{if(a)if(_l(a))i.path!==a&&s.push(a);else if(Sn(a))window&&window.open(a);else{const n=i.path.slice(0,i.path.lastIndexOf("/"));s.push(new URL(`${n}/${encodeURI(a)}`,y9).pathname)}}},f2=()=>{const s=cs(),i=D2();return v(()=>{const{author:a}=s.value;return a?An(a):a===!1?[]:An(i.value,!1)})},E9=()=>{const s=cs(),i=Ds(Symbol.for("categoryMap"));return v(()=>B2(s.value.category??s.value.categories).map(a=>{var n;return{name:a,path:((n=i==null?void 0:i.value.map[a])==null?void 0:n.path)??""}}))},u9=()=>{const s=cs(),i=Ds(Symbol.for("tagMap"));return v(()=>c2(s.value.tag??s.value.tags).map(a=>{var n;return{name:a,path:((n=i==null?void 0:i.value.map[a])==null?void 0:n.path)??""}}))},A9=()=>{const s=cs(),i=fs();return v(()=>{const a=ee(s.value.date);if(a)return a;const{createdTime:n}=i.value.git??{};return n?new Date(n):null})},F9=()=>{const s=es(),i=fs(),a=cs(),n=f2(),l=E9(),t=u9(),e=A9(),k=F2(),p=d9(),r=v(()=>({author:n.value,category:l.value,date:e.value,localizedDate:i.value.localizedDate,tag:t.value,isOriginal:a.value.isOriginal??!1,readingTime:k.value,readingTimeLocale:p.value,pageview:a.value.pageview??!0})),d=v(()=>a.value.pageInfo??s.value.pageInfo??null);return{info:r,items:d}},ce=(s,i)=>"activeMatch"in i?new RegExp(i.activeMatch,"u").test(s.path):r2(s,i.link),oe=(s,i)=>"children"in i?!!i.prefix&&r2(s,i.prefix)||i.children.some(a=>oe(s,a)):ce(s,i),Dt=s=>!ml(s)&&!Sn(s);var Us=(s=>(s.title="t",s.shortTitle="s",s.icon="i",s.index="I",s.order="O",s.breadcrumbExclude="b",s))(Us||{}),Vs=(s=>(s.type="y",s.author="a",s.date="d",s.localizedDate="l",s.category="c",s.tag="g",s.isEncrypted="n",s.isOriginal="o",s.readingTime="r",s.excerpt="e",s.sticky="u",s.cover="v",s))(Vs||{}),b2=(s=>(s.article="a",s.home="h",s.slide="s",s.page="p",s))(b2||{});const yl=(s,i=!1,a)=>{const{meta:n,path:l,notFound:t}=gi(s,a);return t?{text:l,link:l}:{text:!i&&n[Us.shortTitle]?n[Us.shortTitle]:n[Us.title]||l,link:l,...n[Us.icon]?{icon:n[Us.icon]}:{}}},pa=(s="",i="")=>_l(i)||Sn(i)?i:`${Ep(s)}${i}`,_2=(s,i)=>{const a=bs(s)?yl(pa(i,s)):s.link?{...s,link:Dt(s.link)?gi(pa(i,s.link)).path:s.link}:s;if("children"in a){const n=pa(i,a.prefix),l=a.children==="structure"?Be[n]:a.children;return{...a,prefix:n,children:l.map(t=>_2(t,n))}}return{...a}},ft=({config:s,prefix:i=""})=>s.map(a=>_2(a,i)),v9=({config:s,routePath:i,headerDepth:a})=>{const n=Ai(s).sort((l,t)=>t.length-l.length);for(const l of n)if(yn(decodeURI(i),l)){const t=s[l];return ft({config:t==="structure"?Be[l]:t||[],headerDepth:a,prefix:l})}return console.warn(`${decodeURI(i)} is missing sidebar config.`),[]},C9=({config:s,headerDepth:i,routeLocale:a,routePath:n})=>s==="structure"?ft({config:Be[a],headerDepth:i,prefix:a}):Ct(s)?ft({config:s,headerDepth:i}):ja(s)?v9({config:s,routePath:n,headerDepth:i}):[],I2=Symbol(""),m9=()=>{const s=cs(),i=es(),a=ia(),n=wc(),l=v(()=>s.value.home?!1:s.value.sidebar??i.value.sidebar??"structure"),t=v(()=>s.value.headerDepth??i.value.headerDepth??2),e=v(()=>C9({config:l.value,headerDepth:t.value,routeLocale:a.value,routePath:n.value}));Ei(I2,e)},ye=()=>{const s=Ds(I2);if(!s)throw new Error("useSidebarItems() is called without provider.");return s},{mobileBreakPoint:D9,pcBreakPoint:f9}=Ea,Qh=s=>s.endsWith("px")?Number(s.slice(0,-2)):null,Rn=()=>{const s=Y(!1),i=Y(!1),a=()=>{s.value=window.innerWidth<=(Qh(D9)??719),i.value=window.innerWidth>=(Qh(f9)??1440)};return Ns("resize",a,!1),Ns("orientationchange",a,!1),Cs(()=>{a()}),{isMobile:s,isPC:i}},S2=Symbol(""),Mn=()=>{const s=Ds(S2);if(!s)throw new Error("useDarkmode() is called without provider.");return s},b9=s=>{const i=Ii(),a=fo(),n=v(()=>i.value.darkmode??"switch"),l=Ha("vuepress-theme-hope-scheme","auto"),t=v(()=>{const k=n.value;return k==="disable"?!1:k==="enable"?!0:k==="auto"?a.value:k==="toggle"?l.value==="dark":l.value==="dark"||l.value==="auto"&&a.value}),e=v(()=>{const k=n.value;return k==="switch"||k==="toggle"});s.provide(S2,{canToggle:e,config:n,isDarkmode:t,status:l}),Object.defineProperties(s.config.globalProperties,{$isDarkmode:{get:()=>t.value}})},_9=()=>{const{config:s,isDarkmode:i,status:a}=Mn();Yk(()=>{s.value==="disable"?a.value="light":s.value==="enable"?a.value="dark":s.value==="toggle"&&a.value==="auto"&&(a.value="light")}),Cs(()=>{ds(i,n=>document.documentElement.setAttribute("data-theme",n?"dark":"light"),{immediate:!0})})};var I9=$({name:"PageFooter",setup(){const s=Ii(),i=es(),a=cs(),n=f2(),l=v(()=>{const{copyright:r,footer:d}=a.value;return d!==!1&&!!(r||d||i.value.displayFooter)}),t=v(()=>{const{footer:r}=a.value;return r===!1?!1:bs(r)?r:i.value.footer??""}),e=v(()=>n.value.map(({name:r})=>r).join(", ")),k=r=>`Copyright © ${new Date().getFullYear()} ${e.value} ${r?`${r} Licensed`:""}`,p=v(()=>{const{copyright:r,license:d=""}=a.value,{license:g}=s.value,{copyright:B}=i.value;return r??(d?k(d):B??(e.value||g?k(g):!1))});return()=>l.value?h("footer",{class:"vp-footer-wrapper"},[t.value?h("div",{class:"vp-footer",innerHTML:t.value}):null,p.value?h("div",{class:"vp-copyright",innerHTML:p.value}):null]):null}}),Ys=$({name:"AutoLink",props:{config:{type:Object,required:!0}},emits:["focusout"],slots:Object,setup(s,{emit:i,slots:a}){return()=>{const{icon:n}=s.config;return h(Lc,{...s,onFocusout:()=>i("focusout")},{default:a.default?()=>a.default():null,before:a.before?()=>a.before():n?()=>h(Hs,{icon:n}):null,after:a.after?()=>a.after():null})}}}),S9=$({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:i}){const a=fs(),n=$a(s,"config"),l=v(()=>n.value.ariaLabel??n.value.text),t=Y(!1);ds(()=>a.value.path,()=>{t.value=!1});const e=k=>{k.detail===0&&(t.value=!t.value)};return()=>{var k;return h("div",{class:["vp-dropdown-wrapper",{open:t.value}]},[h("button",{type:"button",class:"vp-dropdown-title","aria-label":l.value,onClick:e},[((k=i.title)==null?void 0:k.call(i))||[h(Hs,{icon:n.value.icon}),s.config.text],h("span",{class:"arrow"}),h("ul",{class:"vp-dropdown"},n.value.children.map((p,r)=>{const d=r===n.value.children.length-1;return h("li",{class:"vp-dropdown-item"},"children"in p?[h("h4",{class:"vp-dropdown-subtitle"},p.link?h(Ys,{config:p,onFocusout:()=>{p.children.length===0&&d&&(t.value=!1)}}):p.text),h("ul",{class:"vp-dropdown-subitems"},p.children.map((g,B)=>h("li",{class:"vp-dropdown-subitem"},h(Ys,{config:g,onFocusout:()=>{B===p.children.length-1&&d&&(t.value=!1)}}))))]:h(Ys,{config:p,onFocusout:()=>{d&&(t.value=!1)}}))}))])])}}});const w2=(s,i="")=>bs(s)?yl(pa(i,s)):"children"in s?{...s,...s.link&&Dt(s.link)?{link:gi(pa(i,s.link)).path}:{},children:s.children.map(a=>w2(a,pa(i,s.prefix)))}:{...s,link:Dt(s.link)?gi(pa(i,s.link)).path:s.link},O2=()=>{const s=es();return v(()=>(s.value.navbar||[]).map(i=>w2(i)))},w9=()=>{const s=es(),i=v(()=>s.value.repo),a=v(()=>i.value?Ey(i.value):null),n=v(()=>i.value?de(i.value):null),l=v(()=>a.value?s.value.repoLabel??n.value??"Source":null);return v(()=>!a.value||!l.value||s.value.repoDisplay===!1?null:{type:n.value??"Source",label:l.value,link:a.value})};var O9=$({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(s){const i=fs(),a=$a(s,"config"),n=v(()=>a.value.ariaLabel??a.value.text),l=Y(!1);ds(()=>i.value.path,()=>{l.value=!1});const t=(e,k)=>k[k.length-1]===e;return()=>[h("button",{type:"button",class:["vp-nav-screen-menu-title",{active:l.value}],"aria-label":n.value,onClick:()=>{l.value=!l.value}},[h("span",{class:"text"},[h(Hs,{icon:a.value.icon}),s.config.text]),h("span",{class:["arrow",l.value?"down":"end"]})]),h("ul",{class:["vp-nav-screen-menu",{hide:!l.value}]},a.value.children.map(e=>h("li",{class:"vp-nav-screen-menu-item"},"children"in e?[h("h4",{class:"vp-nav-screen-menu-subtitle"},e.link?h(Ys,{config:e,onFocusout:()=>{t(e,a.value.children)&&e.children.length===0&&(l.value=!1)}}):e.text),h("ul",{class:"vp-nav-screen-menu-subitems"},e.children.map(k=>h("li",{class:"vp-nav-screen-menu-subitem"},h(Ys,{config:k,onFocusout:()=>{t(k,e.children)&&t(e,a.value.children)&&(l.value=!1)}}))))]:h(Ys,{config:e,onFocusout:()=>{t(e,a.value.children)&&(l.value=!1)}}))))]}}),T9=$({name:"NavScreenLinks",setup(){const s=O2();return()=>s.value.length?h("nav",{class:"nav-screen-links"},s.value.map(i=>h("div",{class:"navbar-links-item"},"children"in i?h(O9,{config:i}):h(Ys,{config:i})))):null}});const T2=()=>h(gs,{name:"dark"},()=>h("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));T2.displayName="DarkIcon";const P2=()=>h(gs,{name:"light"},()=>h("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));P2.displayName="LightIcon";const N2=()=>h(gs,{name:"auto"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));N2.displayName="AutoIcon";const L2=()=>h(gs,{name:"enter-fullscreen"},()=>h("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));L2.displayName="EnterFullScreenIcon";const x2=()=>h(gs,{name:"cancel-fullscreen"},()=>h("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));x2.displayName="CancelFullScreenIcon";const R2=()=>h(gs,{name:"outlook"},()=>[h("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);R2.displayName="OutlookIcon";var M2=$({name:"ColorModeSwitch",setup(){const{config:s,isDarkmode:i,status:a}=Mn(),n=Ws(),l=()=>{s.value==="switch"?a.value={light:"dark",dark:"auto",auto:"light"}[a.value]:a.value=a.value==="light"?"dark":"light"},t=async e=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!n.value)||!e){l();return}const k=e.clientX,p=e.clientY,r=Math.hypot(Math.max(k,innerWidth-k),Math.max(p,innerHeight-p)),d=i.value;await document.startViewTransition(async()=>{l(),await Mi()}).ready,i.value!==d&&document.documentElement.animate({clipPath:i.value?[`circle(${r}px at ${k}px ${p}px)`,`circle(0px at ${k}px ${p}px)`]:[`circle(0px at ${k}px ${p}px)`,`circle(${r}px at ${k}px ${p}px)`]},{duration:400,pseudoElement:i.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>h("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:t},[h(N2,{style:{display:a.value==="auto"?"block":"none"}}),h(T2,{style:{display:a.value==="dark"?"block":"none"}}),h(P2,{style:{display:a.value==="light"?"block":"none"}})])}}),P9=$({name:"ColorMode",setup(){const s=es(),{canToggle:i}=Mn(),a=v(()=>s.value.outlookLocales.darkmode);return()=>i.value?h("div",{class:"vp-color-mode"},[h("label",{class:"vp-color-mode-title",for:"color-mode-switch"},a.value),h(M2)]):null}});const Xh=Ea.enableThemeColor==="true";var $2=$({name:"ToggleFullScreenButton",setup(){const s=es(),{isSupported:i,isFullscreen:a,toggle:n}=pe(),l=v(()=>s.value.outlookLocales.fullscreen);return()=>i?h("div",{class:"full-screen-wrapper"},[h("label",{class:"full-screen-title",for:"full-screen-switch"},l.value),h("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:a.value,onClick:()=>n()},a.value?h(x2):h(L2))]):null}}),J2=$({name:"OutlookSettings",setup(){const s=Ii(),i=Ws(),a=v(()=>!i.value&&s.value.fullscreen);return()=>h(bl,()=>[null,h(P9),a.value?h($2):null])}}),N9=$({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(s,{emit:i,slots:a}){const n=fs(),{isMobile:l}=Rn(),t=ws(),e=qp(t);return Cs(()=>{t.value=document.body,ds(l,k=>{!k&&s.show&&(e.value=!1,i("close"))}),ds(()=>n.value.path,()=>{e.value=!1,i("close")})}),Ja(()=>{e.value=!1}),()=>h(Zi,{name:"fade",onEnter:()=>{e.value=!0},onAfterLeave:()=>{e.value=!1}},()=>{var k,p;return s.show?h("div",{id:"nav-screen",class:"vp-nav-screen"},h("div",{class:"vp-nav-screen-container"},[(k=a.before)==null?void 0:k.call(a),h(T9),h("div",{class:"vp-outlook-wrapper"},h(J2)),(p=a.after)==null?void 0:p.call(a)])):null})}}),L9=$({name:"NavbarBrand",setup(){const s=ia(),i=wn(),a=es(),n=v(()=>a.value.home??s.value),l=v(()=>i.value.title),t=v(()=>a.value.navbarTitle??l.value),e=v(()=>a.value.logo?Es(a.value.logo):null),k=v(()=>a.value.logoDark?Es(a.value.logoDark):null);return()=>h(Ps,{to:n.value,class:"vp-brand"},()=>[e.value?h("img",{class:["vp-nav-logo",{light:!!k.value}],src:e.value,alt:""}):null,k.value?h("img",{class:["vp-nav-logo dark"],src:k.value,alt:""}):null,t.value?h("span",{class:["vp-site-name",{"hide-in-pad":e.value&&(a.value.hideSiteNameOnMobile??!0)}]},t.value):null])}}),x9=$({name:"NavbarLinks",setup(){const s=O2();return()=>s.value.length?h("nav",{class:"vp-nav-links"},s.value.map(i=>h("div",{class:"vp-nav-item hide-in-mobile"},"children"in i?h(S9,{config:i}):h(Ys,{config:i})))):null}}),R9=$({name:"RepoLink",setup(){const s=w9();return()=>s.value?h("div",{class:"vp-nav-item vp-action"},h("a",{class:"vp-action-link",href:s.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":s.value.label},h(uy,{type:s.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const j2=({active:s=!1},{emit:i})=>h("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":s}],"aria-label":"Toggle Navbar","aria-expanded":s,"aria-controls":"nav-screen",onClick:()=>i("toggle")},h("span",[h("span",{class:"vp-top"}),h("span",{class:"vp-middle"}),h("span",{class:"vp-bottom"})]));j2.displayName="ToggleNavbarButton";const bt=(s,{emit:i})=>h("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>i("toggle")},h("span",{class:"icon"}));bt.displayName="ToggleSidebarButton",bt.emits=["toggle"];var M9=$({name:"OutlookButton",setup(){const s=Ii(),i=fs(),{canToggle:a}=Mn(),{isSupported:n}=pe(),l=Ws(),t=Y(!1),e=v(()=>!l.value&&s.value.fullscreen&&n),k=v(()=>a.value||e.value);return ds(()=>i.value.path,()=>{t.value=!1}),()=>k.value?h("div",{class:"vp-nav-item hide-in-mobile"},a.value&&!e.value&&!Xh?h(M2):e.value&&!a.value&&!Xh?h($2):h("button",{type:"button",class:["vp-outlook-button",{open:t.value}],tabindex:"-1","aria-hidden":!0},[h(R2),h("div",{class:"vp-outlook-dropdown"},h(J2))])):null}}),$9=$({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(s,{emit:i,slots:a}){const n=es(),{isMobile:l}=Rn(),t=Y(!1),e=v(()=>{const{navbarAutoHide:d="mobile"}=n.value;return d!=="none"&&(d==="always"||l.value)}),k=v(()=>n.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),p={Brand:L9,Language:hl,Links:x9,Repo:R9,Outlook:M9,Search:Gs("Docsearch")?ri("Docsearch"):Gs("SearchBox")?ri("SearchBox"):hl},r=d=>p[d]??(Gs(d)?ri(d):hl);return()=>{var d,g,B,c,E,F,m,C,D;return[h("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":e.value}]},[h("div",{class:"vp-navbar-start"},[h(bt,{onToggle:()=>{t.value&&(t.value=!1),i("toggleSidebar")}}),(d=a.startBefore)==null?void 0:d.call(a),(g=k.value.start)==null?void 0:g.map(u=>h(r(u))),(B=a.startAfter)==null?void 0:B.call(a)]),h("div",{class:"vp-navbar-center"},[(c=a.centerBefore)==null?void 0:c.call(a),(E=k.value.center)==null?void 0:E.map(u=>h(r(u))),(F=a.centerAfter)==null?void 0:F.call(a)]),h("div",{class:"vp-navbar-end"},[(m=a.endBefore)==null?void 0:m.call(a),(C=k.value.end)==null?void 0:C.map(u=>h(r(u))),(D=a.endAfter)==null?void 0:D.call(a),h(j2,{active:t.value,onToggle:()=>{t.value=!t.value}})])]),h(N9,{show:t.value,onClose:()=>{t.value=!1}},{before:a.screenTop?()=>a.screenTop():null,after:a.screenBottom?()=>a.screenBottom():null})]}}}),J9=$({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(s){const i=bi();return()=>bs(s.config.link)?h(Ys,{class:["vp-sidebar-link",{active:ce(i,s.config)}],config:{...s.config,exact:!0}}):h("p",s,[h(Hs,{icon:s.config.icon}),s.config.text])}}),j9=$({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(s,{emit:i}){const a=bi(),n=Y(!1),l=v(()=>oe(a,s.config)),t=v(()=>ce(a,s.config)),e=v(()=>s.open||s.config.expanded&&!n.value);return()=>{const{collapsible:k,children:p=[],icon:r,prefix:d,link:g,text:B}=s.config;return h("section",{class:"vp-sidebar-group"},[h(k?"button":"p",{class:["vp-sidebar-header",{clickable:k||g,exact:t.value,active:l.value}],...k?{type:"button",onClick:()=>{n.value=!0,i("toggle")}}:{}},[h(Hs,{icon:r}),g?h(Ys,{class:"vp-sidebar-title no-external-link-icon",config:{text:B,link:g}}):h("span",{class:"vp-sidebar-title"},B),k?h("span",{class:["vp-arrow",e.value?"down":"end"]}):null]),e.value||!k?h(V2,{key:d,config:p}):null])}}}),V2=$({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(s){const i=bi(),a=Y(-1),n=l=>{a.value=l===a.value?-1:l};return ds(()=>i.path,()=>{const l=s.config.findIndex(t=>oe(i,t));a.value=l},{immediate:!0,flush:"post"}),()=>h("ul",{class:"vp-sidebar-links"},s.config.map((l,t)=>h("li","children"in l?h(j9,{config:l,open:t===a.value,onToggle:()=>n(t)}):h(J9,{config:l}))))}}),V9=$({name:"SideBar",slots:Object,setup(s,{slots:i}){const a=bi(),n=ye(),l=ws();return Cs(()=>{ds(()=>a.hash,t=>{const e=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${a.path}${t}"]`);if(!e)return;const{top:k,height:p}=l.value.getBoundingClientRect(),{top:r,height:d}=e.getBoundingClientRect();r<k?e.scrollIntoView(!0):r+d>k+p&&e.scrollIntoView(!1)},{immediate:!0})}),()=>{var t,e,k;return h("aside",{ref:l,key:"sidebar",id:"sidebar",class:"vp-sidebar"},[(t=i.top)==null?void 0:t.call(i),((e=i.default)==null?void 0:e.call(i))??h(V2,{config:n.value}),(k=i.bottom)==null?void 0:k.call(i)])}}}),Ee=$({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(s,{slots:i}){const a=ya(),n=cs(),l=Ii(),t=es(),{isMobile:e,isPC:k}=Rn(),p=Ws(),[r,d]=En(!1),[g,B]=En(!1),c=ye(),E=Y(!1),F=v(()=>s.noNavbar||n.value.navbar===!1||t.value.navbar===!1?!1:!!(t.value.logo??t.value.repo??t.value.navbar)),m=v(()=>s.noSidebar?!1:n.value.sidebar!==!1&&c.value.length!==0&&!n.value.home),C=v(()=>n.value.externalLinkIcon??l.value.externalLinkIcon??!0),D=v(()=>!s.noToc&&!n.value.home&&(n.value.toc??t.value.toc??!0)),u={x:0,y:0},b=w=>{u.x=w.changedTouches[0].clientX,u.y=w.changedTouches[0].clientY},R=w=>{const U=w.changedTouches[0].clientX-u.x,J=w.changedTouches[0].clientY-u.y;Math.abs(U)>Math.abs(J)*1.5&&Math.abs(U)>40&&(U>0&&u.x<=80?d(!0):d(!1))};let P=0;return Ns("scroll",Bo(()=>{const w=window.scrollY;w<=58||w<P?E.value=!1:P+200<w&&!r.value&&(E.value=!0),P=w},300,!0)),ds(e,w=>{w||d(!1)}),Cs(()=>{const w=qp(document.body);ds(r,J=>{w.value=J});const U=a.afterEach(()=>{d(!1)});Ja(()=>{w.value=!1,U()})}),()=>h(Gs("GlobalEncrypt")?ri("GlobalEncrypt"):Sl,()=>h("div",{class:["theme-container",{"hide-navbar":E.value,"no-navbar":!F.value,"sidebar-collapsed":!e.value&&!k.value&&g.value,"sidebar-open":e.value&&r.value,"no-sidebar":!m.value&&!i.sidebar&&!i.sidebarTop&&!i.sidebarBottom,"external-link-icon":C.value,pure:p.value,"has-toc":D.value},s.containerClass,n.value.containerClass??""],onTouchStart:b,onTouchEnd:R},[F.value?h($9,{onToggleSidebar:()=>d()},{startBefore:i.navbarStartBefore?()=>i.navbarStartBefore():null,startAfter:i.navbarStartAfter?()=>i.navbarStartAfter():null,centerBefore:i.navbarCenterBefore?()=>i.navbarCenterBefore():null,centerAfter:i.navbarCenterAfter?()=>i.navbarCenterAfter():null,endBefore:i.navbarEndBefore?()=>i.navbarEndBefore():null,endAfter:i.navbarEndAfter?()=>i.navbarEndAfter():null,screenTop:i.navScreenTop?()=>i.navScreenTop():null,screenBottom:i.navScreenBottom?()=>i.navScreenBottom():null}):null,h(Zi,{name:"fade"},()=>r.value?h("div",{class:"vp-sidebar-mask",onClick:()=>d(!1)}):null),h(Zi,{name:"fade"},()=>e.value?null:h("div",{class:"toggle-sidebar-wrapper",onClick:()=>B()},h("span",{class:["arrow",g.value?"end":"start"]}))),h(V9,{},{default:i.sidebar?()=>i.sidebar():null,top:i.sidebarTop?()=>i.sidebarTop():null,bottom:i.sidebarBottom?()=>i.sidebarBottom():null}),i.default(),h(I9)]))}});const ls=$({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(s,{slots:i}){const a=l=>{l.style.transition=`transform ${s.duration}s ease-in-out ${s.delay}s, opacity ${s.duration}s ease-in-out ${s.delay}s`,l.style.transform="translateY(-20px)",l.style.opacity="0"},n=l=>{l.style.transform="translateY(0)",l.style.opacity="1"};return()=>{const l={name:"drop",appear:s.appear,onAppear:a,onAfterAppear:n,onEnter:a,onAfterEnter:n,onBeforeLeave:a},t=()=>i.default();return s.type==="group"?h(Zg,l,t):h(Zi,l,t)}}}),xa=({custom:s})=>h(Pp,{class:["theme-hope-content",{custom:s}]});xa.displayName="MarkdownContent",xa.props={custom:Boolean};const H2=()=>h(gs,{name:"author"},()=>h("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));H2.displayName="AuthorIcon";const z2=()=>h(gs,{name:"calendar"},()=>h("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));z2.displayName="CalendarIcon";const U2=()=>h(gs,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));U2.displayName="CategoryIcon";const G2=()=>h(gs,{name:"print"},()=>h("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));G2.displayName="PrintIcon";const W2=()=>h(gs,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));W2.displayName="TagIcon";const q2=()=>h(gs,{name:"timer"},()=>h("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));q2.displayName="TimerIcon";const K2=()=>h(gs,{name:"word"},()=>[h("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),h("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);K2.displayName="WordIcon";const aa=()=>{const s=es();return v(()=>s.value.metaLocales)};var H9=$({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(s){const i=aa(),a=Ws();return()=>s.author.length?h("span",{class:"page-author-info","aria-label":`${i.value.author}${a.value?"":"🖊"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(H2),h("span",s.author.map(n=>n.url?h("a",{class:"page-author-item",href:n.url,target:"_blank",rel:"noopener noreferrer"},n.name):h("span",{class:"page-author-item"},n.name))),h("span",{property:"author",content:s.author.map(n=>n.name).join(", ")})]):null}}),z9=$({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(s){const i=aa(),a=ua(),n=Ws();return()=>s.category.length?h("span",{class:"page-category-info","aria-label":`${i.value.category}${n.value?"":"🌈"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(U2),s.category.map(({name:l,path:t})=>h("span",{class:["page-category-item",{[`color${xn(l,Number(Ea.colorNumber))}`]:!n.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&a(t)}},l)),h("meta",{property:"articleSection",content:s.category.map(({name:l})=>l).join(",")})]):null}}),U9=$({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(s){const i=wp(),a=aa(),n=Ws();return()=>s.date?h("span",{class:"page-date-info","aria-label":`${a.value.date}${n.value?"":"📅"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(z2),h("span",h(bl,()=>s.localizedDate||s.date.toLocaleDateString(i.value))),h("meta",{property:"datePublished",content:s.date.toISOString()||""})]):null}}),G9=$({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(s){const i=aa();return()=>s.isOriginal?h("span",{class:"page-original-info"},i.value.origin):null}}),W9=$({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const i=aa(),a=Ws(),n=v(()=>{if(!s.readingTime)return null;const{minutes:l}=s.readingTime;return l<1?"PT1M":`PT${Math.round(l)}M`});return()=>{var l,t;return(l=s.readingTimeLocale)!=null&&l.time?h("span",{class:"page-reading-time-info","aria-label":`${i.value.readingTime}${a.value?"":"⌛"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(q2),h("span",(t=s.readingTimeLocale)==null?void 0:t.time),h("meta",{property:"timeRequired",content:n.value})]):null}}}),q9=$({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(s){const i=aa(),a=ua(),n=Ws();return()=>s.tag.length?h("span",{class:"page-tag-info","aria-label":`${i.value.tag}${n.value?"":"🏷"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(W2),s.tag.map(({name:l,path:t})=>h("span",{class:["page-tag-item",{[`color${xn(l,Number(Ea.colorNumber))}`]:!n.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&a(t)}},l)),h("meta",{property:"keywords",content:s.tag.map(({name:l})=>l).join(",")})]):null}}),K9=$({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const i=aa(),a=Ws();return()=>{var n,l,t;return(n=s.readingTimeLocale)!=null&&n.words?h("span",{class:"page-word-info","aria-label":`${i.value.words}${a.value?"":"🔠"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(K2),h("span",(l=s.readingTimeLocale)==null?void 0:l.words),h("meta",{property:"wordCount",content:(t=s.readingTime)==null?void 0:t.words})]):null}}}),Y2=$({name:"PageInfo",components:{AuthorInfo:H9,CategoryInfo:z9,DateInfo:U9,OriginalInfo:G9,PageViewInfo:hl,ReadingTimeInfo:W9,TagInfo:q9,WordInfo:K9},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(s){const i=Ws();return()=>s.items?h("div",{class:"page-info"},s.items.map(a=>h(ri(`${a}Info`),{...s.info,isPure:i.value}))):null}}),Y9=$({name:"PrintButton",setup(){const s=Ii(),i=es();return()=>s.value.print===!1?null:h("button",{type:"button",class:"print-button",title:i.value.metaLocales.print,onClick:()=>{window.print()}},h(G2))}}),Q2=$({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(s,{slots:i}){const a=bi(),n=fs(),l=aa(),[t,e]=En(),k=ws(),p=Y("-1.7rem"),r=g=>{var B;(B=k.value)==null||B.scrollTo({top:g,behavior:"smooth"})},d=()=>{if(k.value){const g=document.querySelector(".vp-toc-item.active");g?p.value=`${g.getBoundingClientRect().top-k.value.getBoundingClientRect().top+k.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};return Cs(()=>{ds(()=>a.hash,g=>{if(k.value){const B=document.querySelector(`#toc a.vp-toc-link[href$="${g}"]`);if(!B)return;const{top:c,height:E}=k.value.getBoundingClientRect(),{top:F,height:m}=B.getBoundingClientRect();F<c?r(k.value.scrollTop+F-c):F+m>c+E&&r(k.value.scrollTop+F+m-c-E)}}),ds(()=>a.fullPath,d,{flush:"post",immediate:!0})}),()=>{var E,F;const g=({title:m,level:C,slug:D})=>h(Ps,{to:`#${D}`,class:["vp-toc-link",`level${C}`],onClick:()=>{e()}},()=>m),B=(m,C)=>m.length&&C>0?h("ul",{class:"vp-toc-list"},m.map(D=>{const u=B(D.children,C-1);return[h("li",{class:["vp-toc-item",{active:a.hash===`#${D.slug}`}]},g(D)),u?h("li",u):null]})):null,c=s.items.length?B(s.items,s.headerDepth):n.value.headers?B(n.value.headers,s.headerDepth):null;return c?h("div",{class:"vp-toc-placeholder"},[h("aside",{id:"toc"},[(E=i.before)==null?void 0:E.call(i),h("div",{class:"vp-toc-header",onClick:()=>{e()}},[l.value.toc,h(Y9),h("div",{class:["arrow",t.value?"down":"end"]})]),h("div",{class:["vp-toc-wrapper",t.value?"open":""],ref:k},[c,h("div",{class:"vp-toc-marker",style:{top:p.value}})]),(F=i.after)==null?void 0:F.call(i)])]):null}}}),ue=$({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(s){const i=fs(),a=es(),n=ws(),l=({target:t})=>{const e=document.querySelector(t.hash);if(e){const k=()=>{e.removeAttribute("tabindex"),e.removeEventListener("blur",k)};e.setAttribute("tabindex","-1"),e.addEventListener("blur",k),e.focus(),window.scrollTo(0,0)}};return Cs(()=>{ds(()=>i.value.path,()=>n.value.focus())}),()=>[h("span",{ref:n,tabindex:"-1"}),h("a",{href:`#${s.content}`,class:"vp-skip-link sr-only",onClick:l},a.value.routeLocales.skipToContent)]}});let nt=null,Wa=null;const _t={wait:()=>nt,pending:()=>{nt=new Promise(s=>{Wa=s})},resolve:()=>{Wa==null||Wa(),nt=null,Wa=null}},Ae=(s,{slots:i})=>h(Zi,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:_t.resolve,onBeforeLeave:_t.pending},()=>i.default());Ae.displayName="FadeSlideY";const Q9=(s,i)=>{const a=s.replace(i,"/").split("/"),n=[];let l=ae(i);return a.forEach((t,e)=>{e!==a.length-1?(l+=`${t}/`,n.push({link:l,name:t||"Home"})):t!==""&&(l+=t,n.push({link:l,name:t}))}),n},Zh=(s,i)=>s===!1?s:ja(s)?{...s,link:yl(s.link,!0,i).link}:bs(s)?yl(s,!0,i):null,It=(s,i,a)=>{const n=s.findIndex(t=>t.link===i);if(n!==-1){const t=s[n+a];return t?t.link?t:"prefix"in t&&!gi(t.prefix).notFound?{...t,link:t.prefix}:null:null}for(const t of s)if("children"in t){const e=It(t.children,i,a);if(e)return e}const l=s.findIndex(t=>"prefix"in t&&t.prefix===i);if(l!==-1){const t=s[l+a];return t?t.link?t:"prefix"in t&&!gi(t.prefix).notFound?{...t,link:t.prefix}:null:null}return null},X9=()=>{const s=cs(),i=es(),a=ye(),n=bi(),l=v(()=>{const e=Zh(s.value.prev,n.path);return e===!1?null:e??(i.value.prevLink===!1?null:It(a.value,n.path,-1))}),t=v(()=>{const e=Zh(s.value.next,n.path);return e===!1?null:e??(i.value.nextLink===!1?null:It(a.value,n.path,1))});return{prevLink:l,nextLink:t}},St=(s,{slots:i})=>{var g,B;const{bgImage:a,bgImageDark:n,bgImageStyle:l,color:t,description:e,image:k,imageDark:p,header:r,features:d=[]}=s;return h("div",{class:"vp-feature-wrapper"},[a?h("div",{class:["vp-feature-bg",{light:n}],style:[{"background-image":`url(${a})`},l]}):null,n?h("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${n})`},l]}):null,h("div",{class:"vp-feature",style:t?{color:t}:{}},[((g=i.image)==null?void 0:g.call(i,s))??[k?h("img",{class:["vp-feature-image",{light:p}],src:Es(k),alt:""}):null,p?h("img",{class:"vp-feature-image dark",src:Es(p),alt:""}):null],((B=i.info)==null?void 0:B.call(i,s))??[r?h("h2",{class:"vp-feature-header"},r):null,e?h("p",{class:"vp-feature-description",innerHTML:e}):null],d.length?h("div",{class:"vp-features"},d.map(({icon:c,title:E,details:F,link:m})=>{const C=[h("h3",{class:"vp-feature-title"},[h(Hs,{icon:c}),h("span",{innerHTML:E})]),h("p",{class:"vp-feature-details",innerHTML:F})];return m?ml(m)?h("a",{class:"vp-feature-item link",href:m,"aria-label":E,target:"_blank"},C):h(Ps,{class:"vp-feature-item link",to:m,"aria-label":E},()=>C):h("div",{class:"vp-feature-item"},C)})):null])])};St.displayName="FeaturePanel";var Z9=$({name:"HeroInfo",slots:Object,setup(s,{slots:i}){const a=cs(),n=wn(),l=v(()=>a.value.heroFullScreen??!1),t=v(()=>{const{heroText:r,tagline:d}=a.value;return{text:r??n.value.title??"Hello",tagline:d??n.value.description??"",isFullScreen:l.value}}),e=v(()=>{const{heroText:r,heroImage:d,heroImageDark:g,heroAlt:B,heroImageStyle:c}=a.value;return{image:d?Es(d):null,imageDark:g?Es(g):null,imageStyle:c,alt:B??r??"",isFullScreen:l.value}}),k=v(()=>{const{bgImage:r,bgImageDark:d,bgImageStyle:g}=a.value;return{image:bs(r)?Es(r):null,imageDark:bs(d)?Es(d):null,bgStyle:g,isFullScreen:l.value}}),p=v(()=>a.value.actions??[]);return()=>{var r,d,g;return h("header",{class:["vp-hero-info-wrapper",{fullscreen:l.value}]},[((r=i.bg)==null?void 0:r.call(i,k.value))??[k.value.image?h("div",{class:["vp-hero-mask",{light:k.value.imageDark}],style:[{"background-image":`url(${k.value.image})`},k.value.bgStyle]}):null,k.value.imageDark?h("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${k.value.imageDark})`},k.value.bgStyle]}):null],h("div",{class:"vp-hero-info"},[((d=i.logo)==null?void 0:d.call(i,e.value))??h(ls,{appear:!0,type:"group"},()=>{const{image:B,imageDark:c,imageStyle:E,alt:F}=e.value;return[B?h("img",{key:"light",class:["vp-hero-image",{light:c}],style:E,src:B,alt:F}):null,c?h("img",{key:"dark",class:"vp-hero-image dark",style:E,src:c,alt:F}):null]}),((g=i.info)==null?void 0:g.call(i,t.value))??h("div",{class:"vp-hero-infos"},[t.value.text?h(ls,{appear:!0,delay:.04},()=>h("h1",{id:"main-title",class:"vp-hero-title"},t.value.text)):null,t.value.tagline?h(ls,{appear:!0,delay:.08},()=>h("p",{id:"main-description",innerHTML:t.value.tagline})):null,p.value.length?h(ls,{appear:!0,delay:.12},()=>h("p",{class:"vp-hero-actions"},p.value.map(B=>h(Ys,{class:["vp-hero-action",B.type??"default","no-external-link-icon"],config:B},B.icon?{before:()=>h(Hs,{icon:B.icon})}:{})))):null])])])}}});const X2=(s,{slots:i})=>{var B,c,E;const{bgImage:a,bgImageDark:n,bgImageStyle:l,color:t,description:e,image:k,imageDark:p,header:r,highlights:d=[],type:g="un-order"}=s;return h("div",{class:"vp-highlight-wrapper",style:t?{color:t}:{}},[a?h("div",{class:["vp-highlight-bg",{light:n}],style:[{"background-image":`url(${a})`},l]}):null,n?h("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${n})`},l]}):null,h("div",{class:"vp-highlight"},[((B=i.image)==null?void 0:B.call(i,s))??[k?h("img",{class:["vp-highlight-image",{light:p}],src:Es(k),alt:""}):null,p?h("img",{class:"vp-highlight-image dark",src:Es(p),alt:""}):null],((c=i.info)==null?void 0:c.call(i,s))??[h("div",{class:"vp-highlight-info-wrapper"},h("div",{class:"vp-highlight-info"},[r?h("h2",{class:"vp-highlight-header",innerHTML:r}):null,e?h("p",{class:"vp-highlight-description",innerHTML:e}):null,((E=i.highlights)==null?void 0:E.call(i,d))??h(g==="order"?"ol":g==="no-order"?"dl":"ul",{class:"vp-highlights"},d.map(({icon:F,title:m,details:C,link:D})=>{const u=[h(g==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[F?h(Hs,{class:"vp-highlight-icon",icon:F}):null,h("span",{innerHTML:m})]),C?h(g==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:C}):null];return h(g==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:D}]},D?ml(D)?h("a",{class:"vp-highlight-item link",href:D,"aria-label":m,target:"_blank"},u):h(Ps,{class:"vp-highlight-item link",to:D,"aria-label":m},()=>u):h("div",{class:"vp-highlight-item"},u))}))]))]])])};X2.displayName="HighlightPanel";var s4=$({name:"HomePage",slots:Object,setup(s,{slots:i}){const a=cs(),n=v(()=>{const{features:t}=a.value;return Ct(t)?t:null}),l=v(()=>{const{highlights:t}=a.value;return Ct(t)?t:null});return()=>{var t,e,k,p;return h("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":a.value.heroText===null?"":"main-title"},[(t=i.top)==null?void 0:t.call(i),h(Z9),((e=l.value)==null?void 0:e.map(r=>"features"in r?h(St,r):h(X2,r)))??(n.value?h(ls,{appear:!0,delay:.24},()=>h(St,{features:n.value})):null),(k=i.center)==null?void 0:k.call(i),h(ls,{appear:!0,delay:.32},()=>h(xa)),(p=i.bottom)==null?void 0:p.call(i)])}}}),i4=$({name:"BreadCrumb",setup(){const s=fs(),i=ia(),a=cs(),n=es(),l=ws([]),t=v(()=>(a.value.breadcrumb??n.value.breadcrumb??!0)&&l.value.length>1),e=v(()=>a.value.breadcrumbIcon??n.value.breadcrumbIcon??!0),k=()=>{const p=Q9(s.value.path,i.value).map(({link:r,name:d})=>{const{path:g,meta:B,notFound:c}=gi(r);return c||B[Us.breadcrumbExclude]?null:{title:B[Us.shortTitle]||B[Us.title]||d,icon:B[Us.icon],path:g}}).filter(r=>r!==null);p.length>1&&(l.value=p)};return Cs(()=>{ds(()=>s.value.path,k,{immediate:!0})}),()=>h("nav",{class:["vp-breadcrumb",{disable:!t.value}]},t.value?h("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},l.value.map((p,r)=>h("li",{class:{"is-active":l.value.length-1===r},property:"itemListElement",typeof:"ListItem"},[h(Ps,{to:p.path,property:"item",typeof:"WebPage"},()=>[e.value?h(Hs,{icon:p.icon}):null,h("span",{property:"name"},p.title||"Unknown")]),h("meta",{property:"position",content:r+1})]))):[])}}),a4=$({name:"PageNav",setup(){const s=es(),i=ua(),{prevLink:a,nextLink:n}=X9();return Ns("keydown",l=>{l.altKey&&(l.key==="ArrowRight"?n.value&&(i(n.value.link),l.preventDefault()):l.key==="ArrowLeft"&&a.value&&(i(a.value.link),l.preventDefault()))}),()=>a.value||n.value?h("nav",{class:"vp-page-nav"},[a.value?h(Ys,{class:"prev",config:a.value},()=>{var l,t;return[h("div",{class:"hint"},[h("span",{class:"arrow start"}),s.value.metaLocales.prev]),h("div",{class:"link"},[h(Hs,{icon:(l=a.value)==null?void 0:l.icon}),(t=a.value)==null?void 0:t.text])]}):null,n.value?h(Ys,{class:"next",config:n.value},()=>{var l,t;return[h("div",{class:"hint"},[s.value.metaLocales.next,h("span",{class:"arrow end"})]),h("div",{class:"link"},[(l=n.value)==null?void 0:l.text,h(Hs,{icon:(t=n.value)==null?void 0:t.icon})])]}):null]):null}});const n4=()=>{const s=es(),i=fs(),a=cs();return v(()=>{var n;return a.value.contributors??s.value.contributors??!0?((n=i.value.git)==null?void 0:n.contributors)??null:null})},l4={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},t4=({docsRepo:s,docsBranch:i,docsDir:a,filePathRelative:n,editLinkPattern:l})=>{if(!n)return null;const t=de(s);let e;return l?e=l:t!==null&&(e=l4[t]),e?e.replace(/:repo/u,oa(s)?s:`https://github.com/${s}`).replace(/:branch/u,i).replace(/:path/u,up(`${ae(a)}/${n}`)):null},e4=()=>{const s=es(),i=fs(),a=cs();return v(()=>{const{repo:n,docsRepo:l=n,docsBranch:t="main",docsDir:e="",editLink:k,editLinkPattern:p=""}=s.value;if(!(a.value.editLink??k??!0)||!l)return null;const r=t4({docsRepo:l,docsBranch:t,docsDir:e,editLinkPattern:p,filePathRelative:i.value.filePathRelative});return r?{text:s.value.metaLocales.editLink,link:r}:null})},h4=()=>{const s=wn(),i=es(),a=fs(),n=cs();return v(()=>{var l,t;return!(n.value.lastUpdated??i.value.lastUpdated??!0)||!((l=a.value.git)!=null&&l.updatedTime)?null:new Date((t=a.value.git)==null?void 0:t.updatedTime).toLocaleString(s.value.lang)})};var k4=$({name:"PageTitle",setup(){const s=fs(),i=cs(),a=es(),{info:n,items:l}=F9();return()=>h("div",{class:"vp-page-title"},[h("h1",[a.value.titleIcon===!1?null:h(Hs,{icon:i.value.icon}),s.value.title]),h(Y2,{info:n.value,...l.value===null?{}:{items:l.value}}),h("hr")])}});const Z2=()=>h(gs,{name:"edit"},()=>[h("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),h("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);Z2.displayName="EditIcon";var p4=$({name:"PageMeta",setup(){const s=es(),i=e4(),a=h4(),n=n4();return()=>{var t;const{metaLocales:l}=s.value;return h("footer",{class:"vp-page-meta"},[i.value?h("div",{class:"vp-meta-item edit-link"},h(Ys,{class:"vp-meta-label",config:i.value},{before:()=>h(Z2)})):null,h("div",{class:"vp-meta-item git-info"},[a.value?h("div",{class:"update-time"},[h("span",{class:"vp-meta-label"},`${l.lastUpdated}: `),h(bl,()=>h("span",{class:"vp-meta-info"},a.value))]):null,(t=n.value)!=null&&t.length?h("div",{class:"contributors"},[h("span",{class:"vp-meta-label"},`${l.contributors}: `),n.value.map(({email:e,name:k},p)=>[h("span",{class:"vp-meta-info",title:`email: ${e}`},k),p!==n.value.length-1?",":""])]):null])])}}}),r4=$({name:"NormalPage",slots:Object,setup(s,{slots:i}){const a=cs(),{isDarkmode:n}=Mn(),l=es(),t=v(()=>a.value.toc??l.value.toc??!0),e=v(()=>a.value.headerDepth??l.value.headerDepth??2);return()=>h("main",{id:"main-content",class:"vp-page"},h(Gs("LocalEncrypt")?ri("LocalEncrypt"):Sl,()=>{var k,p,r,d;return[(k=i.top)==null?void 0:k.call(i),a.value.cover?h("div",{class:"page-cover"},h("img",{src:Es(a.value.cover),alt:"","no-view":""})):null,h(i4),h(k4),t.value?h(Q2,{headerDepth:e.value},{before:i.tocBefore?()=>i.tocBefore():null,after:i.tocAfter?()=>i.tocAfter():null}):null,(p=i.contentBefore)==null?void 0:p.call(i),h(xa),(r=i.contentAfter)==null?void 0:r.call(i),h(p4),h(a4),Gs("CommentService")?h(ri("CommentService"),{darkmode:n.value}):null,(d=i.bottom)==null?void 0:d.call(i)]}))}}),d4=$({name:"PortfolioHero",slots:Object,setup(s,{slots:i}){const a=D2(),n=cs(),l=Y(0),t=v(()=>{var B;return((B=n.value.titles)==null?void 0:B[l.value])??""}),e=Y(""),k=v(()=>{const{name:B,avatar:c,avatarDark:E,avatarAlt:F,avatarStyle:m}=n.value;return{name:B??a.value.name,avatar:c?Es(c):null,avatarDark:E?Es(E):null,avatarStyle:m,alt:(F||B)??""}}),p=v(()=>{const{bgImage:B,bgImageDark:c,bgImageStyle:E}=n.value;return{image:bs(B)?Es(B):null,imageDark:bs(c)?Es(c):null,bgStyle:E}}),r=v(()=>{const{welcome:B,name:c,titles:E,medias:F}=n.value;return{name:c??a.value.name,welcome:B??"👋 Hi There, I'm",title:e.value,titles:E??[],medias:F??[]}}),d=()=>{e.value="";let B=0,c=!1;const E=async()=>{if(!c)if(e.value+=t.value[B],B+=1,await Mi(),B<t.value.length)setTimeout(()=>{E()},150);else{const F=r.value.titles.length;setTimeout(()=>{l.value=F<=1||l.value===r.value.titles.length-1?0:l.value+1},1e3)}};return E(),()=>{c=!0}};let g;return Cs(()=>{ds(t,()=>{g==null||g(),g=d()},{immediate:!0})}),()=>{var B,c,E;return h("section",{id:"portfolio",class:["vp-portfolio",{bg:p.value.image}]},[((B=i.bg)==null?void 0:B.call(i,p.value))??[p.value.image?h("div",{class:["vp-portfolio-mask",{light:p.value.imageDark}],style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null,p.value.imageDark?h("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${p.value.imageDark}) center/cover no-repeat`},p.value.bgStyle]}):null],((c=i.avatar)==null?void 0:c.call(i,k.value))??h("div",{class:"vp-portfolio-avatar"},[h(ls,{delay:.04},()=>{const{avatarDark:F,name:m,alt:C,avatarStyle:D}=k.value;return[h("img",{key:"light",class:{light:F},src:k.value.avatar,title:m,alt:C,style:D}),F?h("img",{key:"dark",class:"dark",src:F,title:m,alt:C,style:D}):null]})]),h("div",{class:"vp-portfolio-container"},((E=i.info)==null?void 0:E.call(i,r.value))??h("div",{class:"vp-portfolio-info"},[h(ls,{appear:!0,delay:.08},()=>h("h6",{class:"vp-portfolio-welcome"},r.value.welcome)),h(ls,{appear:!0,delay:.12},()=>h("h1",{class:"vp-portfolio-name",id:"main-title"},r.value.name)),h(ls,{appear:!0,delay:.16},()=>h("h2",{class:"vp-portfolio-title"},e.value)),h(ls,{appear:!0,delay:.2},()=>r.value.medias.length?h("div",{class:"vp-portfolio-medias"},r.value.medias.map(({name:F,url:m,icon:C})=>h("a",{class:"vp-portfolio-media",href:m,rel:"noopener noreferrer",target:"_blank",title:F},h(Hs,{icon:C})))):Gs("SocialMedias")?h(ri("SocialMedias")):null)]))])}}}),g4=$({name:"PortfolioHome",setup(){const s=cs(),i=v(()=>s.value.content??"portfolio");return()=>h("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[h(d4),i.value==="none"?null:h("div",{},h(ls,{appear:!0,delay:.24},()=>h(xa,{class:{"vp-portfolio-content":i.value==="portfolio"}})))])}}),B4=$({name:"Layout",slots:Object,setup(s,{slots:i}){const a=Ii(),n=es(),l=fs(),t=cs(),e=Ws(),{isMobile:k}=Rn(),p=v(()=>{var r,d;return((r=n.value.blog)==null?void 0:r.sidebarDisplay)??((d=a.value.blog)==null?void 0:d.sidebarDisplay)??"mobile"});return()=>[h(ue),h(Ee,{},{default:()=>{var r;return((r=i.default)==null?void 0:r.call(i))??(t.value.portfolio?h(g4):t.value.home?h(s4):h(e.value?Sl:Ae,()=>h(r4,{key:l.value.path},{top:i.top?()=>i.top():null,bottom:i.bottom?()=>i.bottom():null,contentBefore:i.contentBefore?()=>i.contentBefore():null,contentAfter:i.contentAfter?()=>i.contentAfter():null,tocBefore:i.tocBefore?()=>i.tocBefore():null,tocAfter:i.tocAfter?()=>i.tocAfter():null})))},navScreenBottom:p.value==="none"&&Gs("BloggerInfo")?()=>h(ri("BloggerInfo")):null,sidebar:!k.value&&p.value==="always"&&Gs("BloggerInfo")?()=>h(ri("BloggerInfo")):null})]}}),c4=$({name:"NotFoundHint",setup(){const s=es(),i=()=>{const a=s.value.routeLocales.notFoundMsg;return a[Math.floor(Math.random()*a.length)]};return()=>h("div",{class:"not-found-hint"},[h("p",{class:"error-code"},"404"),h("h1",{class:"error-title"},s.value.routeLocales.notFoundTitle),h("p",{class:"error-hint"},i())])}}),o4=$({name:"NotFound",slots:Object,setup(s,{slots:i}){const a=ya(),n=ia(),l=es();return()=>[h(ue),h(Ee,{noSidebar:!0},()=>{var t;return h("main",{id:"main-content",class:"vp-page not-found"},((t=i.default)==null?void 0:t.call(i))??[h(c4),h("div",{class:"actions"},[h("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},l.value.routeLocales.back),h("button",{type:"button",class:"action-button",onClick:()=>{a.push(l.value.home??n.value)}},l.value.routeLocales.home)])])})]}});const y4={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>'},E4={category:{"/":{path:"/category/",map:{ApacheNIFI开发:{path:"/category/apachenifi%E5%BC%80%E5%8F%91/",indexes:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},ApacheNIFI教程:{path:"/category/apachenifi%E6%95%99%E7%A8%8B/",indexes:[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]},Java:{path:"/category/java/",indexes:[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81]},JVM:{path:"/category/jvm/",indexes:[82]},Jolt:{path:"/category/jolt/",indexes:[83,84,85]},Spring常见错误:{path:"/category/spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/",indexes:[86,87,88,89,90,91,92,93]},数据库:{path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[94,95,96]},CDC:{path:"/category/cdc/",indexes:[97]},深入浅出Java多线程:{path:"/category/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAjava%E5%A4%9A%E7%BA%BF%E7%A8%8B/",indexes:[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117]},算法:{path:"/category/%E7%AE%97%E6%B3%95/",indexes:[118,119,120,121,122,123]},阿里Java开发手册:{path:"/category/%E9%98%BF%E9%87%8Cjava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/",indexes:[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148]}}}},tag:{"/":{path:"/tag/",map:{NIFI:{path:"/tag/nifi/",indexes:[15,16,17,0,18,19,20,21,22,23,24,25,1,26,27,28,29,30,31,32,33,34,35,36,37,2,3,4,5,6,7,8,9,10,11,12,13,14,38,39,40,41,42,43,44,45,46,47,48,49,50]},Spring:{path:"/tag/spring/",indexes:[86,87,88,89,90,91,92,93]}}}}},sr=["/ApacheNIFI%E5%BC%80%E5%8F%91/011-Debezium%E8%AF%A6%E7%BB%86%E5%B5%8C%E5%85%A5NIFI.html","/ApacheNIFI%E5%BC%80%E5%8F%91/007-%E5%9C%A8HTTP%E6%A8%A1%E5%BC%8F%E4%B8%8B%E5%BC%80%E5%90%AF%E6%9D%83%E9%99%90%E6%A8%A1%E5%9D%97.html","/ApacheNIFI%E5%BC%80%E5%8F%91/001-%E7%BC%96%E8%AF%91NIFI%E6%BA%90%E7%A0%81.html","/ApacheNIFI%E5%BC%80%E5%8F%91/002-NIFI%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.html","/ApacheNIFI%E5%BC%80%E5%8F%91/003-Processor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95.html","/ApacheNIFI%E5%BC%80%E5%8F%91/004-%E8%87%AA%E5%AE%9A%E4%B9%89Processor.html","/ApacheNIFI%E5%BC%80%E5%8F%91/005-%E8%87%AA%E5%AE%9A%E4%B9%89ExpressionLanguage.html","/ApacheNIFI%E5%BC%80%E5%8F%91/006-NIFI%E5%90%AF%E5%8A%A8%E6%BA%90%E7%A0%81.html","/ApacheNIFI%E5%BC%80%E5%8F%91/008-JettyServer%E6%BA%90%E7%A0%81.html","/ApacheNIFI%E5%BC%80%E5%8F%91/009-NiFi%E6%BA%90%E7%A0%81.html","/ApacheNIFI%E5%BC%80%E5%8F%91/010-nifi%E6%B3%A8%E8%A7%A3.html","/ApacheNIFI%E5%BC%80%E5%8F%91/RunNiFi%E6%BA%90%E7%A0%81.html","/ApacheNIFI%E5%BC%80%E5%8F%91/nifi-env-sh.html","/ApacheNIFI%E5%BC%80%E5%8F%91/nifi-sh-start.html","/ApacheNIFI%E5%BC%80%E5%8F%91/nifi-sh.html","/ApacheNIFI%E6%95%99%E7%A8%8B/037-MySQL%E5%85%A8%E5%AD%97%E6%AE%B5%E6%B5%8B%E8%AF%95.html","/ApacheNIFI%E6%95%99%E7%A8%8B/034-JWT.html","/ApacheNIFI%E6%95%99%E7%A8%8B/033-%E6%B5%81%E7%A8%8B%E5%91%8A%E8%AD%A6.html","/ApacheNIFI%E6%95%99%E7%A8%8B/032-CaptureChangeMySQL.html","/ApacheNIFI%E6%95%99%E7%A8%8B/031-1.14.html","/ApacheNIFI%E6%95%99%E7%A8%8B/030-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%97%E6%AE%B5%E7%B1%BB%E5%9E%8B.html","/ApacheNIFI%E6%95%99%E7%A8%8B/029-NIFI%E4%BA%8B%E5%8A%A1%E5%8E%9F%E7%90%86.html","/ApacheNIFI%E6%95%99%E7%A8%8B/027-Provenance%E5%AD%98%E5%82%A8%E5%BA%93%E5%8E%9F%E7%90%86.html","/ApacheNIFI%E6%95%99%E7%A8%8B/028-NIFI%E6%9E%B6%E6%9E%84.html","/ApacheNIFI%E6%95%99%E7%A8%8B/025-FlowFile%E5%AD%98%E5%82%A8%E5%BA%93%E5%8E%9F%E7%90%86.html","/ApacheNIFI%E6%95%99%E7%A8%8B/024-%E5%86%85%E5%AE%B9%E5%AD%98%E5%82%A8%E5%BA%93%E5%8E%9F%E7%90%86.html","/ApacheNIFI%E6%95%99%E7%A8%8B/020-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8NIFI%E9%87%8C%E7%9A%84Record.html","/ApacheNIFI%E6%95%99%E7%A8%8B/005-%E5%9F%BA%E4%BA%8E%E5%A2%9E%E9%87%8F%E5%AD%97%E6%AE%B5%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE.html","/ApacheNIFI%E6%95%99%E7%A8%8B/004-%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95.html","/ApacheNIFI%E6%95%99%E7%A8%8B/019-NIFI%E9%87%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0.html","/ApacheNIFI%E6%95%99%E7%A8%8B/009-Apache%20NIFI%E7%B1%BB%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E6%9C%BA%E5%88%B6.html","/ApacheNIFI%E6%95%99%E7%A8%8B/010-Apache%20NIFI%20Processor%E6%83%85%E5%86%B5.html","/ApacheNIFI%E6%95%99%E7%A8%8B/015-Controller%20Services%E6%98%AF%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B.html","/ApacheNIFI%E6%95%99%E7%A8%8B/000-ApacheNIFI%E5%8E%86%E5%8F%B2.html","/ApacheNIFI%E6%95%99%E7%A8%8B/018-%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96NiFi%E6%80%A7%E8%83%BD.html","/ApacheNIFI%E6%95%99%E7%A8%8B/016-NIFI%E8%B0%83%E5%BA%A6.html","/ApacheNIFI%E6%95%99%E7%A8%8B/021-NIFI%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81.html","/ApacheNIFI%E6%95%99%E7%A8%8B/002-%E5%B8%A6%E4%BD%A0%E4%BD%93%E9%AA%8CApacheNIFI.html","/ApacheNIFI%E6%95%99%E7%A8%8B/001-NiFi%E6%9C%AF%E8%AF%AD.html","/ApacheNIFI%E6%95%99%E7%A8%8B/003-NIFI%E5%85%A5%E9%97%A8.html","/ApacheNIFI%E6%95%99%E7%A8%8B/006-NIFI%E5%90%84%E4%B8%AANAR%E5%8C%85%E5%8A%9F%E8%83%BD%E6%A6%82%E8%BF%B0.html","/ApacheNIFI%E6%95%99%E7%A8%8B/007-Nar%E5%8C%85%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html","/ApacheNIFI%E6%95%99%E7%A8%8B/008-Nar%E5%8C%85%E4%B8%8B%E7%9A%84MANIFEST.MF.html","/ApacheNIFI%E6%95%99%E7%A8%8B/011-%E7%90%86%E8%A7%A3connection.html","/ApacheNIFI%E6%95%99%E7%A8%8B/012-%E7%90%86%E8%A7%A3maxThread%E8%AE%BE%E7%BD%AE.html","/ApacheNIFI%E6%95%99%E7%A8%8B/013-RunDuration%E7%90%86%E8%A7%A3.html","/ApacheNIFI%E6%95%99%E7%A8%8B/014-ContentRepositoryArchiving%E7%90%86%E8%A7%A3.html","/ApacheNIFI%E6%95%99%E7%A8%8B/017-NIFI%E9%AB%98%E5%8F%AF%E7%94%A8.html","/ApacheNIFI%E6%95%99%E7%A8%8B/022-NIFI%E5%BC%80%E5%90%AFHTTPS.html","/ApacheNIFI%E6%95%99%E7%A8%8B/023-ExecuteScript%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B.html","/ApacheNIFI%E6%95%99%E7%A8%8B/026-%E9%A2%84%E5%86%99%E6%97%A5%E5%BF%97(WAL).html","/JAVA/Java%E4%B8%AD%E7%9A%84%E9%94%81.html","/JAVA/%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1.html","/IO%E6%B5%81(java)/03-%E7%BC%93%E5%86%B2%E6%B5%81BufferedInputStream%E4%B8%8EBufferedOutputStream.html","/IO%E6%B5%81(java)/04-%E7%BC%93%E5%86%B2%E6%B5%81BufferedReader%E4%B8%8EBufferedWriter.html","/IO%E6%B5%81(java)/05-%E8%BD%AC%E6%8D%A2%E6%B5%81InputStreamReader%E4%B8%8EOutputStreamWriter.html","/IO%E6%B5%81(java)/06-ByteArrayInputStream%E4%B8%8EByteArrayOutputStream.html","/IO%E6%B5%81(java)/07-CommonsIO2.5-FileUtils.html","/IO%E6%B5%81(java)/01-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81.html","/IO%E6%B5%81(java)/02-File.html","/JAVA/ByteArrayOutputStream.html","/JAVA/%E5%81%8F%E5%90%91%E9%94%81%E6%89%B9%E9%87%8F%E9%87%8D%E5%81%8F%E5%90%91%E4%B8%8E%E6%89%B9%E9%87%8F%E6%92%A4%E9%94%80.html","/JAVA/%E6%89%93%E5%8D%B0Java%E5%AF%B9%E8%B1%A1%E5%A4%B4.html","/JAVA/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3Java%E9%94%81.html","/JAVA/%E5%88%B0%E5%BA%95%E4%BB%80%E4%B9%88%E6%98%AFclasspath.html","/JAVA/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%8E%BB%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6.html","/JAVA/web%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2.html","/JAVA/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.html","/JAVA/Java%20SPI%E6%9C%BA%E5%88%B6.html","/JAVA/Java%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.html","/JAVA/%E5%8A%A8%E6%89%8B%E4%BD%93%E9%AA%8CJVM%E4%B8%ADClass%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%94%AF%E4%B8%80%E6%80%A7.html","/JAVA/Java%E5%8F%8D%E5%B0%84.html","/JAVA/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93.html","/JAVA/Java%E5%AF%BC%E5%85%A5%E8%AF%AD%E5%8F%A5%E4%B8%AD%E4%B8%8D%E5%AE%9C%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6.html","/JAVA/Java%E4%B8%ADatomic%E5%8C%85%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E7%B1%BB%E6%80%BB%E7%BB%93.html","/JAVA/Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86.html","/JAVA/%E8%AE%A9%E4%BD%A0%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3Synchronized.html","/JAVA/%E4%BD%BF%E7%94%A8List.html","/JAVA/Java%E9%87%8C%E5%B8%A6%E6%A0%87%E7%AD%BE%E7%9A%84break%E5%92%8Ccontinue.html","/JAVA/Jvm-dump-jstack-jmap-jstat.html","/JAVA/%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86.html","/JAVA/java%E6%B3%A8%E8%A7%A3.html","/JAVA/Java8_JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html","/JOLT/%E4%BD%BF%E7%94%A8jolt%E6%9B%BF%E6%8D%A2%E5%80%BC.html","/JOLT/JsonJolt%E6%95%99%E7%A8%8B.html","/JOLT/JsonJolt%E6%95%99%E7%A8%8B%E8%8B%B1%E6%96%87%E7%89%88.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/006SpringAOP%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8A.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/007SpringAOP%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8B.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/008Spring%E4%BA%8B%E4%BB%B6%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/005Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/003%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8A.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/004%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%B8%8B.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/001Spring%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","/Spring%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/002Bean%E5%AE%9A%E4%B9%89%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.html","/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/BIT%E7%9A%84%E5%AD%97%E8%8A%82%E5%BA%8F.html","/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/001-%E7%AE%A1%E7%90%86OracleRedoLog.html","/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/Oracle12cLogMiner%E5%88%86%E6%9E%90Redo%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6.html","/%E6%95%B0%E6%8D%AE%E5%BA%93CDC/%E5%9F%BA%E4%BA%8E%E6%B0%B4%E5%8D%B0%E7%9A%84CDC%E6%A1%86%E6%9E%B6.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/15-%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E9%9B%86%E5%90%88.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/16-CopyOnWrite%E5%AE%B9%E5%99%A8.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/17-%E9%80%9A%E4%BF%A1%E5%B7%A5%E5%85%B7%E7%B1%BB.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/18-Fork_Join%E6%A1%86%E6%9E%B6.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/19-Java8Stream%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E5%8E%9F%E7%90%86.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/20-%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/13-%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/14-%E9%94%81%E6%8E%A5%E5%8F%A3%E5%92%8C%E7%B1%BB.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/07-%E9%87%8D%E6%8E%92%E5%BA%8F%E4%B8%8Ehappens-before.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/08-volatitle.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/09-synchronized%E4%B8%8E%E9%94%81.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/10-CAS%E4%B8%8E%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/11-AQS.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/12-%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%8E%9F%E7%90%86.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/05-Java%E7%BA%BF%E7%A8%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/06-Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/01-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/02-Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%85%A5%E9%97%A8%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/03-%E7%BA%BF%E7%A8%8B%E7%BB%84%E5%92%8C%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7.html","/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAJava%E5%A4%9A%E7%BA%BF%E7%A8%8B/04-Java%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81%E5%8F%8A%E4%B8%BB%E8%A6%81%E8%BD%AC%E5%8C%96%E6%96%B9%E6%B3%95.html","/%E7%AE%97%E6%B3%95/%E5%B9%B6%E6%9F%A5%E9%9B%86.html","/%E7%AE%97%E6%B3%95/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.html","/%E7%AE%97%E6%B3%95/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%9C%80%E5%BC%BA%E6%80%BB%E7%BB%93.html","/%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%89%8D%E9%A9%B1%E5%92%8C%E5%90%8E%E7%BB%A7%E8%8A%82%E7%82%B9.html","/%E7%AE%97%E6%B3%95/%E4%BB%80%E4%B9%88%E6%98%AF%E7%BA%A2%E9%BB%91%E6%A0%91.html","/%E7%AE%97%E6%B3%95/%E5%9F%BA%E4%BA%8EJava%E5%AE%9E%E7%8E%B0%E7%BA%A2%E9%BB%91%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/16-%E5%BB%BA%E8%A1%A8%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/17-%E7%B4%A2%E5%BC%95%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/18-SQL%E8%AF%AD%E5%8F%A5.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/19-ORM%E6%98%A0%E5%B0%84.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/20-%E5%BA%94%E7%94%A8%E5%88%86%E5%B1%82.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/21-%E4%BA%8C%E6%96%B9%E5%BA%93%E4%BE%9D%E8%B5%96.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/22-%E6%9C%8D%E5%8A%A1%E5%99%A8.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/23-%E8%AE%BE%E8%AE%A1%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/24-%E4%B8%93%E6%9C%89%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/25-%E9%94%99%E8%AF%AF%E7%A0%81%E5%88%97%E8%A1%A8.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/08-%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/09-%E6%B3%A8%E9%87%8A%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/10-%E5%85%B6%E5%AE%83.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/11-%E9%94%99%E8%AF%AF%E7%A0%81.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/12-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/13-%E6%97%A5%E5%BF%97%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/14-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/15-%E5%AE%89%E5%85%A8%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/07-%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/05-%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/06-%E9%9B%86%E5%90%88%E5%A4%84%E7%90%86.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/04-OOP%E8%A7%84%E7%BA%A6.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/02-%E5%B8%B8%E9%87%8F%E5%AE%9A%E4%B9%89.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/03-%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F.html","/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/01-%E5%91%BD%E5%90%8D%E9%A3%8E%E6%A0%BC.html"],wt=ws(E4);ca(wt);const ir=s=>{const i=fs(),a=cs(),n=ia();return v(()=>{var k;const l=s??((k=a.value.blog)==null?void 0:k.key)??"";if(!l)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!wt.value[l])throw new Error(`useBlogCategory: key ${l} is invalid`);const t=wt.value[l][n.value],e={path:t.path,map:{}};for(const p in t.map){const r=t.map[p];e.map[p]={path:r.path,items:[]};for(const d of r.indexes){const{path:g,meta:B}=gi(sr[d]);e.map[p].items.push({path:g,info:B})}i.value.path===r.path&&(e.currentItems=e.map[p].items)}return e})},u4={article:{"/":{path:"/article/",indexes:[86,87,88,97,89,90,91,92,93,15,16,17,83,94,0,82,18,19,20,118,21,51,52,53,54,55,56,57,22,23,58,59,60,24,25,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,61,62,63,1,146,147,98,99,100,101,102,103,104,105,106,107,108,109,110,111,148,112,113,114,115,116,117,26,64,65,27,28,29,66,67,30,68,69,70,71,31,32,33,34,72,95,96,35,36,73,37,74,75,76,2,3,4,5,6,7,8,9,10,11,12,13,14,38,39,40,41,42,43,44,45,46,47,48,49,50,84,85,119,120,77,78,79,80,121,122,81,123]}},star:{"/":{path:"/star/",indexes:[97,28,37]}},timeline:{"/":{path:"/timeline/",indexes:[86,87,88,97,89,90,91,92,93,15,16,17,83,94,0,82,18,19,20,118,21,51,52,53,54,55,56,57,22,23,58,59,60,24,25,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,61,62,63,1,146,147,98,99,100,101,102,103,104,105,106,107,108,109,110,111,148,112,113,114,115,116,117,26,64,65,27,28,29,66,67,30,68,69,70,71,31,32,33,34,72,95,96,35,36,73,37,74,75,76,2,3,4,5,6,7,8,9,10,11,12,13,14,38,39,40,41,42,43,44,45,46,47,48,49,50,84,85,119,120,77,78,79,80,121,122,81,123]}}},Ot=ws(u4);ca(Ot);const wl=s=>{const i=cs(),a=ia();return v(()=>{var e;const n=s??((e=i.value.blog)==null?void 0:e.key)??"";if(!n)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Ot.value[n])throw new Error(`useBlogType: key ${s} is invalid`);const l=Ot.value[n][a.value],t={path:l.path,items:[]};for(const k of l.indexes){const{path:p,meta:r}=gi(sr[k]);t.items.push({path:p,info:r})}return t})},Fe=()=>h(gs,{name:"lock"},()=>h("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));Fe.displayName="LockIcon";var A4=[];const ar=Symbol(""),ve=()=>{const s=Ds(ar);if(!s)throw new Error("useTimeline() is called without provider.");return s},F4=()=>{const s=wl("timeline"),i=v(()=>{const a=[];return s.value.items.forEach(({info:n,path:l})=>{const t=ee(n[Vs.date]);if(t){const e=t.getFullYear(),k=t.getMonth()+1,p=t.getDate();(!a[0]||a[0].year!==e)&&a.unshift({year:e,items:[]}),a[0].items.push({date:`${k}/${p}`,info:n,path:l})}}),{...s.value,config:a.reverse()}});Ei(ar,i)},nr=Symbol(""),$n=()=>{const s=Ds(nr);if(!s)throw new Error("useArticles() is called without provider.");return s},v4=()=>{const s=wl("article");Ei(nr,s)},lr=Symbol.for("categoryMap"),Jn=()=>{const s=Ds(lr);if(!s)throw new Error("useCategoryMap() is called without provider.");return s},C4=()=>{const s=ir("category");Ei(lr,s)},tr=Symbol(""),Ce=()=>{const s=Ds(tr);if(!s)throw new Error("useStars() is called without provider.");return s},m4=()=>{const s=wl("star");Ei(tr,s)},er=Symbol.for("tagMap"),jn=()=>{const s=Ds(er);if(!s)throw new Error("useTagMap() is called without provider.");return s},D4=()=>{const s=ir("tag");Ei(er,s)},f4=()=>{v4(),C4(),m4(),D4(),F4()},Vn=()=>{const s=Ii(),i=es();return v(()=>({...s.value.blog,...i.value.blog}))},b4=s=>{const i=es();return v(()=>{const{[Vs.author]:a}=s.value;return a?An(a):a===!1?[]:An(i.value.author,!1)})},_4=s=>{const i=Jn();return v(()=>B2(s.value[Vs.category]).map(a=>({name:a,path:i.value.map[a].path})))},I4=s=>{const i=jn();return v(()=>c2(s.value[Vs.tag]).map(a=>({name:a,path:i.value.map[a].path})))},S4=s=>v(()=>{const{[Vs.date]:i}=s.value;return ee(i)}),w4=s=>{const i=$a(s,"info"),a=Vn(),n=b4(i),l=_4(i),t=I4(i),e=S4(i),k=C2(),p=v(()=>({author:n.value,category:l.value,date:e.value,localizedDate:i.value[Vs.localizedDate]??"",tag:t.value,isOriginal:i.value[Vs.isOriginal]??!1,readingTime:i.value[Vs.readingTime]??null,readingTimeLocale:i.value[Vs.readingTime]&&k.value?v2(i.value[Vs.readingTime],k.value):null,pageview:s.path})),r=v(()=>a.value.articleInfo);return{info:p,items:r}};var hr=$({name:"SocialMedias",setup(){const s=Vn(),i=Ws(),a=v(()=>Pn(s.value.medias??{}).map(([n,l])=>typeof l=="string"?{name:n,icon:y4[n],link:l}:{name:n,...l}));return()=>a.value.length?h("div",{class:"vp-social-medias"},a.value.map(({name:n,icon:l,link:t})=>h("a",{class:"vp-social-media",href:t,rel:"noopener noreferrer",target:"_blank","aria-label":n||"",...i.value?{}:{"data-balloon-pos":"up"},innerHTML:oa(l)?`<img class="icon ${n}-icon" src="${l}">`:l}))):null}}),me=$({name:"BloggerInfo",setup(){const s=Vn(),i=wn(),a=es(),n=$n(),l=Jn(),t=jn(),e=ve(),k=ua(),p=v(()=>{var B;return s.value.name??((B=An(a.value.author)[0])==null?void 0:B.name)??i.value.title}),r=v(()=>s.value.avatar??a.value.logo),d=v(()=>a.value.blogLocales),g=v(()=>s.value.intro);return()=>{const{article:B,category:c,tag:E,timeline:F}=d.value,m=[[n.value.path,n.value.items.length,B],[l.value.path,Ai(l.value.map).length,c],[t.value.path,Ai(t.value.map).length,E],[e.value.path,e.value.items.length,F]];return h("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[h("div",{class:"vp-blogger",...g.value?{"aria-label":d.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>k(g.value)}:{}},[r.value?h("img",{class:"vp-blogger-avatar",src:Es(r.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,p.value?h("div",{class:"vp-blogger-name",property:"name"},p.value):null,s.value.description?h("div",{class:"vp-blogger-description",innerHTML:s.value.description}):null,g.value?h("meta",{property:"url",content:Es(g.value)}):null]),h("div",{class:"vp-blog-counts"},m.map(([C,D,u])=>h(Ps,{class:"vp-blog-count",to:C},()=>[h("div",{class:"count"},D),h("div",u)]))),h(hr)])}}});const De=()=>h(gs,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));De.displayName="CategoryIcon";const fe=()=>h(gs,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));fe.displayName="TagIcon";const be=()=>h(gs,{name:"timeline"},()=>h("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));be.displayName="TimelineIcon";const kr=()=>h(gs,{name:"slides"},()=>h("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));kr.displayName="SlideIcon";const pr=()=>h(gs,{name:"sticky"},()=>[h("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);pr.displayName="StickyIcon";const Ol=()=>h(gs,{name:"article"},()=>h("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));Ol.displayName="ArticleIcon";const rr=()=>h(gs,{name:"book"},()=>h("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));rr.displayName="BookIcon";const dr=()=>h(gs,{name:"link"},()=>h("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));dr.displayName="LinkIcon";const gr=()=>h(gs,{name:"project"},()=>h("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));gr.displayName="ProjectIcon";const Br=()=>h(gs,{name:"friend"},()=>h("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));Br.displayName="FriendIcon";const Tt=()=>h(gs,{name:"slide-down"},()=>h("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Tt.displayName="SlideDownIcon";const cr=()=>h("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});cr.displayName="EmptyIcon";var O4=$({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(s,{slots:i}){const a=$a(s,"info"),{info:n,items:l}=w4(s);return()=>{var B,c,E;const{[Us.title]:t,[Vs.type]:e,[Vs.isEncrypted]:k=!1,[Vs.cover]:p,[Vs.excerpt]:r,[Vs.sticky]:d}=a.value,g=n.value;return h("div",{class:"vp-article-wrapper"},h("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((B=i.cover)==null?void 0:B.call(i,{cover:p}))??(p?[h("img",{class:"vp-article-cover",src:Es(p),alt:"",loading:"lazy"}),h("meta",{property:"image",content:Es(p)})]:[]),d?h(pr):null,h(Ps,{to:s.path},()=>{var F;return((F=i.title)==null?void 0:F.call(i,{title:t,isEncrypted:k,type:e}))??h("header",{class:"vp-article-title"},[k?h(Fe):null,e===b2.slide?h(kr):null,h("span",{property:"headline"},t)])}),((c=i.excerpt)==null?void 0:c.call(i,{excerpt:r}))??(r?h("div",{class:"vp-article-excerpt",innerHTML:r}):null),h("hr",{class:"vp-article-hr"}),((E=i.info)==null?void 0:E.call(i,{info:g}))??h(Y2,{info:g,...l.value?{items:l.value}:{}})]))}}}),T4=$({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(s,{emit:i}){let a;const n=es(),l=Y(""),t=v(()=>n.value.paginationLocales),e=v(()=>Math.ceil(s.total/s.perPage)),k=v(()=>!!e.value&&e.value!==1),p=v(()=>e.value<7?!1:s.current>4),r=v(()=>e.value<7?!1:s.current<e.value-3),d=v(()=>{const{current:c}=s;let E=1,F=e.value;const m=[];e.value>=7&&(c<=4&&c<e.value-3?(E=1,F=5):c>4&&c>=e.value-3?(F=e.value,E=e.value-4):e.value>7&&(E=c-2,F=c+2));for(let C=E;C<=F;C++)m.push(C);return m}),g=c=>i("updateCurrentPage",c),B=c=>{const E=parseInt(c,10);E<=e.value&&E>0?g(E):a.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${t.value.errorText.replace(/\$page/gu,e.value.toString())}`)};return Cs(()=>{a=new Fy}),()=>h("div",{class:"vp-pagination"},k.value?h("nav",{class:"vp-pagination-list"},[h("div",{class:"vp-pagination-number "},[s.current>1?h("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>g(s.current-1)},t.value.prev):null,p.value?[h("div",{role:"navigation",onClick:()=>g(1)},1),h("div",{class:"ellipsis"},"...")]:null,d.value.map(c=>h("div",{key:c,class:{active:s.current===c},role:"navigation",onClick:()=>g(c)},c)),r.value?[h("div",{class:"ellipsis"},"..."),h("div",{role:"navigation",onClick:()=>g(e.value)},e.value)]:null,s.current<e.value?h("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>g(s.current+1)},t.value.next):null]),h("div",{class:"vp-pagination-nav"},[h("label",{for:"navigation-text"},`${t.value.navigate}: `),h("input",{id:"navigation-text",value:l.value,onInput:({target:c})=>{l.value=c.value},onKeydown:c=>{c.key==="Enter"&&(c.preventDefault(),B(l.value))}}),h("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:t.value.action,onClick:()=>B(l.value)},t.value.action)])]):[])}}),_e=$({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(s){const i=bi(),a=ya(),n=Vn(),l=Y(1),t=v(()=>n.value.articlePerPage??10),e=v(()=>s.items.slice((l.value-1)*t.value,l.value*t.value)),k=async p=>{l.value=p;const r={...i.query};!(r.page===p.toString()||p===1&&!r.page)&&(p===1?delete r.page:r.page=p.toString(),await a.push({path:i.path,query:r}))};return Cs(()=>{const{page:p}=i.query;k(p?Number(p):1),ds(l,()=>{const r=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,r)},100)})}),()=>h("div",{id:"article-list",class:"vp-article-list",role:"feed"},e.value.length?[...e.value.map(({info:p,path:r},d)=>h(ls,{appear:!0,delay:d*.04},()=>h(O4,{key:r,info:p,path:r}))),h(T4,{current:l.value,perPage:t.value,total:s.items.length,onUpdateCurrentPage:k})]:h(cr))}}),or=$({name:"CategoryList",setup(){const s=fs(),i=Jn();return()=>h("ul",{class:"vp-category-list"},Pn(i.value.map).sort(([,a],[,n])=>n.items.length-a.items.length).map(([a,{path:n,items:l}])=>h("li",{class:["vp-category",`color${xn(a,Number(Ea.colorNumber))}`,{active:n===s.value.path}]},h(Ps,{to:n},()=>[a,h("span",{class:"count"},l.length)]))))}}),yr=$({name:"TagList",setup(){const s=cs(),i=jn(),a=n=>{var l;return n===((l=s.value.blog)==null?void 0:l.name)};return()=>h("ul",{class:"tag-list-wrapper"},Pn(i.value.map).sort(([,n],[,l])=>l.items.length-n.items.length).map(([n,{path:l,items:t}])=>h("li",{class:["tag",`color${xn(n,Number(Ea.colorNumber))}`,{active:a(n)}]},h(Ps,{to:l},()=>[n,h("span",{class:"tag-num"},t.length)]))))}}),P4=$({name:"TimelineList",setup(){const s=es(),i=ve(),a=ua(),n=v(()=>s.value.blogLocales.timeline);return()=>h("div",{class:"timeline-list-wrapper"},[h("div",{class:"timeline-list-title",onClick:()=>a(i.value.path)},[h(be),h("span",{class:"num"},i.value.items.length),n.value]),h("hr"),h("div",{class:"timeline-content"},h("ul",{class:"timeline-list"},i.value.config.map(({year:l,items:t},e)=>h(ls,{appear:!0,delay:.08*(e+1)},()=>h("li",[h("h3",{class:"timeline-year"},l),h("ul",{class:"timeline-year-wrapper"},t.map(({date:k,info:p,path:r})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},k),h(Ps,{class:"timeline-title",to:r},()=>p[Us.title])])))])))))])}});const N4={article:Ol,category:De,tag:fe,timeline:be};var Er=$({name:"InfoList",setup(){const s=es(),i=$n(),a=Jn(),n=v(()=>Ai(a.value.map).length),l=Ce(),t=jn(),e=v(()=>Ai(t.value.map).length),k=ua(),p=Y("article"),r=v(()=>s.value.blogLocales);return()=>h("div",{class:"vp-blog-infos"},[h("div",{class:"vp-blog-type-switcher"},Pn(N4).map(([d,g])=>h("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{p.value=d}},h("div",{class:["icon-wrapper",{active:p.value===d}],"aria-label":r.value[d],"data-balloon-pos":"up"},h(g))))),h(ls,()=>p.value==="article"?h("div",{class:"vp-star-article-wrapper"},[h("div",{class:"title",onClick:()=>k(i.value.path)},[h(Ol),h("span",{class:"num"},i.value.items.length),r.value.article]),h("hr"),l.value.items.length?h("ul",{class:"vp-star-articles"},l.value.items.map(({info:d,path:g},B)=>h(ls,{appear:!0,delay:.08*(B+1)},()=>h("li",{class:"vp-star-article"},h(Ps,{to:g},()=>d[Us.title]))))):h("div",{class:"vp-star-article-empty"},r.value.empty.replace("$text",r.value.star))]):p.value==="category"?h("div",{class:"vp-category-wrapper"},[n.value?[h("div",{class:"title",onClick:()=>k(a.value.path)},[h(De),h("span",{class:"num"},n.value),r.value.category]),h("hr"),h(ls,{delay:.04},()=>h(or))]:h("div",{class:"vp-category-empty"},r.value.empty.replace("$text",r.value.category))]):p.value==="tag"?h("div",{class:"vp-tag-wrapper"},[e.value?[h("div",{class:"title",onClick:()=>k(t.value.path)},[h(fe),h("span",{class:"num"},e.value),r.value.tag]),h("hr"),h(ls,{delay:.04},()=>h(yr))]:h("div",{class:"vp-tag-empty"},r.value.empty.replace("$text",r.value.tag))]):h(ls,()=>h(P4)))])}}),Tl=$({name:"BlogWrapper",slots:Object,setup(s,{slots:i}){const{isMobile:a}=Rn();return()=>[h(ue),h(Ee,{noSidebar:!0,noToc:!0},{default:()=>i.default(),navScreenBottom:()=>h(me),sidebar:a.value?()=>h(Er):null})]}});const Hn=()=>h("aside",{class:"vp-blog-info-wrapper"},[h(ls,()=>h(me)),h(ls,{delay:.04},()=>h(Er))]);Hn.displayName="InfoPanel";var L4=$({name:"BlogPage",setup(){const s=fs(),i=cs(),a=Jn(),n=jn();return()=>{const{key:l="",name:t=""}=i.value.blog||{},e=t?l==="category"?a.value.map[t].items:l==="tag"?n.value.map[t].items:[]:[];return h(Tl,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ls,()=>l==="category"?h(or):l==="tag"?h(yr):null),t?h(ls,{appear:!0,delay:.24},()=>h(_e,{key:s.value.path,items:e})):null]),h(ls,{delay:.16},()=>h(Hn,{key:"blog"}))])))}}});const x4="//theme-hope-assets.vuejs.press/hero/default.jpg";var R4=$({name:"BlogHero",slots:Object,setup(s,{slots:i}){const a=cs(),n=wn(),l=ws(),t=v(()=>a.value.heroFullScreen??!1),e=v(()=>{const{heroText:p,heroImage:r,heroImageDark:d,heroAlt:g,heroImageStyle:B,tagline:c}=a.value;return{text:p??n.value.title??"Hello",tagline:c??"",image:r?Es(r):null,imageDark:d?Es(d):null,alt:g??p??"",imageStyle:B,isFullScreen:t.value}}),k=v(()=>{const{bgImage:p,bgImageDark:r,bgImageStyle:d}=a.value;return{image:bs(p)?Es(p):p===!1?null:x4,imageDark:bs(r)?Es(r):null,bgStyle:d,isFullScreen:t.value}});return()=>{var p,r;return a.value.hero===!1?null:h("div",{ref:l,class:["vp-blog-hero",{fullscreen:t.value,"no-bg":!k.value.image}]},[((p=i.bg)==null?void 0:p.call(i,k.value))??[k.value.image?h("div",{class:["vp-blog-mask",{light:k.value.imageDark}],style:[{background:`url(${k.value.image}) center/cover no-repeat`},k.value.bgStyle]}):null,k.value.imageDark?h("div",{class:"vp-blog-mask dark",style:[{background:`url(${k.value.imageDark}) center/cover no-repeat`},k.value.bgStyle]}):null],((r=i.info)==null?void 0:r.call(i,e.value))??[h(ls,{appear:!0,type:"group",delay:.04},()=>{const{image:d,imageDark:g,imageStyle:B,alt:c}=e.value;return[d?h("img",{key:"light",class:["vp-blog-hero-image",{light:g}],style:B,src:d,alt:c}):null,g?h("img",{key:"dark",class:"vp-blog-hero-image dark",style:B,src:g,alt:c}):null]}),h(ls,{appear:!0,delay:.08},()=>e.value.text?h("h1",{class:"vp-blog-hero-title"},e.value.text):null),h(ls,{appear:!0,delay:.12},()=>e.value.tagline?h("p",{class:"vp-blog-hero-description",innerHTML:e.value.tagline}):null)],e.value.isFullScreen?h("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:l.value.clientHeight,behavior:"smooth"})}},[h(Tt),h(Tt)]):null])}}});const M4=["link","article","book","project","friend"];var $4=$({name:"ProjectPanel",components:{ArticleIcon:Ol,BookIcon:rr,FriendIcon:Br,LinkIcon:dr,ProjectIcon:gr},props:{items:{type:Array,required:!0}},setup(s){const i=Ws(),a=ua(),n=(l="",t="icon")=>M4.includes(l)?h(ri(`${l}-icon`)):oa(l)?h("img",{class:"vp-project-image",src:l,alt:t}):_l(l)?h("img",{class:"vp-project-image",src:Es(l),alt:t}):h(Hs,{icon:l});return()=>h("div",{class:"vp-project-panel"},s.items.map(({icon:l,link:t,name:e,desc:k,background:p})=>h("div",{class:["vp-project-card",{[`color${xn(e,Number(Ea.colorNumber))}`]:!i.value&&!p}],...p?{style:p}:{},onClick:()=>a(t)},[n(l,e),h("div",{class:"vp-project-name"},e),h("div",{class:"vp-project-desc"},k)])))}}),J4=$({name:"BlogHomePage",setup(){const s=$n(),i=cs(),a=v(()=>i.value.projects??[]);return()=>h("div",{class:"vp-page vp-blog-home"},[h(R4),h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[a.value.length?h(ls,{appear:!0,delay:.16},()=>h($4,{items:a.value})):null,h(ls,{appear:!0,delay:.24},()=>h(_e,{items:s.value.items}))]),h(ls,{appear:!0,delay:.16},()=>h(Hn,{key:"blog"}))]),h(ls,{appear:!0,delay:.28},()=>h(xa))])}});const ur=()=>h(Tl,()=>h(J4));ur.displayName="BlogHome";var j4=ur,V4=$({name:"ArticleType",setup(){const s=fs(),i=ia(),a=es(),n=$n(),l=Ce(),t=v(()=>{const e=a.value.blogLocales;return[{text:e.all,path:n.value.path},{text:e.star,path:l.value.path},...A4.map(({key:k,path:p})=>{const r=p.replace(/^\//,i.value);return{text:e[k]??gi(r).meta[Us.title]??k,path:r}})]});return()=>h("ul",{class:"vp-article-type-wrapper"},t.value.map(e=>h("li",{class:["vp-article-type",{active:e.path===s.value.path}]},h(Ps,{to:e.path},()=>e.text))))}}),H4=$({name:"BlogPage",setup(){const s=wl(),i=cs(),a=fs(),n=$n(),l=Ce(),t=v(()=>{const{key:e="",type:k}=i.value.blog||{};return e==="star"?l.value.items:k==="type"&&e?s.value.items:n.value.items});return()=>h(Tl,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ls,()=>h(V4)),h(ls,{appear:!0,delay:.24},()=>h(_e,{key:a.value.path,items:t.value}))]),h(ls,{delay:.16},()=>h(Hn,{key:"blog"}))])))}}),z4=$({name:"TimelineItems",setup(){const s=Vn(),i=es(),a=ve(),n=v(()=>s.value.timeline??i.value.blogLocales.timelineTitle),l=v(()=>a.value.config.map(({year:t})=>({title:t.toString(),level:2,slug:t.toString(),children:[]})));return()=>h("div",{class:"timeline-wrapper"},h("ul",{class:"timeline-content"},[h(ls,()=>h("li",{class:"motto"},n.value)),h(Q2,{items:l.value}),a.value.config.map(({year:t,items:e},k)=>h(ls,{appear:!0,delay:.08*(k+1),type:"group"},()=>[h("h3",{key:"title",id:t,class:"timeline-year-title"},h("span",t)),h("li",{key:"content",class:"timeline-year-list"},[h("ul",{class:"timeline-year-wrapper"},e.map(({date:p,info:r,path:d})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},p),h(Ps,{class:"timeline-title",to:d},()=>r[Us.title])])))])]))]))}});const Ar=()=>h(Tl,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ls,{appear:!0,delay:.24},()=>h(z4))]),h(ls,{delay:.16},()=>h(Hn,{key:"blog"}))])));Ar.displayName="Timeline";var U4=Ar,G4={};const va="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),lt=Array.from({length:64},(s,i)=>i),nl=s=>Array(s).fill(-1),Hi=[...nl(46),0,1,...lt.slice(54,64),...nl(7),...lt.slice(2,28),...nl(6),...lt.slice(28,54),...nl(5)],sk=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],ik=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],Fr=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],Pt=(s,i)=>{if(i<=0||i>s.length)throw Error(`Illegal len: ${i}`);let a=0,n,l;const t=[];for(;a<i;){if(n=s[a++]&255,t.push(va[n>>2&63]),n=(n&3)<<4,a>=i){t.push(va[n&63]);break}if(l=s[a++]&255,n|=l>>4&15,t.push(va[n&63]),n=(l&15)<<2,a>=i){t.push(va[n&63]);break}l=s[a++]&255,n|=l>>6&3,t.push(va[n&63]),t.push(va[l&63])}return t.join("")},W4=(s,i)=>{const a=s.length;let n=0,l=0,t,e,k,p,r,d;const g=[];for(;n<a-1&&l<i&&(d=s.charCodeAt(n++),t=d<Hi.length?Hi[d]:-1,d=s.charCodeAt(n++),e=d<Hi.length?Hi[d]:-1,!(t==-1||e==-1||(r=t<<2>>>0,r|=(e&48)>>4,g.push(String.fromCharCode(r)),++l>=i||n>=a)||(d=s.charCodeAt(n++),k=d<Hi.length?Hi[d]:-1,k==-1)||(r=(e&15)<<4>>>0,r|=(k&60)>>2,g.push(String.fromCharCode(r)),++l>=i||n>=a)));)d=s.charCodeAt(n++),p=d<Hi.length?Hi[d]:-1,r=(k&3)<<6>>>0,r|=p,g.push(String.fromCharCode(r)),++l;return g.map(B=>B.charCodeAt(0))},q4=(s,i)=>{let a=null;for(typeof s=="number"&&(a=s,s=()=>null);a!==null||(a=s())!==null;)a<128?i(a&127):a<2048?(i(a>>6&31|192),i(a&63|128)):a<65536?(i(a>>12&15|224),i(a>>6&63|128),i(a&63|128)):(i(a>>18&7|240),i(a>>12&63|128),i(a>>6&63|128),i(a&63|128)),a=null},K4=(s,i)=>{let a,n=null;for(;(a=n!==null?n:s())!==null;){if(a>=55296&&a<=57343&&(n=s())!==null&&n>=56320&&n<=57343){i((a-55296)*1024+n-56320+65536),n=null;continue}i(a)}n!==null&&i(n)},Y4=(s,i)=>{K4(s,function(a){q4(a,i)})},Q4=typeof process=="object"&&G4.NEXT_RUNTIME==="edge"?setTimeout:typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:setTimeout,X4=s=>{const i=[];let a=0;return Y4(()=>a>=s.length?null:s.charCodeAt(a++),n=>{i.push(n)}),i},Fn=(s,i,a,n)=>{let l,t=s[i],e=s[i+1];return t^=a[0],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[1],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[2],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[3],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[4],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[5],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[6],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[7],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[8],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[9],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[10],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[11],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[12],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[13],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[14],l=n[t>>>24],l+=n[256|t>>16&255],l^=n[512|t>>8&255],l+=n[768|t&255],e^=l^a[15],l=n[e>>>24],l+=n[256|e>>16&255],l^=n[512|e>>8&255],l+=n[768|e&255],t^=l^a[16],s[i]=e^a[17],s[i+1]=t,s},ma=(s,i)=>{let a=0;for(let n=0;n<4;++n)a=a<<8|s[i]&255,i=(i+1)%s.length;return{key:a,offp:i}},ak=(s,i,a)=>{const n=i.length,l=a.length;let t=0,e=[0,0],k;for(let p=0;p<n;p++)k=ma(s,t),t=k.offp,i[p]=i[p]^k.key;for(let p=0;p<n;p+=2)e=Fn(e,0,i,a),i[p]=e[0],i[p+1]=e[1];for(let p=0;p<l;p+=2)e=Fn(e,0,i,a),a[p]=e[0],a[p+1]=e[1]},Z4=(s,i,a,n)=>{const l=a.length,t=n.length;let e=0,k=[0,0],p;for(let r=0;r<l;r++)p=ma(i,e),e=p.offp,a[r]=a[r]^p.key;e=0;for(let r=0;r<l;r+=2)p=ma(s,e),e=p.offp,k[0]^=p.key,p=ma(s,e),e=p.offp,k[1]^=p.key,k=Fn(k,0,a,n),a[r]=k[0],a[r+1]=k[1];for(let r=0;r<t;r+=2)p=ma(s,e),e=p.offp,k[0]^=p.key,p=ma(s,e),e=p.offp,k[1]^=p.key,k=Fn(k,0,a,n),n[r]=k[0],n[r+1]=k[1]},nk=(s,i,a,n,l)=>{const t=Fr.slice(),e=t.length;if(a<4||a>31){const B=new Error(`Illegal number of rounds (4-31): ${a}`);if(n===!1)return Promise.reject(B);throw B}if(i.length!==16){const B=new Error(`Illegal salt length: ${i.length} != 16`);if(n===!1)return Promise.reject(B);throw B}a=1<<a>>>0;let k,p,r=0,d;Int32Array?(k=new Int32Array(sk),p=new Int32Array(ik)):(k=sk.slice(),p=ik.slice()),Z4(i,s,k,p);const g=()=>{if(r<a){const B=Date.now();for(;r<a&&(r=r+1,ak(s,k,p),ak(i,k,p),!(Date.now()-B>100)););}else{for(r=0;r<64;r++)for(d=0;d<e>>1;d++)Fn(t,d<<1,k,p);const B=[];for(r=0;r<e;r++)B.push((t[r]>>24&255)>>>0),B.push((t[r]>>16&255)>>>0),B.push((t[r]>>8&255)>>>0),B.push((t[r]&255)>>>0);return n===!1?Promise.resolve(B):B}if(n===!1)return new Promise(B=>Q4(()=>{g().then(B)}))};if(n===!1)return g();{let B;for(;;)if(typeof(B=g())<"u")return B||[]}},sE=s=>{try{let i;typeof window<"u"?i=window.crypto??window.msCrypto:i=globalThis.crypto;const a=new Uint32Array(s);return i==null||i.getRandomValues(a),Array.from(a)}catch{throw Error("WebCryptoAPI is not available")}},iE=(s=10)=>{if(typeof s!="number")throw Error("Illegal arguments: "+typeof s);s<4?s=4:s>31&&(s=31);const i=[];return i.push("$2a$"),s<10&&i.push("0"),i.push(s.toString()),i.push("$"),i.push(Pt(sE(16),16)),i.join("")};function aE(s,i,a,n){if(typeof s!="string"||typeof i!="string"){const c=new Error("Invalid string / salt: Not a string");if(a===!1)return Promise.reject(c);throw c}let l,t;if(i.charAt(0)!=="$"||i.charAt(1)!=="2"){const c=new Error("Invalid salt version: "+i.substring(0,2));if(a===!1)return Promise.reject(c);throw c}if(i.charAt(2)==="$")l="\0",t=3;else{if(l=i.charAt(2),l!=="a"&&l!=="b"&&l!=="y"||i.charAt(3)!=="$"){const c=Error("Invalid salt revision: "+i.substring(2,4));if(a===!1)return Promise.reject(c);throw c}t=4}if(i.charAt(t+2)>"$"){const c=new Error("Missing salt rounds");if(a===!1)return Promise.reject(c);throw c}const e=parseInt(i.substring(t,t+1),10)*10,k=parseInt(i.substring(t+1,t+2),10),p=e+k,r=i.substring(t+3,t+25);s+=l>="a"?"\0":"";const d=X4(s),g=W4(r,16),B=c=>{const E=[];return E.push("$2"),l>="a"&&E.push(l),E.push("$"),p<10&&E.push("0"),E.push(p.toString()),E.push("$"),E.push(Pt(g,g.length)),E.push(Pt(c,Fr.length*4-1)),E.join("")};return a===!1?nk(d,g,p,!1).then(c=>B(c)):B(nk(d,g,p,!0))}const nE=(s,i=10)=>{if(typeof i=="number"&&(i=iE(i)),typeof s!="string"||typeof i!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof i);return aE(s,i,!0)},Nt=(s,i)=>{if(typeof s!="string"||typeof i!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof i);return i.length!==60?!1:nE(s,i.substring(0,i.length-31))===i};var vr=$({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(s,{emit:i}){const a=cs(),n=es(),l=Y(""),t=Y(!1),e=Y(!1),k=v(()=>n.value.encryptLocales);let p=null;const r=()=>{p&&clearTimeout(p),t.value=!1,i("verify",l.value,e.value),Mi().then(()=>{t.value=!0,p=setTimeout(()=>{t.value=!1},1e3)})};return()=>h("div",{class:["vp-decrypt-layer",{expand:s.full||a.value.home}]},h("div",{class:"vp-decrypt-modal"},[h("div",{class:["vp-decrypt-hint",{tried:t.value}]},t.value?k.value.errorHint:h(Fe,{"aria-label":k.value.iconLabel})),h("div",{class:"vp-decrypt-input"},[h("input",{type:"password",value:l.value,placeholder:k.value.placeholder,onInput:({target:d})=>{l.value=d.value},onKeydown:({key:d})=>{d==="Enter"&&r()}})]),h("div",{class:"vp-remember-password"},[h("input",{type:"checkbox",value:e.value,onChange:()=>e.value=!e.value}),k.value.remember]),h("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>r()},"OK")]))}});const Cr=()=>{const s=Ii();return v(()=>s.value.encrypt||{})},lk="VUEPRESS_HOPE_GLOBAL_TOKEN",lE=()=>{const s=Cr(),i=Ha(lk,""),a=Kp(lk,""),n=v(()=>{const{global:t=!1,admin:e=[]}=s.value;return t&&e.length>0}),l=v(()=>{if(n.value){if(i.value)return s.value.admin.some(t=>Nt(i.value,t));if(a.value)return s.value.admin.some(t=>Nt(a.value,t))}return!1});return{isEncrypted:n,isDecrypted:l,validate:(t,e=!1)=>{(e?i:a).value=t}}},tt=(s="",i)=>!!s&&Nt(s,i),tk="VUEPRESS_HOPE_PATH_TOKEN",tE=()=>{const s=fs(),i=Cr(),a=Ha(tk,{}),n=Kp(tk,{}),l=e=>ja(i.value.config)?Ai(i.value.config).filter(k=>yn(decodeURI(e),k)).sort((k,p)=>p.length-k.length):[],t=e=>{const k=l(e);if(k.length>0){const{config:p={}}=i.value;return{isEncrypted:!0,isDecrypted:k.some(r=>a.value[r]&&p[r].some(d=>tt(a.value[r],d))||n.value[r]&&p[r].some(d=>tt(n.value[r],d)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:v(()=>t(s.value.path)),getStatus:t,validate:(e,k=!1)=>{const{config:p={}}=i.value,r=l(s.value.path);for(const d of r)if(p[d].filter(g=>tt(e,g))){(k?a:n).value[d]=e;break}}}};var eE=$({name:"GlobalEncrypt",slots:Object,setup(s,{slots:i}){const{isDecrypted:a,isEncrypted:n,validate:l}=lE(),t=Ws(),e=Y(!1);return Cs(()=>{e.value=!0}),()=>h(t.value?Sl:Ae,()=>n.value?e.value?a.value?i.default():h(vr,{full:!0,onVerify:l}):null:i.default())}}),hE=$({name:"LocalEncrypt",slots:Object,setup(s,{slots:i}){const{status:a,validate:n}=tE(),l=Y(!1);return Cs(()=>{l.value=!0}),()=>{const{isEncrypted:t,isDecrypted:e}=a.value;return t?l.value?e?i.default():h(vr,{full:!0,onVerify:n}):null:i.default()}}});jo(s=>{const i=s.t,a=s.I!==!1,n=s.i;return a?{title:i,content:n?()=>[h(Hs,{icon:n}),i]:null,order:s.O,index:s.I}:null});const kE=_i({enhance:({app:s,router:i})=>{const{scrollBehavior:a}=i.options;i.options.scrollBehavior=async(...n)=>(await _t.wait(),a(...n)),b9(s),s.component("HopeIcon",Hs),s.component("BloggerInfo",me),s.component("SocialMedias",hr),s.component("GlobalEncrypt",eE),s.component("LocalEncrypt",hE)},setup:()=>{_9(),m9(),f4()},layouts:{Layout:B4,NotFound:o4,BlogCategory:L4,BlogHome:j4,BlogType:H4,Timeline:U4}}),pE=Object.freeze(Object.defineProperty({__proto__:null,default:kE},Symbol.toStringTag,{value:"Module"})),ll=[Mc,Po,Jo,Wo,Qo,ay,ky,cy,Wy,r9,pE].map(s=>s.default).filter(Boolean),rE=JSON.parse('{"base":"/","lang":"zh-CN","title":"Panda诚的博客","description":"古来圣贤皆贫贱 何况我辈孤且直","head":[["link",{"rel":"stylesheet","href":"//at.alicdn.com/t/font_2410206_mfj6e1vbwo.css"}],["meta",{"name":"referrer","content":"no-referrer"}],["link",{"rel":"icon","href":"/logo.png"}]],"locales":{}}');var Ka=ws(rE),dE=ZB,gE=()=>{const s=fc({history:dE(ae("/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(i,a,n)=>n||(i.hash?{el:i.hash}:{top:0})});return s.beforeResolve(async(i,a)=>{if(i.path!==a.path||a===Ti){const n=gi(i.fullPath);if(n.path!==i.fullPath)return n.path;const l=await n.loader();i.meta={...n.meta,_pageChunk:l}}else i.path===a.path&&(i.meta=a.meta)}),s},BE=s=>{s.component("ClientOnly",bl),s.component("Content",Pp),s.component("RouteLink",Ps)},cE=(s,i,a)=>{const n=v(()=>i.currentRoute.value.path),l=_k((m,C)=>({get(){return m(),i.currentRoute.value.meta._pageChunk},set(D){i.currentRoute.value.meta._pageChunk=D,C()}})),t=v(()=>ta.resolveLayouts(a)),e=v(()=>ta.resolveRouteLocale(Ka.value.locales,n.value)),k=v(()=>ta.resolveSiteLocaleData(Ka.value,e.value)),p=v(()=>l.value.comp),r=v(()=>l.value.data),d=v(()=>r.value.frontmatter),g=v(()=>ta.resolvePageHeadTitle(r.value,k.value)),B=v(()=>ta.resolvePageHead(g.value,d.value,k.value)),c=v(()=>ta.resolvePageLang(r.value,k.value)),E=v(()=>ta.resolvePageLayout(r.value,t.value)),F={layouts:t,pageData:r,pageComponent:p,pageFrontmatter:d,pageHead:B,pageHeadTitle:g,pageLang:c,pageLayout:E,redirects:At,routeLocale:e,routePath:n,routes:Ia,siteData:Ka,siteLocaleData:k};return s.provide(te,F),Object.defineProperties(s.config.globalProperties,{$frontmatter:{get:()=>d.value},$head:{get:()=>B.value},$headTitle:{get:()=>g.value},$lang:{get:()=>c.value},$page:{get:()=>r.value},$routeLocale:{get:()=>e.value},$site:{get:()=>Ka.value},$siteLocale:{get:()=>k.value},$withBase:{get:()=>Es}}),F},oE=()=>{const s=Ic(),i=wp();let a=[];const n=()=>{s.value.forEach(e=>{const k=yE(e);k&&a.push(k)})},l=()=>{const e=[];return s.value.forEach(k=>{const p=EE(k);p&&e.push(p)}),e},t=()=>{document.documentElement.lang=i.value;const e=l();a.forEach((k,p)=>{const r=e.findIndex(d=>k.isEqualNode(d));r===-1?(k.remove(),delete a[p]):e.splice(r,1)}),e.forEach(k=>document.head.appendChild(k)),a=[...a.filter(k=>!!k),...e]};Ei(Tc,t),Cs(()=>{n(),ds(s,t,{immediate:!1})})},yE=([s,i,a=""])=>{const n=Object.entries(i).map(([k,p])=>bs(p)?`[${k}=${JSON.stringify(p)}]`:p===!0?`[${k}]`:"").join(""),l=`head > ${s}${n}`;return Array.from(document.querySelectorAll(l)).find(k=>k.innerText===a)||null},EE=([s,i,a])=>{if(!bs(s))return null;const n=document.createElement(s);return ja(i)&&Object.entries(i).forEach(([l,t])=>{bs(t)?n.setAttribute(l,t):t===!0&&n.setAttribute(l,"")}),bs(a)&&n.appendChild(document.createTextNode(a)),n},uE=eB,AE=async()=>{var a;const s=uE({name:"Vuepress",setup(){var t;oE();for(const e of ll)(t=e.setup)==null||t.call(e);const n=ll.flatMap(({rootComponents:e=[]})=>e.map(k=>h(k))),l=Sc();return()=>[h(l.value),n]}}),i=gE();BE(s),cE(s,i,ll);for(const n of ll)await((a=n.enhance)==null?void 0:a.call(n,{app:s,router:i,siteData:Ka}));return s.use(i),{app:s,router:i}};AE().then(({app:s,router:i})=>{i.isReady().then(()=>{s.mount("#app")})});export{CE as a,tp as b,vE as c,AE as createVueApp,ep as d,Is as e,mE as f,Bg as o,ri as r,Dd as w};
