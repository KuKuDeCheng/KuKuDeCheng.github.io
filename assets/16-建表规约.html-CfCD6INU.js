import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,a as n}from"./app-CtKwaxkk.js";const a={},o=n('<ol><li>【强制】表达是与否概念的字段，必须使用 <code>is_xxx</code> 的方式命名，数据类型是 <code>unsigned tinyint（1 表示是，0 表示否）</code>。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>任何字段如果为非负数，必须是 <code>unsigned</code>。</p></div><div class="hint-container note"><p class="hint-container-title">注意</p><p>POJO 类中的任何布尔类型的变量，都不要加 is 前缀，所以，需要在<code>&lt;resultMap&gt;</code>设置从 is_xxx 到Xxx 的映射关系。数据库表示是与否的值，使用 tinyint 类型，坚持 is_xxx 的命名方式是为了明确其取值含义与取值范围。</p></div><div class="hint-container tip"><p class="hint-container-title">正例</p><p>表达逻辑删除的字段名 is_deleted，1 表示删除，0 表示未删除。</p></div><ol start="2"><li>【强制】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>MySQL 在 Windows 下不区分大小写，但在 Linux 下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。</p><div class="hint-container tip"><p class="hint-container-title">正例</p><p>aliyun_admin，rdc_config，level3_name</p></div></div><div class="hint-container caution"><p class="hint-container-title">反例</p><p>AliyunAdmin，rdcConfig，level_3_name</p></div><ol start="3"><li>【强制】表名不使用复数名词。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>表名应该仅仅表示表里面的实体内容，不应该表示实体数量，对应于 DO 类名也是单数形式，符合表达习惯。</p></div><ol start="4"><li>【强制】禁用保留字，如 <code>desc、range、match、delayed</code> 等，请参考 MySQL 官方保留字。</li><li>【强制】主键索引名为 <code>pk_字段名</code>；唯一索引名为 <code>uk_字段名</code>；普通索引名则为 <code>idx_字段名</code>。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>pk_ 即 primary key；uk_ 即 unique key；idx_ 即 index 的简称。</p></div><ol start="6"><li>【强制】小数类型为 decimal，禁止使用 float 和 double。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>在存储的时候，float 和 double 都存在精度损失的问题，很可能在比较值的时候，得到不正确的结果。如果存储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数并分开存储。</p></div><ol start="7"><li>【强制】如果存储的字符串长度几乎相等，使用 char 定长字符串类型。</li><li>【强制】varchar 是可变长字符串，不预先分配存储空间，长度不要超过 5000，如果存储长度大于此值，定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。</li><li>【强制】表必备三字段：id, gmt_create, gmt_modified。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>其中 id 必为主键，类型为<code> bigint unsigned</code>、单表时<code>自增、步长为 1</code>。<code>gmt_create</code>, <code>gmt_modified</code>的类型均为 <code>datetime</code> 类型，前者现在时表示主动式创建，后者过去分词表示被动式更新。 10. 【推荐】表的命名最好是遵循“业务名称_表的作用”。</p><div class="hint-container tip"><p class="hint-container-title">正例</p><p>alipay_task / force_project / trade_config</p></div></div><ol start="11"><li>【推荐】库名与应用名称尽量一致。</li><li>【推荐】如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释。</li><li>【推荐】字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循：</li></ol><ul><li>1） 不是频繁修改的字段。</li><li>2） 不是唯一索引的字段。</li><li>3） 不是 varchar 超长字段，更不能是 text 字段。</li></ul><div class="hint-container tip"><p class="hint-container-title">正例</p><p>各业务线经常冗余存储商品名称，避免查询时需要调用 IC 服务获取。</p></div><ol start="14"><li>【推荐】单表行数超过 500 万行或者单表容量超过 2GB，才推荐进行分库分表。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>如果预计三年后的数据量根本达不到这个级别，请不要在创建表时就分库分表。</p></div><ol start="15"><li>【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。</li></ol><div class="hint-container tip"><p class="hint-container-title">正例</p><p>无符号值可以避免误存负数，且扩大了表示范围。</p></div>',22),c=[o];function l(s,d){return e(),i("div",null,c)}const h=t(a,[["render",l],["__file","16-建表规约.html.vue"]]),m=JSON.parse('{"path":"/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/16-%E5%BB%BA%E8%A1%A8%E8%A7%84%E7%BA%A6.html","title":"建表规约","lang":"zh-CN","frontmatter":{"title":"建表规约","date":"2021-02-15T00:00:00.000Z","category":"阿里Java开发手册","description":"【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（1 表示是，0 表示否）。 说明 任何字段如果为非负数，必须是 unsigned。 注意 POJO 类中的任何布尔类型的变量，都不要加 is 前缀，所以，需要在<resultMap>设置从 is_xxx 到Xxx 的映射关系。数据库表示是与否...","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/16-%E5%BB%BA%E8%A1%A8%E8%A7%84%E7%BA%A6.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"建表规约"}],["meta",{"property":"og:description","content":"【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（1 表示是，0 表示否）。 说明 任何字段如果为非负数，必须是 unsigned。 注意 POJO 类中的任何布尔类型的变量，都不要加 is 前缀，所以，需要在<resultMap>设置从 is_xxx 到Xxx 的映射关系。数据库表示是与否..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T11:40:02.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:published_time","content":"2021-02-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T11:40:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"建表规约\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T11:40:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[],"git":{"createdTime":1719488402000,"updatedTime":1719488402000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":1}]},"readingTime":{"minutes":3.36,"words":1008},"filePathRelative":"阿里Java开发手册/16-建表规约.md","localizedDate":"2021年2月15日","excerpt":"<ol>\\n<li>【强制】表达是与否概念的字段，必须使用 <code>is_xxx</code> 的方式命名，数据类型是 <code>unsigned tinyint（1 表示是，0 表示否）</code>。</li>\\n</ol>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">说明</p>\\n<p>任何字段如果为非负数，必须是 <code>unsigned</code>。</p>\\n</div>\\n<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>POJO 类中的任何布尔类型的变量，都不要加 is 前缀，所以，需要在<code>&lt;resultMap&gt;</code>设置从 is_xxx 到Xxx 的映射关系。数据库表示是与否的值，使用 tinyint 类型，坚持 is_xxx 的命名方式是为了明确其取值含义与取值范围。</p>\\n</div>","autoDesc":true}');export{h as comp,m as data};
