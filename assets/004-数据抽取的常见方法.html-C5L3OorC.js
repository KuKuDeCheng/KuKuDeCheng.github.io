import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as a,b as o,a as n,o as r}from"./app-yELfxIoD.js";const p="/assets/mysql-Ci0nZrar.png",l="/assets/oracle-FDrBiIJh.png",i={},c=o("p",null,"数据抽取是指从源数据源系统抽取需要的数据。实际应用中，数据源较多采用的是关系数据库。总体而言，数据抽取的常见方法有两大类，一是基于查询式的，一是基于日志的。",-1),s=n('<h2 id="基于查询式的数据抽取" tabindex="-1"><a class="header-anchor" href="#基于查询式的数据抽取"><span>基于查询式的数据抽取</span></a></h2><p>基于查询式的数据抽取，顾名思义，以从来源库来源表查询数据为主。总体又有几种：触发器方式，增量字段方式，时间戳方式等等。</p><h3 id="触发器方式-又称快照式" tabindex="-1"><a class="header-anchor" href="#触发器方式-又称快照式"><span>触发器方式（又称快照式）</span></a></h3><p>在要抽取的表上建立需要的触发器，一般要建立插入、修改、删除三个触发器，每当源表中的数据发生变化，就被相应的触发器将变化的数据写入一个临时表，抽取线程从临时表中抽取数据，临时表中抽取过的数据被标记或删除。</p><blockquote><p>优点：数据抽取的性能高，ETL加载规则简单，速度快，不需要修改业务系统表结构，可以实现数据的递增加载。</p></blockquote><blockquote><p>缺点：要求业务表建立触发器，对业务系统有一定的影响，容易对源数据库构成威胁。</p></blockquote><h3 id="增量字段方式" tabindex="-1"><a class="header-anchor" href="#增量字段方式"><span>增量字段方式</span></a></h3><p>它是一种基于快照比较的变化数据捕获方式，在源表上含有一个增量字段，系统中更新修改表数据的时候，同时修改增量字段的值。当进行数据抽取时，通过比较上次抽取时记录的增量字段值来决定抽取哪些数据。<code>严格意义上讲，增量字段要求必须递增且唯一</code> 。</p><blockquote><p>优点：数据抽取的性能高，ETL加载规则简单，速度快，不需要修改业务系统表结构，可以实现数据的递增加载。</p></blockquote><blockquote><p>缺点：增量字段必须递增且唯一。对不支持增量字段的自动更新的数据库，需要业务系统来维护。另外，无法捕获对增量字段以前数据的delete和update 操作，在数据准确性上受到了一定的限制。无法获取delete及分别出insert和update。</p></blockquote><h3 id="时间戳方式" tabindex="-1"><a class="header-anchor" href="#时间戳方式"><span>时间戳方式</span></a></h3><p>放宽松条件的增量字段方式，不要求字段唯一，满足递增即可。在源表上含有一个时间戳字段，系统中更新修改表数据的时候，同时修改增量字段的值。当进行数据抽取时，通过比较上次抽取时间与时间戳字段的值来决定抽取哪些数据。有的数据库的时间戳支持自动更新，即表的其它字段的数据发生改变时，自动更新时间戳字段的值。有的数据库不支持时间戳的自动更新，这就要求业务系统在更新业务数据时，手工更新时间戳字段。</p><p>优点：数据抽取的性能高，ETL加载规则简单，速度快，不需要修改业务系统表结构，可以实现数据的递增加载。</p><p>缺点：对不支持时间戳字段的自动更新的数据库，需要业务系统来维护，业务系统复杂的情况下有可能无法保证时间戳的递增性。另外，无法捕获对增量字段以前数据的delete和update 操作，在数据准确性上受到了一定的限制。在一次抽取过程中如果数据量大，时间戳字段相同值较多，分页查询抽取时可能会丢失数据(order by顺序不定导致)。</p><h3 id="全表删除插入方式" tabindex="-1"><a class="header-anchor" href="#全表删除插入方式"><span>全表删除插入方式</span></a></h3><p>每次ETL 操作均删除目标表数据，由ETL 全新加载数据。</p><blockquote><p>优点：ETL 加载规则简单。</p></blockquote><blockquote><p>缺点：不适合大表，不可以实现数据的递增加载，如果有关联关系，需要重新进行创建。</p></blockquote><h2 id="基于日志的数据抽取" tabindex="-1"><a class="header-anchor" href="#基于日志的数据抽取"><span>基于日志的数据抽取</span></a></h2><p>数据库通常借助日志来实现事务，常见的有undo log、redo log，undo/redo log都能保证事务特性，这里主要是原子性和持久性，即事务相关的操作，要么全做，要么不做，并且修改的数据能得到持久化。</p><p>我们通过采集日志把已经COMMIT的事务数据抽取出来，对于没有commit的事务不做操作，进而达到数据抽取的目的。</p><blockquote><p>优点：不需要修改业务系统表结构，数据完整准确(insert update delete)，支持事务</p></blockquote><blockquote><p>缺点：环境配置复杂，需要占用数据库系统的一定资源，ETL规则复杂(采集、解析)。</p></blockquote><p>比如说常见的MySQL的binlog日志同步，Oracle使用自带的LogMiner工具解析归档日志等等。</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',26);function d(h,u){return r(),t("div",null,[c,a(" more "),s])}const _=e(i,[["render",d],["__file","004-数据抽取的常见方法.html.vue"]]),b=JSON.parse('{"path":"/ApacheNIFI%E6%95%99%E7%A8%8B/004-%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95.html","title":"数据抽取的常见理论方法","lang":"zh-CN","frontmatter":{"title":"数据抽取的常见理论方法","date":"2020-09-12T00:00:00.000Z","category":"ApacheNIFI教程","tag":"NIFI","order":4,"star":1,"description":"数据抽取是指从源数据源系统抽取需要的数据。实际应用中，数据源较多采用的是关系数据库。总体而言，数据抽取的常见方法有两大类，一是基于查询式的，一是基于日志的。","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/ApacheNIFI%E6%95%99%E7%A8%8B/004-%E6%95%B0%E6%8D%AE%E6%8A%BD%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"数据抽取的常见理论方法"}],["meta",{"property":"og:description","content":"数据抽取是指从源数据源系统抽取需要的数据。实际应用中，数据源较多采用的是关系数据库。总体而言，数据抽取的常见方法有两大类，一是基于查询式的，一是基于日志的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T13:31:00.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:tag","content":"NIFI"}],["meta",{"property":"article:published_time","content":"2020-09-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T13:31:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据抽取的常见理论方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T13:31:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"基于查询式的数据抽取","slug":"基于查询式的数据抽取","link":"#基于查询式的数据抽取","children":[{"level":3,"title":"触发器方式（又称快照式）","slug":"触发器方式-又称快照式","link":"#触发器方式-又称快照式","children":[]},{"level":3,"title":"增量字段方式","slug":"增量字段方式","link":"#增量字段方式","children":[]},{"level":3,"title":"时间戳方式","slug":"时间戳方式","link":"#时间戳方式","children":[]},{"level":3,"title":"全表删除插入方式","slug":"全表删除插入方式","link":"#全表删除插入方式","children":[]}]},{"level":2,"title":"基于日志的数据抽取","slug":"基于日志的数据抽取","link":"#基于日志的数据抽取","children":[]}],"git":{"createdTime":1719488402000,"updatedTime":1719495060000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":2}]},"readingTime":{"minutes":4.11,"words":1232},"filePathRelative":"ApacheNIFI教程/004-数据抽取的常见方法.md","localizedDate":"2020年9月12日","excerpt":"<p>数据抽取是指从源数据源系统抽取需要的数据。实际应用中，数据源较多采用的是关系数据库。总体而言，数据抽取的常见方法有两大类，一是基于查询式的，一是基于日志的。</p>\\n","autoDesc":true}');export{_ as comp,b as data};
