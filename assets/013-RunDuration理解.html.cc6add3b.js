import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as e,c,a as n,b as i,w as l,d as a,e as s}from"./app.17aaeba5.js";var u="/assets/1.dcbbb776.png",k="/assets/2.0f9c4e62.png";const r={},d=a('<h2 id="run-duration" tabindex="-1"><a class="header-anchor" href="#run-duration" aria-hidden="true">#</a> Run Duration</h2><p>\u4E00\u4E9B\u5904\u7406\u5668\u652F\u6301\u914D\u7F6E\u8FD0\u884C\u6301\u7EED\u65F6\u95F4(<code>Run Duration</code>)\u3002\u6B64\u8BBE\u7F6E\u544A\u8BC9\u5904\u7406\u5668\u5728\u5355\u4E2A\u4EFB\u52A1\u4E2D\u7EE7\u7EED\u4F7F\u7528\u540C\u4E00task\u5C3D\u53EF\u80FD\u591A\u5730\u6765\u5904\u7406\u6765\u81EA\u4F20\u5165\u961F\u5217\u7684\u7684FlowFiles(\u6216\u6210\u6279\u7684\u6D41\u6587\u4EF6)\u3002 \u5BF9\u4E8E\u5904\u7406\u5355\u4E2A\u4EFB\u52A1\u672C\u8EAB\u975E\u5E38\u5FEB\u5E76\u4E14FlowFile\u6570\u91CF\u4E5F\u5F88\u5927\u7684\u5904\u7406\u5668\u6765\u8BF4\uFF0C\u8FD9\u662F\u4E00\u4E2A\u7406\u60F3\u7684\u9009\u62E9\u3002</p><p><img src="'+u+'" alt="" loading="lazy"></p><p><img src="'+k+'" alt="" loading="lazy"></p><p>\u5728\u4E0A\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C\u5C06\u5B8C\u5168\u76F8\u540C\u7684FlowFiles\u4F20\u9012\u5230\u8FD9\u4E24\u4E2A\u5904\u7406\u5668\uFF0C\u8FD9\u4E9B\u5904\u7406\u5668\u88AB\u914D\u7F6E\u4E3A\u6267\u884C\u76F8\u540C\u7684Attribute\u66F4\u65B0\u3002\u4E24\u8005\u5728\u8FC7\u53BB5\u5206\u949F\u5185\u5904\u7406\u4E86\u76F8\u540C\u6570\u91CF\u7684FlowFiles\uFF1B\u4F46\u662F\uFF0C\u914D\u7F6E\u4E3A\u8FD0\u884C\u6301\u7EED\u65F6\u95F4\u7684\u5904\u7406\u5668\u6D88\u8017\u7684\u603B\u4F53CPU\u65F6\u95F4\u66F4\u5C11\u3002\u5E76\u975E\u6240\u6709\u5904\u7406\u5668\u90FD\u652F\u6301\u8BBE\u7F6E<code>Run Duration</code>\u3002\u5904\u7406\u5668\u529F\u80FD\u7684\u6027\u8D28\uFF0C\u4F7F\u7528\u7684\u65B9\u6CD5\u6216\u4F7F\u7528\u7684\u5BA2\u6237\u7AEF\u5E93\u53EF\u80FD\u51B3\u5B9A\u4E86\u4E0D\u652F\u6301\u6B64\u529F\u80FD\u3002\u8FD9\u6837\u7684\u8BDD\u4F60\u5C06\u65E0\u6CD5\u5728\u6B64\u7C7B\u5904\u7406\u5668\u4E0A\u8BBE\u7F6E<code>Run Duration</code>\u3002</p><h2 id="\u5DE5\u4F5C\u539F\u7406\u53D9\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u539F\u7406\u53D9\u8FF0" aria-hidden="true">#</a> \u5DE5\u4F5C\u539F\u7406\u53D9\u8FF0</h2><ol><li><p>\u5904\u7406\u5668\u5DF2\u4E3A\u5176\u4EFB\u52A1\u5206\u914D\u4E86\u7EBF\u7A0B\u3002\u5904\u7406\u5668\u4ECE\u4F20\u5165\u8FDE\u63A5\u7684<code>Active queue</code>\u4E2D\u83B7\u53D6\u6700\u9AD8\u4F18\u5148\u7EA7\u7684FlowFile(\u6216\u4E00\u6279FlowFile)\u3002\u5982\u679C\u5BF9FlowFile\u7684\u5904\u7406\u672A\u8D85\u8FC7\u914D\u7F6E\u7684\u8FD0\u884C\u6301\u7EED\u65F6\u95F4\uFF0C\u5219\u4F1A\u4ECE<code>Active queue</code>\u4E2D\u62C9\u51FA\u53E6\u4E00\u4E2AFlowFile(\u6216\u4E00\u6279FlowFile)\u3002\u6B64\u8FC7\u7A0B\u5C06\u5728\u540C\u4E00\u7EBF\u7A0B\u4E0B\u7EE7\u7EED\u8FDB\u884C\u6240\u6709\u64CD\u4F5C\uFF0C\u76F4\u5230\u8FBE\u5230<code>Run Duration</code>\u65F6\u95F4\u6216<code>Active queue</code>\u4E3A\u7A7A\u3002\u5C4A\u65F6\uFF0C\u4F1A\u8BDD\u5B8C\u6210\uFF0C\u6240\u6709\u5904\u7406\u8FC7\u7684FlowFiles\u90FD\u7ACB\u5373\u63D0\u4EA4\u7ED9\u9002\u5F53\u7684\u5173\u7CFB\u3002</p></li><li><p>\u7531\u4E8E\u76F4\u5230\u6574\u4E2A\u8FD0\u884C\u5B8C\u6210\u624D\u63D0\u4EA4\u6240\u6709\u7684FlowFiles\uFF0C\u56E0\u6B64\u5728FlowFiles\u4E0A\u5BFC\u81F4\u4E86\u4E00\u4E9B\u5EF6\u8FDF\u3002\u4F60\u914D\u7F6E\u7684<code>Run Duration</code>\u51B3\u5B9A\u4E86\u81F3\u5C11\u8981\u53D1\u751F\u591A\u5C11\u5EF6\u8FDF(<code>Active queue</code>\u4E0D\u4E3A\u7A7A\u7684\u65F6\u5019)\u3002</p></li><li><p>\u5982\u679C\u9488\u5BF9FlowFile\u6267\u884C\u5904\u7406\u5668\u6240\u9700\u7684\u65F6\u95F4\u6BD4\u914D\u7F6E\u7684<code>Run Duration</code>\u66F4\u957F\uFF0C\u90A3\u4E48\u8C03\u6574\u6B64\u914D\u7F6E\u6CA1\u6709\u4EFB\u4F55\u5176\u4ED6\u597D\u5904\u3002</p></li></ol><h2 id="\u8FD9\u5BF9\u4E8E\u5806\u4F7F\u7528\u610F\u5473\u7740\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u8FD9\u5BF9\u4E8E\u5806\u4F7F\u7528\u610F\u5473\u7740\u4EC0\u4E48" aria-hidden="true">#</a> \u8FD9\u5BF9\u4E8E\u5806\u4F7F\u7528\u610F\u5473\u7740\u4EC0\u4E48</h2>',8),v=s("\u7531\u4E8E\u5B83\u4EC5\u5904\u7406"),m=n("code",null,"Active queue",-1),b=s("\u4E2D\u7684\u4F20\u5165FlowFiles\uFF0C\u56E0\u6B64\u6B64\u5904\u6CA1\u6709\u589E\u52A0\u5806\u538B\u529B\u3002("),g=n("code",null,"Active queue",-1),w=s("\u4E2D\u7684FlowFiles\u5DF2\u7ECF\u5728\u5806\u7A7A\u95F4\u4E2D\uFF0C\u5173\u4E8E"),f=n("code",null,"Active queue",-1),y=s("\u8BF7\u770B"),h=s("\u6DF1\u5165\u7406\u89E3Apache NIFI Connection"),S=s(")\u3002"),F=n("li",null,[n("p",null,"\u65B0\u751F\u6210\u7684FlowFiles(\u5982\u679C\u6709\u7684\u8BDD\uFF0C\u53D6\u51B3\u4E8E\u5904\u7406\u5668\u529F\u80FD)\u5168\u90E8\u4FDD\u7559\u5728\u5806\u4E2D\uFF0C\u76F4\u5230\u6700\u7EC8\u63D0\u4EA4\u4E3A\u6B62\u3002\u8FD9\u53EF\u80FD\u4F1A\u5E26\u6765\u4E00\u4E9B\u989D\u5916\u7684\u5806\u538B\u529B\uFF0C\u56E0\u4E3A\u6240\u6709\u65B0\u751F\u6210\u7684FlowFiles\u90FD\u5C06\u4FDD\u7559\u5728\u5806\u4E2D\uFF0C\u76F4\u5230\u5728\u8FD0\u884C\u65F6\u95F4\u7ED3\u675F\u65F6\u5C06\u5B83\u4EEC\u5168\u90E8\u63D0\u4EA4\u7ED9\u8F93\u51FA\u5173\u7CFB\u4E3A\u6B62(\u5C24\u5176\u662F\u65B0FlowFile\u7684content\uFF0C\u8FD8\u6CA1\u6709\u5237\u5230repository)\u3002")],-1),_=a(`<h2 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h2><p>\u4F7F\u7528<code>SupportsBatching</code>\u6CE8\u89E3\u6807\u6CE8\u7684Processor\u662F\u652F\u6301<code>Run Duration</code>\u7684\uFF0C\u5982\u679C\u4E00\u4E2A\u5904\u7406\u5668\u4F7F\u7528\u4E86\u8FD9\u4E2A\u6CE8\u91CA\uFF0C\u90A3\u4E48\u5B83\u5C31\u5141\u8BB8\u6846\u67B6\u5BF9ProcessSession\u8FDB\u884C\u6279\u5904\u7406\u7684\u63D0\u4EA4\uFF0C\u4EE5\u53CA\u5141\u8BB8\u6846\u67B6\u4ECE\u540E\u7EED\u5BF9ProcessSessionFactory.createSession() \u7684\u8C03\u7528\u4E2D\u591A\u6B21\u8FD4\u56DE\u76F8\u540C\u7684ProcessSession</p><p>\u6BD4\u5982<code>UpdateAttribute</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@EventDriven</span>
<span class="token annotation punctuation">@SideEffectFree</span>
<span class="token annotation punctuation">@SupportsBatching</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateAttribute</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">Searchable</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u770B\u5728\u54EA\u91CC\u5904\u7406\u4E86\u8FD9\u4E2A<code>SupportsBatching</code>\u6CE8\u89E3\uFF0C\u5728(\u6DF1\u5165\u89E3\u6790Apache NIFI\u7684\u8C03\u5EA6\u7B56\u7565)[./016-NIFI\u8C03\u5EA6.md]\u4E00\u6587\u4E2D\uFF0C\u6211\u4EEC\u5728\u8BB2\u89E3<code>Timer driven</code>\u7684\u65F6\u5019\u6709\u63D0\u5230<code>ConnectableTask.invoke</code>\u65B9\u6CD5\uFF0C\u662F\u7EBF\u7A0B\u6267\u884C\u8C03\u5EA6\u5177\u4F53Processor\u7684ontrigger\u65B9\u6CD5\u524D\u7684\u5904\u7406(\u91CC\u9762\u6709\u68C0\u6D4BProcessor\u662F\u5426\u6709\u5DE5\u4F5C\u53EF\u505A)\uFF0C\u4E0B\u9762\u6211\u4EEC\u770B\u4E00\u4E0B\u8FD9\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">InvocationResult</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u4EFB\u52A1\u7EC8\u6B62</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduleState<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Will not trigger {} because task is terminated&quot;</span><span class="token punctuation">,</span> connectable<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span>DO_NOT_YIELD<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        \xB7\xB7\xB7
        <span class="token comment">//\u67E5\u770BProcessor\u662F\u5426\u6709\u5DE5\u4F5C\u53EF\u505A</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isWorkToDo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Yielding {} because it has no work to do&quot;</span><span class="token punctuation">,</span> connectable<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string">&quot;No work to do&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u80CC\u538B\u673A\u5236</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numRelationships <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> requiredNumberOfAvailableRelationships <span class="token operator">=</span> connectable<span class="token punctuation">.</span><span class="token function">isTriggerWhenAnyDestinationAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> numRelationships<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>repositoryContext<span class="token punctuation">.</span><span class="token function">isRelationshipAvailabilitySatisfied</span><span class="token punctuation">(</span>requiredNumberOfAvailableRelationships<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Yielding {} because Backpressure is Applied&quot;</span><span class="token punctuation">,</span> connectable<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token string">&quot;Backpressure Applied&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u53EF\u4EE5\u8FD0\u884C</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Triggering {}&quot;</span><span class="token punctuation">,</span> connectable<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u83B7\u53D6 Run Duration\u7684\u914D\u7F6E</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> batchNanos <span class="token operator">=</span> connectable<span class="token punctuation">.</span><span class="token function">getRunDuration</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ProcessSessionFactory</span> sessionFactory<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">StandardProcessSession</span> rawSession<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> batch<span class="token punctuation">;</span>
        <span class="token comment">//\u5904\u7406SupportsBatching\u6CE8\u89E3</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>connectable<span class="token punctuation">.</span><span class="token function">isSessionBatchingSupported</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> batchNanos <span class="token operator">&gt;</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rawSession <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardProcessSession</span><span class="token punctuation">(</span>repositoryContext<span class="token punctuation">,</span> scheduleState<span class="token operator">::</span><span class="token function">isTerminated</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BatchingSessionFactory</span><span class="token punctuation">(</span>rawSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
            batch <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            rawSession <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            sessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StandardProcessSessionFactory</span><span class="token punctuation">(</span>repositoryContext<span class="token punctuation">,</span> scheduleState<span class="token operator">::</span><span class="token function">isTerminated</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            batch <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">final</span> <span class="token class-name">ActiveProcessSessionFactory</span> activeSessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakHashMapProcessSessionFactory</span><span class="token punctuation">(</span>sessionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        scheduleState<span class="token punctuation">.</span><span class="token function">incrementActiveThreadCount</span><span class="token punctuation">(</span>activeSessionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">long</span> startNanos <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> finishIfBackpressureEngaged <span class="token operator">=</span> startNanos <span class="token operator">+</span> <span class="token punctuation">(</span>batchNanos <span class="token operator">/</span> <span class="token number">25L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> finishNanos <span class="token operator">=</span> startNanos <span class="token operator">+</span> batchNanos<span class="token punctuation">;</span>
        <span class="token keyword">int</span> invocationCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">String</span> originalThreadName <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">AutoCloseable</span> ncl <span class="token operator">=</span> <span class="token class-name">NarCloseable</span><span class="token punctuation">.</span><span class="token function">withComponentNarLoader</span><span class="token punctuation">(</span>flowController<span class="token punctuation">.</span><span class="token function">getExtensionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> shouldRun <span class="token operator">=</span> connectable<span class="token punctuation">.</span><span class="token function">getScheduledState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ScheduledState</span><span class="token punctuation">.</span>RUNNING<span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>shouldRun<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u5FAA\u73AFonTrigger\u5904\u7406 \u76F4\u5230Run Duration\u65F6\u95F4\u5230\u4E86\u6216\u8005Processor\u6CA1\u6709\u5DE5\u4F5C\u53EF\u505A\u6216\u8005\u89E6\u53D1\u80CC\u538B\u673A\u5236\u4E86</span>
                    invocationCount<span class="token operator">++</span><span class="token punctuation">;</span>
                    connectable<span class="token punctuation">.</span><span class="token function">onTrigger</span><span class="token punctuation">(</span>processContext<span class="token punctuation">,</span> activeSessionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>batch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span>DO_NOT_YIELD<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">final</span> <span class="token keyword">long</span> nanoTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>nanoTime <span class="token operator">&gt;</span> finishNanos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span>DO_NOT_YIELD<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>nanoTime <span class="token operator">&gt;</span> finishIfBackpressureEngaged <span class="token operator">&amp;&amp;</span> <span class="token function">isBackPressureEngaged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span>DO_NOT_YIELD<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>connectable<span class="token punctuation">.</span><span class="token function">getScheduledState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">ScheduledState</span><span class="token punctuation">.</span>RUNNING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isWorkToDo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isYielded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>numRelationships <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">int</span> requiredNumberOfAvailableRelationships <span class="token operator">=</span> connectable<span class="token punctuation">.</span><span class="token function">isTriggerWhenAnyDestinationAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> numRelationships<span class="token punctuation">;</span>
                        shouldRun <span class="token operator">=</span> repositoryContext<span class="token punctuation">.</span><span class="token function">isRelationshipAvailabilitySatisfied</span><span class="token punctuation">(</span>requiredNumberOfAvailableRelationships<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">TerminatedTaskException</span> tte<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token class-name">ComponentLog</span> procLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleProcessLogger</span><span class="token punctuation">(</span>connectable<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                procLog<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to process session due to task being terminated&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>tte<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessException</span> pe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token class-name">ComponentLog</span> procLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleProcessLogger</span><span class="token punctuation">(</span>connectable<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                procLog<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to process session due to {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>pe<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Use ComponentLog to log the event so that a bulletin will be created for this processor</span>
                <span class="token keyword">final</span> <span class="token class-name">ComponentLog</span> procLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleProcessLogger</span><span class="token punctuation">(</span>connectable<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                procLog<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;{} failed to process session due to {}; Processor Administratively Yielded for {}&quot;</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> schedulingAgent<span class="token punctuation">.</span><span class="token function">getAdministrativeYieldDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Administratively Yielding {} due to uncaught Exception: {}&quot;</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>

                connectable<span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span>schedulingAgent<span class="token punctuation">.</span><span class="token function">getAdministrativeYieldDuration</span><span class="token punctuation">(</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6279\u91CF\u63D0\u4EA4</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>batch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        rawSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token class-name">ComponentLog</span> procLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleProcessLogger</span><span class="token punctuation">(</span>connectable<span class="token punctuation">.</span><span class="token function">getIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> connectable<span class="token punctuation">.</span><span class="token function">getRunnableComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        procLog<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to commit session {} due to {}; rolling back&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> rawSession<span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            rawSession<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Exception</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            procLog<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to roll back session {} due to {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> rawSession<span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
        \xB7\xB7\xB7
        <span class="token keyword">return</span> <span class="token class-name">InvocationResult</span><span class="token punctuation">.</span>DO_NOT_YIELD<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u8FD9\u4E2A\u65B9\u6CD5\u6211\u4EEC\u770B\u5230</p><ol><li>\u8BBE\u7F6E\u4E86<code>SupportsBatching</code>\u6CE8\u89E3\u7684Processor\u5E76\u4E14\u914D\u7F6E\u4E86<code>Run Duration</code>\u65F6\uFF0C\u4F20\u5230<code>onTrigger</code>\u65B9\u6CD5\u7684<code>ProcessSessionFactory sessionFactory</code>\u662F\u4E0D\u4E00\u6837\u7684\u3002</li><li>\u6279\u91CF\u5BF9\u5E94\u4F20\u5165\u7684\u662F<code>BatchingSessionFactory</code>,\u8FD9\u4E2A\u7C7B\u7684<code>commit</code>\u65B9\u6CD5\u53EF\u4EE5\u7B80\u5355\u7406\u89E3\u4E3A\u5E76\u6CA1\u6709\u5B9E\u9645\u5E72\u63D0\u4EA4\u4E8B\u52A1\u7684\u4E8B\u513F\uFF0C\u53EA\u662F\u505A\u4E86\u4E00\u4E9Bcheck</li><li>\u6279\u91CF\u7684\u6700\u540E\u5BF9\u5E94\u7684\u662F<code>rawSession.commit()</code></li></ol><p>\u6240\u4EE5\uFF0C\u5982\u679C\u4F60\u81EA\u5B9A\u4E49\u7684\u7EC4\u4EF6\u60F3\u8981\u652F\u6301\u6279\u5904\u7406\u5E76\u4E14\u7B26\u5408\u6279\u5904\u7406\u7684\u7279\u5F81(\u7B80\u5355\u8BF4\u5C31\u662F\u4EFB\u52A1\u6267\u884C\u5FEB\u5E76\u4E14FlowFile\u6570\u91CF\u4E5F\u5F88\u5927)\uFF0C\u53EA\u8981\u52A0\u4E00\u4E2A<code>SupportsBatching</code>\u6CE8\u89E3\u5C31\u53EF\u4EE5\u4E86\u3002</p><h2 id="\u6CE8\u610F" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F" aria-hidden="true">#</a> \u6CE8\u610F</h2><p>\u7406\u8BBA\u5206\u6790\uFF1A\u5BF9\u4E8E\u4E00\u4E9B\u6E90\u7EC4\u4EF6\u6765\u8BF4(source \u4E00\u4E2A\u6D41\u7A0B\u7684\u6E90)\uFF0C\u7136\u540E\u662F\u9700\u8981<code>\u8BB0\u5F55\u72B6\u6001</code>\u7684(\u6BD4\u5982\u8BF4\u8BB0\u5F55\u4E00\u4E2A\u589E\u91CF\u503C\u5230state\uFF0C\u518D\u6BD4\u5982\u662F\u4ECE\u522B\u7684\u5730\u65B9\u53D6\u6570\u636E\u6216\u8005\u63A5\u53D7\u6570\u636E\uFF0C\u62FF\u5230\u6570\u636E\u540E\u544A\u8BC9\u5BF9\u65B9\u6570\u636E\u5DF2\u5230\u624B)\uFF0C\u6B63\u5E38\u6765\u8BF4Processor\u7684\u5B9E\u73B0\u90FD\u662F\u5148<code>session.commit</code>\u518D\u5E72<code>\u8BB0\u5F55\u72B6\u6001</code>\u90A3\u4E9B\u4E8B\uFF0C\u4F46\u5982\u679C\u662F\u6279\u91CF\u5904\u7406\u914D\u7F6E<code>Run Duration</code>,\u901A\u8FC7\u4E0A\u9762\u7684\u4EE3\u7801\u5206\u6790\u53D1\u73B0\uFF0C<code>processor.onTrigger</code>\u91CC\u6211\u4EEC\u5199\u7684<code>session.commit</code>\u5176\u5B9E\u5E76\u6CA1\u6709\u63D0\u4EA4\uFF0C\u800C\u662F\u7B49\u5230\u6279\u5904\u7406\u7ED3\u675F\u540E\u518D\u63D0\u4EA4\uFF0C\u5982\u679C\u8FD9\u4E2A\u4EFB\u52A1\u662F\u4F9D\u8D56<code>\u8BB0\u5F55\u72B6\u6001</code>\u6765\u83B7\u53D6\u6570\u636E\u7684\uFF0C\u5176\u5B9E\u662F\u4E0D\u4FDD\u8BC1\u540E\u9762\u7684commit\u4E00\u5B9A\u6267\u884C\u7684(NIFI shutdown\u4E86\uFF0CNIFI\u5B95\u4E86)\uFF0C\u6700\u7EC8\u6CA1\u6709commit\u4F46\u662F\u72B6\u6001\u5DF2\u7ECF\u8BB0\u5F55\uFF0C\u90A3\u4E48\u8FD9\u6B21\u6279\u5904\u7406\u7684\u6570\u636E\u662F\u4E22\u5931\u7684\u3002</p><p>\u573A\u666F\u6A21\u62DF\u63CF\u8FF0\uFF1A\u73B0\u6709\u4E00\u4E2ARest\u670D\u52A1\uFF0C\u63D0\u4F9B\u7C7B\u4F3C\u4E8E<code>kafka</code>\u7684\u529F\u80FD\uFF0C\u6D88\u8D39\u8005\u53EF\u4EE5\u6765\u6CE8\u518C\u83B7\u53D6\u6570\u636E\uFF0C\u670D\u52A1\u7AEF\u8BB0\u5F55\u5BA2\u6237\u7AEF\u6D88\u8D39\u7684offset\uFF0C\u7136\u540E\u4F7F\u7528InvokeHttp\u6279\u5904\u7406\u7684\u53BB\u5230\u8FD9\u4E2A\u670D\u52A1\u83B7\u53D6\u6570\u636E\uFF0C\u90A3\u4E48\u5C31\u6709\u6982\u7387\u53D1\u751F\u4E0A\u9762\u8BF4\u7684\u60C5\u51B5\u3002</p>`,12);function N(R,A){const t=o("RouterLink");return e(),c("div",null,[d,n("ol",null,[n("li",null,[n("p",null,[v,m,b,g,w,f,y,i(t,{to:"/ApacheNIFI%E6%95%99%E7%A8%8B/011-%E7%90%86%E8%A7%A3connection.html"},{default:l(()=>[h]),_:1}),S])]),F]),_])}var D=p(r,[["render",N],["__file","013-RunDuration\u7406\u89E3.html.vue"]]);export{D as default};
