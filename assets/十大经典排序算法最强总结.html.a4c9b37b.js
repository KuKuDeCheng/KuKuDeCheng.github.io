import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.0a7c44f6.js";var t="/assets/1.c786d969.png",e="/assets/2.aaa92947.png",o="/assets/3.287f9a70.gif",c="/assets/4.5aa51d89.gif",l="/assets/5.78edb4c2.gif",i="/assets/04.3c0df175.gif",u="/assets/7.7613b4a8.gif",r="/assets/05.0a546080.gif",k="/assets/06.76dadfbb.gif",d="/assets/07.671ad9fc.gif",v="/assets/08.fd83be32.gif",m="/assets/09.622313ca.gif",b="/assets/00.62e1c093.gif";const y={},w=p('<h2 id="\u6392\u5E8F\u7B97\u6CD5\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5\u8BF4\u660E" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5\u8BF4\u660E</h2><ul><li><strong>\u6392\u5E8F\u7684\u5B9A\u4E49</strong>:\u5BF9\u4E00\u5E8F\u5217\u5BF9\u8C61\u6839\u636E\u67D0\u4E2A\u5173\u952E\u5B57\u8FDB\u884C\u6392\u5E8F\u3002</li><li><strong>\u672F\u8BED\u8BF4\u660E</strong><ul><li><strong>\u7A33\u5B9A</strong>\uFF1A\u5982\u679Ca\u539F\u672C\u5728b\u524D\u9762\uFF0C\u800Ca=b\uFF0C\u6392\u5E8F\u4E4B\u540Ea\u4ECD\u7136\u5728b\u7684\u524D\u9762\uFF1B</li><li><strong>\u4E0D\u7A33\u5B9A</strong>\uFF1A\u5982\u679Ca\u539F\u672C\u5728b\u7684\u524D\u9762\uFF0C\u800Ca=b\uFF0C\u6392\u5E8F\u4E4B\u540Ea\u53EF\u80FD\u4F1A\u51FA\u73B0\u5728b\u7684\u540E\u9762\uFF1B</li><li><strong>\u5185\u6392\u5E8F</strong>\uFF1A\u6240\u6709\u6392\u5E8F\u64CD\u4F5C\u90FD\u5728\u5185\u5B58\u4E2D\u5B8C\u6210\uFF1B</li><li><strong>\u5916\u6392\u5E8F</strong>\uFF1A\u7531\u4E8E\u6570\u636E\u592A\u5927\uFF0C\u56E0\u6B64\u628A\u6570\u636E\u653E\u5728\u78C1\u76D8\u4E2D\uFF0C\u800C\u6392\u5E8F\u901A\u8FC7\u78C1\u76D8\u548C\u5185\u5B58\u7684\u6570\u636E\u4F20\u8F93\u624D\u80FD\u8FDB\u884C\uFF1B</li><li><strong>\u65F6\u95F4\u590D\u6742\u5EA6</strong>\uFF1A\u4E00\u4E2A\u7B97\u6CD5\u6267\u884C\u6240\u8017\u8D39\u7684\u65F6\u95F4\u3002</li><li><strong>\u7A7A\u95F4\u590D\u6742\u5EA6</strong>\uFF1A\u8FD0\u884C\u5B8C\u4E00\u4E2A\u7A0B\u5E8F\u6240\u9700\u5185\u5B58\u7684\u5927\u5C0F\u3002</li></ul></li></ul><h2 id="\u7B97\u6CD5\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u603B\u7ED3" aria-hidden="true">#</a> \u7B97\u6CD5\u603B\u7ED3</h2><ul><li>n: \u6570\u636E\u89C4\u6A21 k: \u201C\u6876\u201D\u7684\u4E2A\u6570 In-place: \u5360\u7528\u5E38\u6570\u5185\u5B58\uFF0C\u4E0D\u5360\u7528\u989D\u5916\u5185\u5B58 Out-place: \u5360\u7528\u989D\u5916\u5185\u5B58</li></ul><p><img src="'+t+'" alt="" loading="lazy"></p><h2 id="\u7B97\u6CD5\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u5206\u7C7B" aria-hidden="true">#</a> \u7B97\u6CD5\u5206\u7C7B</h2><p><img src="'+e+'" alt="" loading="lazy"></p><h2 id="\u6BD4\u8F83\u548C\u975E\u6BD4\u8F83\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83\u548C\u975E\u6BD4\u8F83\u7684\u533A\u522B" aria-hidden="true">#</a> \u6BD4\u8F83\u548C\u975E\u6BD4\u8F83\u7684\u533A\u522B</h2><ul><li>\u5E38\u89C1\u7684 <strong>\u5FEB\u901F\u6392\u5E8F\u3001\u5F52\u5E76\u6392\u5E8F\u3001\u5806\u6392\u5E8F\u3001\u5192\u6CE1\u6392\u5E8F</strong> \u7B49\u5C5E\u4E8E <strong>\u6BD4\u8F83\u6392\u5E8F</strong>\u3002<strong>\u5728\u6392\u5E8F\u7684\u6700\u7EC8\u7ED3\u679C\u91CC\uFF0C\u5143\u7D20\u4E4B\u95F4\u7684\u6B21\u5E8F\u4F9D\u8D56\u4E8E\u5B83\u4EEC\u4E4B\u95F4\u7684\u6BD4\u8F83\u3002\u6BCF\u4E2A\u6570\u90FD\u5FC5\u987B\u548C\u5176\u4ED6\u6570\u8FDB\u884C\u6BD4\u8F83\uFF0C\u624D\u80FD\u786E\u5B9A\u81EA\u5DF1\u7684\u4F4D\u7F6E\u3002</strong></li><li>\u5728 <strong>\u5192\u6CE1\u6392\u5E8F</strong>\u4E4B\u7C7B\u7684\u6392\u5E8F\u4E2D\uFF0C\u95EE\u9898\u89C4\u6A21\u4E3An\uFF0C\u53C8\u56E0\u4E3A\u9700\u8981\u6BD4\u8F83n\u6B21\uFF0C\u6240\u4EE5\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n\xB2)\u3002\u5728 <strong>\u5F52\u5E76\u6392\u5E8F\u3001\u5FEB\u901F\u6392\u5E8F</strong>\u4E4B\u7C7B\u7684\u6392\u5E8F\u4E2D\uFF0C\u95EE\u9898\u89C4\u6A21\u901A\u8FC7 <strong>\u5206\u6CBB\u6CD5</strong>\u6D88\u51CF\u4E3AlogN\u6B21\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u5E73\u5747<strong>O(nlogn)</strong>\u3002</li><li>\u6BD4\u8F83\u6392\u5E8F\u7684\u4F18\u52BF\u662F\uFF0C\u9002\u7528\u4E8E\u5404\u79CD\u89C4\u6A21\u7684\u6570\u636E\uFF0C\u4E5F\u4E0D\u5728\u4E4E\u6570\u636E\u7684\u5206\u5E03\uFF0C\u90FD\u80FD\u8FDB\u884C\u6392\u5E8F\u3002\u53EF\u4EE5\u8BF4\uFF0C<strong>\u6BD4\u8F83\u6392\u5E8F\u9002\u7528\u4E8E\u4E00\u5207\u9700\u8981\u6392\u5E8F\u7684\u60C5\u51B5</strong>\u3002</li><li><strong>\u8BA1\u6570\u6392\u5E8F\u3001\u57FA\u6570\u6392\u5E8F\u3001\u6876\u6392\u5E8F</strong> \u5219\u5C5E\u4E8E <strong>\u975E\u6BD4\u8F83\u6392\u5E8F</strong>\u3002\u975E\u6BD4\u8F83\u6392\u5E8F\u662F\u901A\u8FC7\u786E\u5B9A\u6BCF\u4E2A\u5143\u7D20\u4E4B\u524D\uFF0C\u5E94\u8BE5\u6709\u591A\u5C11\u4E2A\u5143\u7D20\u6765\u6392\u5E8F\u3002\u9488\u5BF9\u6570\u7EC4arr\uFF0C\u8BA1\u7B97arr[i]\u4E4B\u524D\u6709\u591A\u5C11\u4E2A\u5143\u7D20\uFF0C\u5219\u552F\u4E00\u786E\u5B9A\u4E86arr[i]\u5728\u6392\u5E8F\u540E\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u3002</li><li>\u975E\u6BD4\u8F83\u6392\u5E8F\u53EA\u8981\u786E\u5B9A\u6BCF\u4E2A\u5143\u7D20\u4E4B\u524D\u7684\u5DF2\u6709\u7684\u5143\u7D20\u4E2A\u6570\u5373\u53EF\uFF0C\u6240\u6709\u4E00\u6B21\u904D\u5386\u5373\u53EF\u89E3\u51B3\u3002\u7B97\u6CD5\u65F6\u95F4\u590D\u6742\u5EA6<strong>O(n)</strong>\u3002</li><li><strong>\u975E\u6BD4\u8F83\u6392\u5E8F\u65F6\u95F4\u590D\u6742\u5EA6\u5E95\uFF0C\u4F46\u7531\u4E8E\u975E\u6BD4\u8F83\u6392\u5E8F\u9700\u8981\u5360\u7528\u7A7A\u95F4\u6765\u786E\u5B9A\u552F\u4E00\u4F4D\u7F6E\u3002\u6240\u4EE5\u5BF9\u6570\u636E\u89C4\u6A21\u548C\u6570\u636E\u5206\u5E03\u6709\u4E00\u5B9A\u7684\u8981\u6C42\u3002</strong></li></ul><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><p><strong>Bubble Sort</strong>\u662F\u4E00\u79CD\u7B80\u5355\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u91CD\u590D\u5730\u8D70\u8BBF\u8FC7\u8981\u6392\u5E8F\u7684\u6570\u5217\uFF0C\u4E00\u6B21\u6BD4\u8F83\u4E24\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u5B83\u4EEC\u7684\u987A\u5E8F\u9519\u8BEF\u5C31\u628A\u5B83\u4EEC\u4EA4\u6362\u8FC7\u6765\u3002\u8D70\u8BBF\u6570\u5217\u7684\u5DE5\u4F5C\u662F\u91CD\u590D\u5730\u8FDB\u884C\u76F4\u5230\u6CA1\u6709\u518D\u9700\u8981\u4EA4\u6362\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8BE5\u6570\u5217\u5DF2\u7ECF\u6392\u5E8F\u5B8C\u6210\u3002\u8FD9\u4E2A\u7B97\u6CD5\u7684\u540D\u5B57\u7531\u6765\u662F\u56E0\u4E3A\u8D8A\u5C0F\u7684\u5143\u7D20\u4F1A\u7ECF\u7531\u4EA4\u6362\u6162\u6162\u201C\u6D6E\u201D\u5230\u6570\u5217\u7684\u9876\u7AEF\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><ul><li>\u6BD4\u8F83\u76F8\u90BB\u7684\u5143\u7D20\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5C31\u4EA4\u6362\u5B83\u4EEC\u4E24\u4E2A\uFF1B</li><li>\u5BF9\u6BCF\u4E00\u5BF9\u76F8\u90BB\u5143\u7D20\u4F5C\u540C\u6837\u7684\u5DE5\u4F5C\uFF0C\u4ECE\u5F00\u59CB\u7B2C\u4E00\u5BF9\u5230\u7ED3\u5C3E\u7684\u6700\u540E\u4E00\u5BF9\uFF0C\u8FD9\u6837\u5728\u6700\u540E\u7684\u5143\u7D20\u5E94\u8BE5\u4F1A\u662F\u6700\u5927\u7684\u6570\uFF1B</li><li>\u9488\u5BF9\u6240\u6709\u7684\u5143\u7D20\u91CD\u590D\u4EE5\u4E0A\u7684\u6B65\u9AA4\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA41~3\uFF0C\u76F4\u5230\u6392\u5E8F\u5B8C\u6210\u3002</li></ul><p><img src="'+o+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u5192\u6CE1\u6392\u5E8F
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n)</li><li>\u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>)</li><li>\u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>)</li></ul><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h2><p>Selection Sort\u8868\u73B0\u6700\u7A33\u5B9A\u7684\u6392\u5E8F\u7B97\u6CD5\u4E4B\u4E00\uFF0C\u56E0\u4E3A\u65E0\u8BBA\u4EC0\u4E48\u6570\u636E\u8FDB\u53BB\u90FD\u662FO(n2)\u7684\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u6240\u4EE5\u7528\u5230\u5B83\u7684\u65F6\u5019\uFF0C\u6570\u636E\u89C4\u6A21\u8D8A\u5C0F\u8D8A\u597D\u3002\u552F\u4E00\u7684\u597D\u5904\u53EF\u80FD\u5C31\u662F\u4E0D\u5360\u7528\u989D\u5916\u7684\u5185\u5B58\u7A7A\u95F4\u4E86\u5427\u3002\u7406\u8BBA\u4E0A\u8BB2\uFF0C\u9009\u62E9\u6392\u5E8F\u53EF\u80FD\u4E5F\u662F\u5E73\u65F6\u6392\u5E8F\u4E00\u822C\u4EBA\u60F3\u5230\u7684\u6700\u591A\u7684\u6392\u5E8F\u65B9\u6CD5\u4E86\u5427\u3002</p><p>Selection-sort\u662F\u4E00\u79CD\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\u3002</p><p>\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\uFF1A\u9996\u5148\u5728\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u627E\u5230\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u5B58\u653E\u5230\u6392\u5E8F\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E\uFF0C\u7136\u540E\uFF0C\u518D\u4ECE\u5269\u4F59\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u7EE7\u7EED\u5BFB\u627E\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u7136\u540E\u653E\u5230\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\u3002\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u76F4\u5230\u6240\u6709\u5143\u7D20\u5747\u6392\u5E8F\u5B8C\u6BD5\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-1" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><p>n\u4E2A\u8BB0\u5F55\u7684\u76F4\u63A5\u9009\u62E9\u6392\u5E8F\u53EF\u7ECF\u8FC7n-1\u8D9F\u76F4\u63A5\u9009\u62E9\u6392\u5E8F\u5F97\u5230\u6709\u5E8F\u7ED3\u679C\u3002\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><ul><li>\u521D\u59CB\u72B6\u6001\uFF1A\u65E0\u5E8F\u533A\u4E3A<code>R[1..n]</code>\uFF0C\u6709\u5E8F\u533A\u4E3A\u7A7A\uFF1B</li><li>\u7B2Ci\u8D9F\u6392\u5E8F(i=1,2,3\u2026n-1)\u5F00\u59CB\u65F6\uFF0C\u5F53\u524D\u6709\u5E8F\u533A\u548C\u65E0\u5E8F\u533A\u5206\u522B\u4E3A<code>R[1..i-1]</code>\u548C<code>R[i..n]</code>\u3002\u8BE5\u8D9F\u6392\u5E8F\u4ECE\u5F53\u524D\u65E0\u5E8F\u533A\u4E2D-\u9009\u51FA\u5173\u952E\u5B57\u6700\u5C0F\u7684\u8BB0\u5F55 <code>R[k]</code>\uFF0C\u5C06\u5B83\u4E0E\u65E0\u5E8F\u533A\u7684\u7B2C1\u4E2A\u8BB0\u5F55\u4EA4\u6362\uFF0C\u4F7F<code>R[1..i]</code>\u548C<code>R[i+1..n]</code>\u5206\u522B\u53D8\u4E3A\u8BB0\u5F55\u4E2A\u6570\u589E\u52A01\u4E2A\u7684\u65B0\u6709\u5E8F\u533A\u548C\u8BB0\u5F55\u4E2A\u6570\u51CF\u5C111\u4E2A\u7684\u65B0\u65E0\u5E8F\u533A\uFF1B</li><li>n-1\u8D9F\u7ED3\u675F\uFF0C\u6570\u7EC4\u6709\u5E8F\u5316\u4E86\u3002</li></ul><p><img src="`+c+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u9009\u62E9\u6392\u5E8F
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">selectionSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//\u627E\u5230\u6700\u5C0F\u7684\u6570</span>
                minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span> <span class="token comment">//\u5C06\u6700\u5C0F\u6570\u7684\u7D22\u5F15\u4FDD\u5B58</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
        array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>)</strong></p><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><p>\u63D2\u5165\u6392\u5E8F\uFF08Insertion-Sort\uFF09\u7684\u7B97\u6CD5\u63CF\u8FF0\u662F\u4E00\u79CD\u7B80\u5355\u76F4\u89C2\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\u662F\u901A\u8FC7\u6784\u5EFA\u6709\u5E8F\u5E8F\u5217\uFF0C\u5BF9\u4E8E\u672A\u6392\u5E8F\u6570\u636E\uFF0C\u5728\u5DF2\u6392\u5E8F\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF0C\u627E\u5230\u76F8\u5E94\u4F4D\u7F6E\u5E76\u63D2\u5165\u3002\u63D2\u5165\u6392\u5E8F\u5728\u5B9E\u73B0\u4E0A\uFF0C\u901A\u5E38\u91C7\u7528in-place\u6392\u5E8F\uFF08\u5373\u53EA\u9700\u7528\u5230O(1)\u7684\u989D\u5916\u7A7A\u95F4\u7684\u6392\u5E8F\uFF09\uFF0C\u56E0\u800C\u5728\u4ECE\u540E\u5411\u524D\u626B\u63CF\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u53CD\u590D\u628A\u5DF2\u6392\u5E8F\u5143\u7D20\u9010\u6B65\u5411\u540E\u632A\u4F4D\uFF0C\u4E3A\u6700\u65B0\u5143\u7D20\u63D0\u4F9B\u63D2\u5165\u7A7A\u95F4\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-2" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-2" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u63D2\u5165\u6392\u5E8F\u90FD\u91C7\u7528in-place\u5728\u6570\u7EC4\u4E0A\u5B9E\u73B0\u3002\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><ul><li>\u4ECE\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u8BE5\u5143\u7D20\u53EF\u4EE5\u8BA4\u4E3A\u5DF2\u7ECF\u88AB\u6392\u5E8F\uFF1B</li><li>\u53D6\u51FA\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5728\u5DF2\u7ECF\u6392\u5E8F\u7684\u5143\u7D20\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF1B</li><li>\u5982\u679C\u8BE5\u5143\u7D20\uFF08\u5DF2\u6392\u5E8F\uFF09\u5927\u4E8E\u65B0\u5143\u7D20\uFF0C\u5C06\u8BE5\u5143\u7D20\u79FB\u5230\u4E0B\u4E00\u4F4D\u7F6E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA43\uFF0C\u76F4\u5230\u627E\u5230\u5DF2\u6392\u5E8F\u7684\u5143\u7D20\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u65B0\u5143\u7D20\u7684\u4F4D\u7F6E\uFF1B</li><li>\u5C06\u65B0\u5143\u7D20\u63D2\u5165\u5230\u8BE5\u4F4D\u7F6E\u540E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA42~5\u3002</li></ul><p><img src="`+l+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u63D2\u5165\u6392\u5E8F
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">insertionSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token keyword">int</span> current<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        current <span class="token operator">=</span> array<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> preIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> current <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
            preIndex<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> current<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n)</li><li>\u6700\u574F\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>)</li><li>\u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>)</li></ul><h2 id="\u5E0C\u5C14\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a> \u5E0C\u5C14\u6392\u5E8F</h2><p>\u5E0C\u5C14\u6392\u5E8F\u662F\u5E0C\u5C14\uFF08Donald Shell\uFF09\u4E8E1959\u5E74\u63D0\u51FA\u7684\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\u3002\u5E0C\u5C14\u6392\u5E8F\u4E5F\u662F\u4E00\u79CD\u63D2\u5165\u6392\u5E8F\uFF0C\u5B83\u662F\u7B80\u5355\u63D2\u5165\u6392\u5E8F\u7ECF\u8FC7\u6539\u8FDB\u4E4B\u540E\u7684\u4E00\u4E2A\u66F4\u9AD8\u6548\u7684\u7248\u672C\uFF0C\u4E5F\u79F0\u4E3A\u7F29\u5C0F\u589E\u91CF\u6392\u5E8F\uFF0C\u540C\u65F6\u8BE5\u7B97\u6CD5\u662F\u51B2\u7834O(n2\uFF09\u7684\u7B2C\u4E00\u6279\u7B97\u6CD5\u4E4B\u4E00\u3002\u5B83\u4E0E\u63D2\u5165\u6392\u5E8F\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\uFF0C\u5B83\u4F1A\u4F18\u5148\u6BD4\u8F83\u8DDD\u79BB\u8F83\u8FDC\u7684\u5143\u7D20\u3002\u5E0C\u5C14\u6392\u5E8F\u53C8\u53EB\u7F29\u5C0F\u589E\u91CF\u6392\u5E8F\u3002</p><p>\u5E0C\u5C14\u6392\u5E8F\u662F\u628A\u8BB0\u5F55\u6309\u4E0B\u8868\u7684\u4E00\u5B9A\u589E\u91CF\u5206\u7EC4\uFF0C\u5BF9\u6BCF\u7EC4\u4F7F\u7528\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u7B97\u6CD5\u6392\u5E8F\uFF1B\u968F\u7740\u589E\u91CF\u9010\u6E10\u51CF\u5C11\uFF0C\u6BCF\u7EC4\u5305\u542B\u7684\u5173\u952E\u8BCD\u8D8A\u6765\u8D8A\u591A\uFF0C\u5F53\u589E\u91CF\u51CF\u81F31\u65F6\uFF0C\u6574\u4E2A\u6587\u4EF6\u6070\u88AB\u5206\u6210\u4E00\u7EC4\uFF0C\u7B97\u6CD5\u4FBF\u7EC8\u6B62\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-3" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-3" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><p>\u6211\u4EEC\u6765\u770B\u4E0B\u5E0C\u5C14\u6392\u5E8F\u7684\u57FA\u672C\u6B65\u9AA4\uFF0C\u5728\u6B64\u6211\u4EEC\u9009\u62E9\u589E\u91CFgap=length/2\uFF0C\u7F29\u5C0F\u589E\u91CF\u7EE7\u7EED\u4EE5gap = gap/2\u7684\u65B9\u5F0F\uFF0C\u8FD9\u79CD\u589E\u91CF\u9009\u62E9\u6211\u4EEC\u53EF\u4EE5\u7528\u4E00\u4E2A\u5E8F\u5217\u6765\u8868\u793A\uFF0C{n/2,(n/2)/2...1}\uFF0C\u79F0\u4E3A\u589E\u91CF\u5E8F\u5217\u3002\u5E0C\u5C14\u6392\u5E8F\u7684\u589E\u91CF\u5E8F\u5217\u7684\u9009\u62E9\u4E0E\u8BC1\u660E\u662F\u4E2A\u6570\u5B66\u96BE\u9898\uFF0C\u6211\u4EEC\u9009\u62E9\u7684\u8FD9\u4E2A\u589E\u91CF\u5E8F\u5217\u662F\u6BD4\u8F83\u5E38\u7528\u7684\uFF0C\u4E5F\u662F\u5E0C\u5C14\u5EFA\u8BAE\u7684\u589E\u91CF\uFF0C\u79F0\u4E3A\u5E0C\u5C14\u589E\u91CF\uFF0C\u4F46\u5176\u5B9E\u8FD9\u4E2A\u589E\u91CF\u5E8F\u5217\u4E0D\u662F\u6700\u4F18\u7684\u3002\u6B64\u5904\u6211\u4EEC\u505A\u793A\u4F8B\u4F7F\u7528\u5E0C\u5C14\u589E\u91CF\u3002</p><p>\u5148\u5C06\u6574\u4E2A\u5F85\u6392\u5E8F\u7684\u8BB0\u5F55\u5E8F\u5217\u5206\u5272\u6210\u4E3A\u82E5\u5E72\u5B50\u5E8F\u5217\u5206\u522B\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\uFF0C\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\uFF1A</p><ul><li>\u9009\u62E9\u4E00\u4E2A\u589E\u91CF\u5E8F\u5217t1\uFF0Ct2\uFF0C\u2026\uFF0Ctk\uFF0C\u5176\u4E2Dti&gt;tj\uFF0Ctk=1\uFF1B</li><li>\u6309\u589E\u91CF\u5E8F\u5217\u4E2A\u6570k\uFF0C\u5BF9\u5E8F\u5217\u8FDB\u884Ck \u8D9F\u6392\u5E8F\uFF1B</li><li>\u6BCF\u8D9F\u6392\u5E8F\uFF0C\u6839\u636E\u5BF9\u5E94\u7684\u589E\u91CFti\uFF0C\u5C06\u5F85\u6392\u5E8F\u5217\u5206\u5272\u6210\u82E5\u5E72\u957F\u5EA6\u4E3Am \u7684\u5B50\u5E8F\u5217\uFF0C\u5206\u522B\u5BF9\u5404\u5B50\u8868\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u3002\u4EC5\u589E\u91CF\u56E0\u5B50\u4E3A1 \u65F6\uFF0C\u6574\u4E2A\u5E8F\u5217\u4F5C\u4E3A\u4E00\u4E2A\u8868\u6765\u5904\u7406\uFF0C\u8868\u957F\u5EA6\u5373\u4E3A\u6574\u4E2A\u5E8F\u5217\u7684\u957F\u5EA6\u3002</li></ul><p><img src="`+i+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u5E0C\u5C14\u6392\u5E8F
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">ShellSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> temp<span class="token punctuation">,</span> gap <span class="token operator">=</span> len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> preIndex <span class="token operator">=</span> i <span class="token operator">-</span> gap<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
                preIndex <span class="token operator">-=</span> gap<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        gap <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(nlog<sub>2</sub> n) \u6700\u574F\u60C5\u51B5\uFF1AT(n) = O(nlog<sub>2</sub> n) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) =O(nlog<sub>2</sub>n)</p><h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h2><p>\u548C\u9009\u62E9\u6392\u5E8F\u4E00\u6837\uFF0C\u5F52\u5E76\u6392\u5E8F\u7684\u6027\u80FD\u4E0D\u53D7\u8F93\u5165\u6570\u636E\u7684\u5F71\u54CD\uFF0C\u4F46\u8868\u73B0\u6BD4\u9009\u62E9\u6392\u5E8F\u597D\u7684\u591A\uFF0C\u56E0\u4E3A\u59CB\u7EC8\u90FD\u662FO(n log n\uFF09\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u4EE3\u4EF7\u662F\u9700\u8981\u989D\u5916\u7684\u5185\u5B58\u7A7A\u95F4\u3002</p><p>\u5F52\u5E76\u6392\u5E8F\u662F\u5EFA\u7ACB\u5728\u5F52\u5E76\u64CD\u4F5C\u4E0A\u7684\u4E00\u79CD\u6709\u6548\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u8BE5\u7B97\u6CD5\u662F\u91C7\u7528\u5206\u6CBB\u6CD5\uFF08Divide and Conquer\uFF09\u7684\u4E00\u4E2A\u975E\u5E38\u5178\u578B\u7684\u5E94\u7528\u3002\u5F52\u5E76\u6392\u5E8F\u662F\u4E00\u79CD\u7A33\u5B9A\u7684\u6392\u5E8F\u65B9\u6CD5\u3002\u5C06\u5DF2\u6709\u5E8F\u7684\u5B50\u5E8F\u5217\u5408\u5E76\uFF0C\u5F97\u5230\u5B8C\u5168\u6709\u5E8F\u7684\u5E8F\u5217\uFF1B\u5373\u5148\u4F7F\u6BCF\u4E2A\u5B50\u5E8F\u5217\u6709\u5E8F\uFF0C\u518D\u4F7F\u5B50\u5E8F\u5217\u6BB5\u95F4\u6709\u5E8F\u3002\u82E5\u5C06\u4E24\u4E2A\u6709\u5E8F\u8868\u5408\u5E76\u6210\u4E00\u4E2A\u6709\u5E8F\u8868\uFF0C\u79F0\u4E3A2-\u8DEF\u5F52\u5E76\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-4" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-4" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><ul><li>\u628A\u957F\u5EA6\u4E3An\u7684\u8F93\u5165\u5E8F\u5217\u5206\u6210\u4E24\u4E2A\u957F\u5EA6\u4E3An/2\u7684\u5B50\u5E8F\u5217\uFF1B</li><li>\u5BF9\u8FD9\u4E24\u4E2A\u5B50\u5E8F\u5217\u5206\u522B\u91C7\u7528\u5F52\u5E76\u6392\u5E8F\uFF1B</li><li>\u5C06\u4E24\u4E2A\u6392\u5E8F\u597D\u7684\u5B50\u5E8F\u5217\u5408\u5E76\u6210\u4E00\u4E2A\u6700\u7EC8\u7684\u6392\u5E8F\u5E8F\u5217\u3002</li></ul><p><img src="`+u+'" alt="" loading="lazy"></p><p><img src="'+r+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u5F52\u5E76\u6392\u5E8F
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">MergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token keyword">int</span> mid <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> left <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> right <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">MergeSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MergeSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
    * \u5F52\u5E76\u6392\u5E8F\u2014\u2014\u5C06\u4E24\u6BB5\u6392\u5E8F\u597D\u7684\u6570\u7EC4\u7ED3\u5408\u6210\u4E00\u4E2A\u6392\u5E8F\u6570\u7EC4
    *
    * <span class="token keyword">@param</span> <span class="token parameter">left</span>
    * <span class="token keyword">@param</span> <span class="token parameter">right</span>
    * <span class="token keyword">@return</span>
    */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>left<span class="token punctuation">.</span>length <span class="token operator">+</span> right<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> result<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> left<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
            result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> right<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
            result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> left<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> right<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
            result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> right<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            result<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> left<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(nlogn) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(nlogn)</p><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h2><p>\u5FEB\u901F\u6392\u5E8F\u7684\u57FA\u672C\u601D\u60F3\uFF1A\u901A\u8FC7\u4E00\u8D9F\u6392\u5E8F\u5C06\u5F85\u6392\u8BB0\u5F55\u5206\u9694\u6210\u72EC\u7ACB\u7684\u4E24\u90E8\u5206\uFF0C\u5176\u4E2D\u4E00\u90E8\u5206\u8BB0\u5F55\u7684\u5173\u952E\u5B57\u5747\u6BD4\u53E6\u4E00\u90E8\u5206\u7684\u5173\u952E\u5B57\u5C0F\uFF0C\u5219\u53EF\u5206\u522B\u5BF9\u8FD9\u4E24\u90E8\u5206\u8BB0\u5F55\u7EE7\u7EED\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EE5\u8FBE\u5230\u6574\u4E2A\u5E8F\u5217\u6709\u5E8F\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-5" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><p>\u5FEB\u901F\u6392\u5E8F\u4F7F\u7528\u5206\u6CBB\u6CD5\u6765\u628A\u4E00\u4E2A\u4E32\uFF08list\uFF09\u5206\u4E3A\u4E24\u4E2A\u5B50\u4E32\uFF08sub-lists\uFF09\u3002\u5177\u4F53\u7B97\u6CD5\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><ul><li>\u4ECE\u6570\u5217\u4E2D\u6311\u51FA\u4E00\u4E2A\u5143\u7D20\uFF0C\u79F0\u4E3A \u201C\u57FA\u51C6\u201D\uFF08pivot\uFF09\uFF1B</li><li>\u91CD\u65B0\u6392\u5E8F\u6570\u5217\uFF0C\u6240\u6709\u5143\u7D20\u6BD4\u57FA\u51C6\u503C\u5C0F\u7684\u6446\u653E\u5728\u57FA\u51C6\u524D\u9762\uFF0C\u6240\u6709\u5143\u7D20\u6BD4\u57FA\u51C6\u503C\u5927\u7684\u6446\u5728\u57FA\u51C6\u7684\u540E\u9762\uFF08\u76F8\u540C\u7684\u6570\u53EF\u4EE5\u5230\u4EFB\u4E00\u8FB9\uFF09\u3002\u5728\u8FD9\u4E2A\u5206\u533A\u9000\u51FA\u4E4B\u540E\uFF0C\u8BE5\u57FA\u51C6\u5C31\u5904\u4E8E\u6570\u5217\u7684\u4E2D\u95F4\u4F4D\u7F6E\u3002\u8FD9\u4E2A\u79F0\u4E3A\u5206\u533A\uFF08partition\uFF09\u64CD\u4F5C\uFF1B</li><li>\u9012\u5F52\u5730\uFF08recursive\uFF09\u628A\u5C0F\u4E8E\u57FA\u51C6\u503C\u5143\u7D20\u7684\u5B50\u6570\u5217\u548C\u5927\u4E8E\u57FA\u51C6\u503C\u5143\u7D20\u7684\u5B50\u6570\u5217\u6392\u5E8F\u3002</li></ul><p><img src="`+k+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u5FEB\u901F\u6392\u5E8F\u65B9\u6CD5
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@param</span> <span class="token parameter">start</span>
* <span class="token keyword">@param</span> <span class="token parameter">end</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">QuickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> start <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> end <span class="token operator">&gt;=</span> array<span class="token punctuation">.</span>length <span class="token operator">||</span> start <span class="token operator">&gt;</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> smallIndex <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallIndex <span class="token operator">&gt;</span> start<span class="token punctuation">)</span>
        <span class="token class-name">QuickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> start<span class="token punctuation">,</span> smallIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallIndex <span class="token operator">&lt;</span> end<span class="token punctuation">)</span>
        <span class="token class-name">QuickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> smallIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
* \u5FEB\u901F\u6392\u5E8F\u7B97\u6CD5\u2014\u2014partition
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@param</span> <span class="token parameter">start</span>
* <span class="token keyword">@param</span> <span class="token parameter">end</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> pivot <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> smallIndex <span class="token operator">=</span> start <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> pivot<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> array<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            smallIndex<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> smallIndex<span class="token punctuation">)</span>
                <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> smallIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token keyword">return</span> smallIndex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
* \u4EA4\u6362\u6570\u7EC4\u5185\u4E24\u4E2A\u5143\u7D20
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@param</span> <span class="token parameter">i</span>
* <span class="token keyword">@param</span> <span class="token parameter">j</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(nlogn) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(n<sup>2</sup>) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(nlogn)</p><h2 id="\u5806\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5806\u6392\u5E8F" aria-hidden="true">#</a> \u5806\u6392\u5E8F</h2><p>\u5806\u6392\u5E8F\uFF08Heapsort\uFF09\u662F\u6307\u5229\u7528\u5806\u8FD9\u79CD\u6570\u636E\u7ED3\u6784\u6240\u8BBE\u8BA1\u7684\u4E00\u79CD\u6392\u5E8F\u7B97\u6CD5\u3002\u5806\u79EF\u662F\u4E00\u4E2A\u8FD1\u4F3C\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u7ED3\u6784\uFF0C\u5E76\u540C\u65F6\u6EE1\u8DB3\u5806\u79EF\u7684\u6027\u8D28\uFF1A\u5373\u5B50\u7ED3\u70B9\u7684\u952E\u503C\u6216\u7D22\u5F15\u603B\u662F\u5C0F\u4E8E\uFF08\u6216\u8005\u5927\u4E8E\uFF09\u5B83\u7684\u7236\u8282\u70B9\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-6" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-6" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><ul><li>\u5C06\u521D\u59CB\u5F85\u6392\u5E8F\u5173\u952E\u5B57\u5E8F\u5217<code>(R1,R2\u2026.Rn)</code>\u6784\u5EFA\u6210\u5927\u9876\u5806\uFF0C\u6B64\u5806\u4E3A\u521D\u59CB\u7684\u65E0\u5E8F\u533A\uFF1B</li><li>\u5C06\u5806\u9876\u5143\u7D20<code>R[1]</code>\u4E0E\u6700\u540E\u4E00\u4E2A\u5143\u7D20<code>R[n]</code>\u4EA4\u6362\uFF0C\u6B64\u65F6\u5F97\u5230\u65B0\u7684\u65E0\u5E8F\u533A<code>(R1,R2,\u2026\u2026Rn-1)</code>\u548C\u65B0\u7684\u6709\u5E8F\u533A<code>(Rn)</code>,\u4E14\u6EE1\u8DB3<code>R[1,2\u2026n-1]&lt;=R[n]</code>\uFF1B</li><li>\u7531\u4E8E\u4EA4\u6362\u540E\u65B0\u7684\u5806\u9876<code>R[1]</code>\u53EF\u80FD\u8FDD\u53CD\u5806\u7684\u6027\u8D28\uFF0C\u56E0\u6B64\u9700\u8981\u5BF9<code>\u5F53\u524D\u65E0\u5E8F\u533A(R1,R2,\u2026\u2026Rn-1)\u8C03\u6574\u4E3A\u65B0\u5806</code>\uFF0C\u7136\u540E\u518D\u6B21\u5C06<code>R[1]</code>\u4E0E\u65E0\u5E8F\u533A\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4EA4\u6362\uFF0C\u5F97\u5230\u65B0\u7684\u65E0\u5E8F\u533A<code>(R1,R2\u2026.Rn-2)</code>\u548C\u65B0\u7684\u6709\u5E8F\u533A<code>(Rn-1,Rn)</code>\u3002\u4E0D\u65AD\u91CD\u590D\u6B64\u8FC7\u7A0B\u76F4\u5230\u6709\u5E8F\u533A\u7684\u5143\u7D20\u4E2A\u6570\u4E3An-1\uFF0C\u5219\u6574\u4E2A\u6392\u5E8F\u8FC7\u7A0B\u5B8C\u6210\u3002</li></ul><p><img src="`+d+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u58F0\u660E\u5168\u5C40\u53D8\u91CF\uFF0C\u7528\u4E8E\u8BB0\u5F55\u6570\u7EC4array\u7684\u957F\u5EA6\uFF1B</span>
<span class="token keyword">static</span> <span class="token keyword">int</span> len<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
* \u5806\u6392\u5E8F\u7B97\u6CD5
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">HeapSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token comment">//1.\u6784\u5EFA\u4E00\u4E2A\u6700\u5927\u5806</span>
    <span class="token function">buildMaxHeap</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//2.\u5FAA\u73AF\u5C06\u5806\u9996\u4F4D\uFF08\u6700\u5927\u503C\uFF09\u4E0E\u672B\u4F4D\u4EA4\u6362\uFF0C\u7136\u540E\u5728\u91CD\u65B0\u8C03\u6574\u6700\u5927\u5806</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>len <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        len<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token function">adjustHeap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
* \u5EFA\u7ACB\u6700\u5927\u5806
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildMaxHeap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u4ECE\u6700\u540E\u4E00\u4E2A\u975E\u53F6\u5B50\u8282\u70B9\u5F00\u59CB\u5411\u4E0A\u6784\u9020\u6700\u5927\u5806</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>len<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u611F\u8C22 @\u8BA9\u6211\u53D1\u4F1A\u5446 \u7F51\u53CB\u7684\u63D0\u9192\uFF0C\u6B64\u5904\u5E94\u8BE5\u4E3A i = (len/2 - 1) </span>
        <span class="token function">adjustHeap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token doc-comment comment">/**
* \u8C03\u6574\u4F7F\u4E4B\u6210\u4E3A\u6700\u5927\u5806
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@param</span> <span class="token parameter">i</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">adjustHeap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> maxIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token comment">//\u5982\u679C\u6709\u5DE6\u5B50\u6811\uFF0C\u4E14\u5DE6\u5B50\u6811\u5927\u4E8E\u7236\u8282\u70B9\uFF0C\u5219\u5C06\u6700\u5927\u6307\u9488\u6307\u5411\u5DE6\u5B50\u6811</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">&lt;</span> len <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>maxIndex<span class="token punctuation">]</span><span class="token punctuation">)</span>
        maxIndex <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5982\u679C\u6709\u53F3\u5B50\u6811\uFF0C\u4E14\u53F3\u5B50\u6811\u5927\u4E8E\u7236\u8282\u70B9\uFF0C\u5219\u5C06\u6700\u5927\u6307\u9488\u6307\u5411\u53F3\u5B50\u6811</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> len <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> array<span class="token punctuation">[</span>maxIndex<span class="token punctuation">]</span><span class="token punctuation">)</span>
        maxIndex <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5982\u679C\u7236\u8282\u70B9\u4E0D\u662F\u6700\u5927\u503C\uFF0C\u5219\u5C06\u7236\u8282\u70B9\u4E0E\u6700\u5927\u503C\u4EA4\u6362\uFF0C\u5E76\u4E14\u9012\u5F52\u8C03\u6574\u4E0E\u7236\u8282\u70B9\u4EA4\u6362\u7684\u4F4D\u7F6E\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>maxIndex <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> maxIndex<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">adjustHeap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> maxIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(nlogn) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(nlogn) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(nlogn)</p><h2 id="\u8BA1\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u8BA1\u6570\u6392\u5E8F</h2><p>\u8BA1\u6570\u6392\u5E8F\u7684\u6838\u5FC3\u5728\u4E8E\u5C06\u8F93\u5165\u7684\u6570\u636E\u503C\u8F6C\u5316\u4E3A\u952E\u5B58\u50A8\u5728\u989D\u5916\u5F00\u8F9F\u7684\u6570\u7EC4\u7A7A\u95F4\u4E2D\u3002 \u4F5C\u4E3A\u4E00\u79CD\u7EBF\u6027\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u6392\u5E8F\uFF0C\u8BA1\u6570\u6392\u5E8F\u8981\u6C42\u8F93\u5165\u7684\u6570\u636E\u5FC5\u987B\u662F\u6709\u786E\u5B9A\u8303\u56F4\u7684\u6574\u6570\u3002</p><p>\u8BA1\u6570\u6392\u5E8F(Counting sort)\u662F\u4E00\u79CD\u7A33\u5B9A\u7684\u6392\u5E8F\u7B97\u6CD5\u3002\u8BA1\u6570\u6392\u5E8F\u4F7F\u7528\u4E00\u4E2A\u989D\u5916\u7684\u6570\u7EC4C\uFF0C\u5176\u4E2D\u7B2Ci\u4E2A\u5143\u7D20\u662F\u5F85\u6392\u5E8F\u6570\u7EC4A\u4E2D\u503C\u7B49\u4E8Ei\u7684\u5143\u7D20\u7684\u4E2A\u6570\u3002\u7136\u540E\u6839\u636E\u6570\u7EC4C\u6765\u5C06A\u4E2D\u7684\u5143\u7D20\u6392\u5230\u6B63\u786E\u7684\u4F4D\u7F6E\u3002\u5B83\u53EA\u80FD\u5BF9\u6574\u6570\u8FDB\u884C\u6392\u5E8F\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-7" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-7" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><ul><li>\u627E\u51FA\u5F85\u6392\u5E8F\u7684\u6570\u7EC4\u4E2D\u6700\u5927\u548C\u6700\u5C0F\u7684\u5143\u7D20\uFF1B</li><li>\u7EDF\u8BA1\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u503C\u4E3Ai\u7684\u5143\u7D20\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5B58\u5165\u6570\u7EC4C\u7684\u7B2Ci\u9879\uFF1B</li><li>\u5BF9\u6240\u6709\u7684\u8BA1\u6570\u7D2F\u52A0\uFF08\u4ECEC\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u6BCF\u4E00\u9879\u548C\u524D\u4E00\u9879\u76F8\u52A0\uFF09\uFF1B</li><li>\u53CD\u5411\u586B\u5145\u76EE\u6807\u6570\u7EC4\uFF1A\u5C06\u6BCF\u4E2A\u5143\u7D20i\u653E\u5728\u65B0\u6570\u7EC4\u7684\u7B2CC(i)\u9879\uFF0C\u6BCF\u653E\u4E00\u4E2A\u5143\u7D20\u5C31\u5C06C(i)\u51CF\u53BB1\u3002</li></ul><p><img src="`+v+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u8BA1\u6570\u6392\u5E8F
*
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">CountingSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token keyword">int</span> bias<span class="token punctuation">,</span> min <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> max<span class="token punctuation">)</span>
            max <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> min<span class="token punctuation">)</span>
            min <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    bias <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">-</span> min<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>bucket<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucket<span class="token punctuation">[</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> bias<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">-</span> bias<span class="token punctuation">;</span>
            bucket<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
            index<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u8F93\u5165\u7684\u5143\u7D20\u662Fn \u4E2A0\u5230k\u4E4B\u95F4\u7684\u6574\u6570\u65F6\uFF0C\u5B83\u7684\u8FD0\u884C\u65F6\u95F4\u662F O(n + k)\u3002\u8BA1\u6570\u6392\u5E8F\u4E0D\u662F\u6BD4\u8F83\u6392\u5E8F\uFF0C\u6392\u5E8F\u7684\u901F\u5EA6\u5FEB\u4E8E\u4EFB\u4F55\u6BD4\u8F83\u6392\u5E8F\u7B97\u6CD5\u3002\u7531\u4E8E\u7528\u6765\u8BA1\u6570\u7684\u6570\u7EC4C\u7684\u957F\u5EA6\u53D6\u51B3\u4E8E\u5F85\u6392\u5E8F\u6570\u7EC4\u4E2D\u6570\u636E\u7684\u8303\u56F4\uFF08\u7B49\u4E8E\u5F85\u6392\u5E8F\u6570\u7EC4\u7684\u6700\u5927\u503C\u4E0E\u6700\u5C0F\u503C\u7684\u5DEE\u52A0\u4E0A1\uFF09\uFF0C\u8FD9\u4F7F\u5F97\u8BA1\u6570\u6392\u5E8F\u5BF9\u4E8E\u6570\u636E\u8303\u56F4\u5F88\u5927\u7684\u6570\u7EC4\uFF0C\u9700\u8981\u5927\u91CF\u65F6\u95F4\u548C\u5185\u5B58\u3002</p><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n+k) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(n+k) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(n+k)</p><h2 id="\u6876\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6876\u6392\u5E8F" aria-hidden="true">#</a> \u6876\u6392\u5E8F</h2><p>\u6876\u6392\u5E8F\u662F\u8BA1\u6570\u6392\u5E8F\u7684\u5347\u7EA7\u7248\u3002\u5B83\u5229\u7528\u4E86\u51FD\u6570\u7684\u6620\u5C04\u5173\u7CFB\uFF0C\u9AD8\u6548\u4E0E\u5426\u7684\u5173\u952E\u5C31\u5728\u4E8E\u8FD9\u4E2A\u6620\u5C04\u51FD\u6570\u7684\u786E\u5B9A\u3002</p><p>\u6876\u6392\u5E8F (Bucket sort)\u7684\u5DE5\u4F5C\u7684\u539F\u7406\uFF1A\u5047\u8BBE\u8F93\u5165\u6570\u636E\u670D\u4ECE\u5747\u5300\u5206\u5E03\uFF0C\u5C06\u6570\u636E\u5206\u5230\u6709\u9650\u6570\u91CF\u7684\u6876\u91CC\uFF0C\u6BCF\u4E2A\u6876\u518D\u5206\u522B\u6392\u5E8F\uFF08\u6709\u53EF\u80FD\u518D\u4F7F\u7528\u522B\u7684\u6392\u5E8F\u7B97\u6CD5\u6216\u662F\u4EE5\u9012\u5F52\u65B9\u5F0F\u7EE7\u7EED\u4F7F\u7528\u6876\u6392\u5E8F\u8FDB\u884C\u6392</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-8" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-8" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><ul><li>\u4EBA\u4E3A\u8BBE\u7F6E\u4E00\u4E2ABucketSize\uFF0C\u4F5C\u4E3A\u6BCF\u4E2A\u6876\u6240\u80FD\u653E\u7F6E\u591A\u5C11\u4E2A\u4E0D\u540C\u6570\u503C\uFF08\u4F8B\u5982\u5F53BucketSize==5\u65F6\uFF0C\u8BE5\u6876\u53EF\u4EE5\u5B58\u653E\uFF5B1,2,3,4,5\uFF5D\u8FD9\u51E0\u79CD\u6570\u5B57\uFF0C\u4F46\u662F\u5BB9\u91CF\u4E0D\u9650\uFF0C\u5373\u53EF\u4EE5\u5B58\u653E100\u4E2A3\uFF09\uFF1B</li><li>\u904D\u5386\u8F93\u5165\u6570\u636E\uFF0C\u5E76\u4E14\u628A\u6570\u636E\u4E00\u4E2A\u4E00\u4E2A\u653E\u5230\u5BF9\u5E94\u7684\u6876\u91CC\u53BB\uFF1B</li><li>\u5BF9\u6BCF\u4E2A\u4E0D\u662F\u7A7A\u7684\u6876\u8FDB\u884C\u6392\u5E8F\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5176\u5B83\u6392\u5E8F\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u9012\u5F52\u4F7F\u7528\u6876\u6392\u5E8F\uFF1B</li><li>\u4ECE\u4E0D\u662F\u7A7A\u7684\u6876\u91CC\u628A\u6392\u597D\u5E8F\u7684\u6570\u636E\u62FC\u63A5\u8D77\u6765\u3002</li></ul><p>\u6CE8\u610F\uFF0C\u5982\u679C\u9012\u5F52\u4F7F\u7528\u6876\u6392\u5E8F\u4E3A\u5404\u4E2A\u6876\u6392\u5E8F\uFF0C\u5219\u5F53\u6876\u6570\u91CF\u4E3A1\u65F6\u8981\u624B\u52A8\u51CF\u5C0FBucketSize\u589E\u52A0\u4E0B\u4E00\u5FAA\u73AF\u6876\u7684\u6570\u91CF\uFF0C\u5426\u5219\u4F1A\u9677\u5165\u6B7B\u5FAA\u73AF\uFF0C\u5BFC\u81F4\u5185\u5B58\u6EA2\u51FA\u3002</p><p><img src="`+m+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u6876\u6392\u5E8F
* 
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@param</span> <span class="token parameter">bucketSize</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">BucketSort</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> array<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> min <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u627E\u5230\u6700\u5927\u503C\u6700\u5C0F\u503C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&gt;</span> max<span class="token punctuation">)</span>
            max <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;</span> min<span class="token punctuation">)</span>
            min <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> bucketCount <span class="token operator">=</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">/</span> bucketSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> bucketArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>bucketCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> resultArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucketCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketArr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketArr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">/</span> bucketSize<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bucketCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bucketSize <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5E26\u6392\u5E8F\u6570\u7EC4\u4E2D\u6709\u91CD\u590D\u6570\u5B57\u65F6  \u611F\u8C22 @\u89C1\u98CE\u4EFB\u7136\u662F\u98CE \u670B\u53CB\u6307\u51FA\u9519\u8BEF</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> bucketArr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
                resultArr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bucketArr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>bucketCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
                bucketSize<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> temp <span class="token operator">=</span> <span class="token class-name">BucketSort</span><span class="token punctuation">(</span>bucketArr<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> bucketSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> temp<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
                resultArr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>temp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> resultArr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6876\u6392\u5E8F\u6700\u597D\u60C5\u51B5\u4E0B\u4F7F\u7528\u7EBF\u6027\u65F6\u95F4O(n)\uFF0C\u6876\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u53D6\u51B3\u4E0E\u5BF9\u5404\u4E2A\u6876\u4E4B\u95F4\u6570\u636E\u8FDB\u884C\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u56E0\u4E3A\u5176\u5B83\u90E8\u5206\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u4E3AO(n)\u3002\u5F88\u663E\u7136\uFF0C\u6876\u5212\u5206\u7684\u8D8A\u5C0F\uFF0C\u5404\u4E2A\u6876\u4E4B\u95F4\u7684\u6570\u636E\u8D8A\u5C11\uFF0C\u6392\u5E8F\u6240\u7528\u7684\u65F6\u95F4\u4E5F\u4F1A\u8D8A\u5C11\u3002\u4F46\u76F8\u5E94\u7684\u7A7A\u95F4\u6D88\u8017\u5C31\u4F1A\u589E\u5927\u3002</p><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n+k) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(n+k) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(n2)</p><h2 id="\u57FA\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u57FA\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u57FA\u6570\u6392\u5E8F</h2><p>\u57FA\u6570\u6392\u5E8F\u4E5F\u662F\u975E\u6BD4\u8F83\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u5BF9\u6BCF\u4E00\u4F4D\u8FDB\u884C\u6392\u5E8F\uFF0C\u4ECE\u6700\u4F4E\u4F4D\u5F00\u59CB\u6392\u5E8F\uFF0C\u590D\u6742\u5EA6\u4E3AO(kn),n\u4E3A\u6570\u7EC4\u957F\u5EA6\uFF0Ck\u4E3A\u6570\u7EC4\u4E2D\u7684\u6570\u7684\u6700\u5927\u7684\u4F4D\u6570\uFF1B</p><p>\u57FA\u6570\u6392\u5E8F\u662F\u6309\u7167\u4F4E\u4F4D\u5148\u6392\u5E8F\uFF0C\u7136\u540E\u6536\u96C6\uFF1B\u518D\u6309\u7167\u9AD8\u4F4D\u6392\u5E8F\uFF0C\u7136\u540E\u518D\u6536\u96C6\uFF1B\u4F9D\u6B21\u7C7B\u63A8\uFF0C\u76F4\u5230\u6700\u9AD8\u4F4D\u3002\u6709\u65F6\u5019\u6709\u4E9B\u5C5E\u6027\u662F\u6709\u4F18\u5148\u7EA7\u987A\u5E8F\u7684\uFF0C\u5148\u6309\u4F4E\u4F18\u5148\u7EA7\u6392\u5E8F\uFF0C\u518D\u6309\u9AD8\u4F18\u5148\u7EA7\u6392\u5E8F\u3002\u6700\u540E\u7684\u6B21\u5E8F\u5C31\u662F\u9AD8\u4F18\u5148\u7EA7\u9AD8\u7684\u5728\u524D\uFF0C\u9AD8\u4F18\u5148\u7EA7\u76F8\u540C\u7684\u4F4E\u4F18\u5148\u7EA7\u9AD8\u7684\u5728\u524D\u3002\u57FA\u6570\u6392\u5E8F\u57FA\u4E8E\u5206\u522B\u6392\u5E8F\uFF0C\u5206\u522B\u6536\u96C6\uFF0C\u6240\u4EE5\u662F\u7A33\u5B9A\u7684\u3002</p><h3 id="\u7B97\u6CD5\u63CF\u8FF0-9" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u63CF\u8FF0-9" aria-hidden="true">#</a> \u7B97\u6CD5\u63CF\u8FF0</h3><ul><li>\u53D6\u5F97\u6570\u7EC4\u4E2D\u7684\u6700\u5927\u6570\uFF0C\u5E76\u53D6\u5F97\u4F4D\u6570\uFF1B</li><li>arr\u4E3A\u539F\u59CB\u6570\u7EC4\uFF0C\u4ECE\u6700\u4F4E\u4F4D\u5F00\u59CB\u53D6\u6BCF\u4E2A\u4F4D\u7EC4\u6210radix\u6570\u7EC4\uFF1B</li><li>\u5BF9radix\u8FDB\u884C\u8BA1\u6570\u6392\u5E8F\uFF08\u5229\u7528\u8BA1\u6570\u6392\u5E8F\u9002\u7528\u4E8E\u5C0F\u8303\u56F4\u6570\u7684\u7279\u70B9\uFF09\uFF1B</li></ul><p><img src="`+b+`" alt="" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* \u57FA\u6570\u6392\u5E8F
* <span class="token keyword">@param</span> <span class="token parameter">array</span>
* <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">RadixSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token comment">// 1.\u5148\u7B97\u51FA\u6700\u5927\u6570\u7684\u4F4D\u6570\uFF1B</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> maxDigit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>max <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        maxDigit<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> div <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> bucketList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        bucketList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> maxDigit<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> mod <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">,</span> div <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">%</span> mod<span class="token punctuation">)</span> <span class="token operator">/</span> div<span class="token punctuation">;</span>
            bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> bucketList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                array<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
            bucketList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u4F73\u60C5\u51B5\uFF1AT(n) = O(n * k) \u6700\u5DEE\u60C5\u51B5\uFF1AT(n) = O(n * k) \u5E73\u5747\u60C5\u51B5\uFF1AT(n) = O(n * k)</p><p>\u57FA\u6570\u6392\u5E8F\u6709\u4E24\u79CD\u65B9\u6CD5:MSD \u4ECE\u9AD8\u4F4D\u5F00\u59CB\u8FDB\u884C\u6392\u5E8F LSD \u4ECE\u4F4E\u4F4D\u5F00\u59CB\u8FDB\u884C\u6392\u5E8F</p>`,96),g=[w];function h(f,x){return s(),a("div",null,g)}var I=n(y,[["render",h],["__file","\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5\u6700\u5F3A\u603B\u7ED3.html.vue"]]);export{I as default};
