import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,a as n}from"./app-DPxQZnZ9.js";const h={},l=n(`<h2 id="对象头形式" tabindex="-1"><a class="header-anchor" href="#对象头形式"><span>对象头形式</span></a></h2><p>JVM中对象头的方式有以下两种（以32位JVM为例）</p><h3 id="普通对象" tabindex="-1"><a class="header-anchor" href="#普通对象"><span>普通对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                     Object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Header</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bits)                  </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        Mark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bits)         </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Klass</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bits) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组对象" tabindex="-1"><a class="header-anchor" href="#数组对象"><span>数组对象</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                                 Object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Header</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">96</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bits)                         </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        Mark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(32bits)       </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Klass</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(32bits) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  array </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(32bits)  </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对象头的组成" tabindex="-1"><a class="header-anchor" href="#对象头的组成"><span>对象头的组成</span></a></h2><h3 id="mark-word" tabindex="-1"><a class="header-anchor" href="#mark-word"><span>Mark Word</span></a></h3><p>这部分主要用来存储对象自身的运行时数据，如hashcode、gc分代年龄等。mark word的位长度为JVM的一个Word大小，也就是说32位JVM的Mark word为32位，64位JVM为64位。 为了让一个字大小存储更多的信息，JVM将字的最低两个位设置为标记位，不同标记位下的Mark Word示意如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">                  Mark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Word</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bits)                  </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">       State        </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> identity_hashcode</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">25</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> biased_lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">       Normal       </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  thread</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">23</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> epoch</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> biased_lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">       Biased       </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">               ptr_to_lock_record</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">          |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Lightweight</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Locked </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">               ptr_to_heavyweight_monitor</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Heavyweight</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Locked </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">                                              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> lock</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Marked</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> GC   </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">           biased_lock          </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">         lock          </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">         state          </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">                0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">               |</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          01</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">          无锁           </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">                1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">               |</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          01</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">          偏向锁         </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">                                |</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          00</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">         轻量级锁        </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">                                |</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          10</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">         重量级锁        </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">                                |</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          11</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">           GC           </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">--------------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">----------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-|</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">------------------------</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>identity_hashcode：对象标识Hash码，采用延迟加载技术。当对象使用HashCode()计算后，并会将结果写到该对象头中。当对象被锁定时，该值会移动到线程Monitor中。</li><li>age：4位的Java对象年龄。在GC中，如果对象在Survivor区复制一次，年龄增加1。当对象达到设定的阈值时，将会晋升到老年代。默认情况下，并行GC的年龄阈值为15，并发GC的年龄阈值为6。由于age只有4位，所以最大值为15，这就是-XX:MaxTenuringThreshold选项最大值为15的原因。</li><li>biased_lock：偏向锁标记，为1时表示对象启用偏向锁，为0时表示对象没有偏向锁。</li><li>lock: 锁状态标记位，该标记的值不同，整个mark word表示的含义不同。</li><li>thread：持有偏向锁的线程ID和其他信息。这个线程ID并不是JVM分配的线程ID号，和Java Thread中的ID是两个概念。</li><li>epoch：偏向时间戳。</li><li>ptr_to_lock_record：指向栈中锁记录的指针。</li><li>ptr_to_heavyweight_monitor：指向线程Monitor的指针。</li></ul><h3 id="class-pointer" tabindex="-1"><a class="header-anchor" href="#class-pointer"><span>class pointer</span></a></h3><p>这一部分用于存储对象的类型指针，该指针指向它的类元数据，JVM通过这个指针确定对象是哪个类的实例。该指针的位长度为JVM的一个字大小，即32位的JVM为32位，64位的JVM为64位。<br> 如果应用的对象过多，使用64位的指针将浪费大量内存，统计而言，64位的JVM将会比32位的JVM多耗费50%的内存。为了节约内存可以使用选项<code>+UseCompressedOops</code>开启指针压缩，其中，oop即ordinary object pointer普通对象指针。开启该选项后，下列指针将压缩至32位：</p><ol><li>每个Class的属性指针（即静态变量）</li><li>每个对象的属性指针（即对象变量）</li><li>普通对象数组的每个元素指针</li></ol><p>当然，也不是所有的指针都会压缩，一些特殊类型的指针JVM不会优化，比如指向PermGen的Class对象指针(JDK8中指向元空间的Class对象指针)、本地变量、堆栈元素、入参、返回值和NULL指针等。</p><h3 id="array-length" tabindex="-1"><a class="header-anchor" href="#array-length"><span>array length</span></a></h3><p>如果对象是一个数组，那么对象头还需要有额外的空间用于存储数组的长度，这部分数据的长度也随着JVM架构的不同而不同：32位的JVM上，长度为32位；64位JVM则为64位。64位JVM如果开启+UseCompressedOops选项，该区域长度也将由64位压缩至32位。</p><h2 id="打印对象头" tabindex="-1"><a class="header-anchor" href="#打印对象头"><span>打印对象头</span></a></h2><blockquote><p>注：以下测试我本机是64位，无锁：unused:25 | identity_hashcode:31 | unused:1 | age:4 | biased_lock:1 | lock:2；偏向锁：thread:54 | epoch:2 | unused:1 | age:4 | biased_lock:1 | lock:2</p></blockquote><p>引入打印工具</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;org.openjdk.jol&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;jol-core&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;0.8&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> flag </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[] args){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">ClassLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">parseInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(a).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">toPrintable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">...A object internals:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      0     4           (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      4     4           (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      8     4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">     12     1   boolean A.flag                                    false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">     13     3           (loss due to the next object alignment)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Instance size: 16 bytes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Space losses: 0 bytes internal + 3 bytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">external</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 3 bytes total</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后两位是lock<code>01</code>，表示无锁或者是偏向锁。则倒数第三位是biased_lock<code>0</code>,标识当前对象无锁。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">00000</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    01</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>JVM启动时会进行一系列的复杂活动，比如装载配置，系统类初始化等等。在这个过程中会使用大量synchronized关键字对对象加锁，且这些锁大多数都不是偏向锁。为了减少初始化时间，JVM默认延时加载偏向锁。这个延时的时间大概为4s左右，具体时间因机器而异。当然我们也可以设置JVM参数 -XX:BiasedLockingStartupDelay=0 来取消延时加载偏向锁。</p></blockquote><p>修改代码：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[] args) throws InterruptedException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">ClassLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">parseInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(a).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">toPrintable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">...A object internals:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      0     4           (object header)                           05 00 00 00 (00000101 00000000 00000000 00000000) (5)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      4     4           (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      8     4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">     12     1   boolean A.flag                                    false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">     13     3           (loss due to the next object alignment)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Instance size: 16 bytes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Space losses: 0 bytes internal + 3 bytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">external</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 3 bytes total</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后两位是lock<code>01</code>，表示无锁或者是偏向锁。则倒数第三位是biased_lock<code>1</code>,标识当前对象可偏向(Thread的值还是0)。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">00000</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    01</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>前面说过，identity_hashcode对象标识Hash码，采用延迟加载技术。 修改代码</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">[] args) throws InterruptedException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Thread</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">identityHashCode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(a));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">ClassLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">parseInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(a).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">toPrintable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">777874839</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">A object internals:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> OFFSET  SIZE      TYPE DESCRIPTION                               VALUE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      0     4           (object header)                           01 97 6d 5d (00000001 10010111 01101101 01011101) (1567463169)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      4     4           (object header)                           2e 00 00 00 (00101110 00000000 00000000 00000000) (46)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">      8     4           (object header)                           93 c2 00 f8 (10010011 11000010 00000000 11111000) (-134167917)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">     12     1   boolean A.flag                                    false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">     13     3           (loss due to the next object alignment)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Instance size: 16 bytes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">Space losses: 0 bytes internal + 3 bytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">external</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> 3 bytes total</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>00000001</code>标识无锁状态 ,<code>777874839</code>十进制转二进制结果是<code>2e 5d 6d 97</code></p>`,40),k=[l];function e(t,p){return a(),i("div",null,k)}const g=s(h,[["render",e],["__file","打印Java对象头.html.vue"]]),y=JSON.parse('{"path":"/JAVA/%E6%89%93%E5%8D%B0Java%E5%AF%B9%E8%B1%A1%E5%A4%B4.html","title":"打印Java对象头","lang":"zh-CN","frontmatter":{"title":"打印Java对象头","date":"2021-01-26T00:00:00.000Z","category":"Java","description":"对象头形式 JVM中对象头的方式有以下两种（以32位JVM为例） 普通对象 数组对象 对象头的组成 Mark Word 这部分主要用来存储对象自身的运行时数据，如hashcode、gc分代年龄等。mark word的位长度为JVM的一个Word大小，也就是说32位JVM的Mark word为32位，64位JVM为64位。 为了让一个字大小存储更多的信息...","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/JAVA/%E6%89%93%E5%8D%B0Java%E5%AF%B9%E8%B1%A1%E5%A4%B4.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"打印Java对象头"}],["meta",{"property":"og:description","content":"对象头形式 JVM中对象头的方式有以下两种（以32位JVM为例） 普通对象 数组对象 对象头的组成 Mark Word 这部分主要用来存储对象自身的运行时数据，如hashcode、gc分代年龄等。mark word的位长度为JVM的一个Word大小，也就是说32位JVM的Mark word为32位，64位JVM为64位。 为了让一个字大小存储更多的信息..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T11:40:02.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:published_time","content":"2021-01-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T11:40:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"打印Java对象头\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T11:40:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"对象头形式","slug":"对象头形式","link":"#对象头形式","children":[{"level":3,"title":"普通对象","slug":"普通对象","link":"#普通对象","children":[]},{"level":3,"title":"数组对象","slug":"数组对象","link":"#数组对象","children":[]}]},{"level":2,"title":"对象头的组成","slug":"对象头的组成","link":"#对象头的组成","children":[{"level":3,"title":"Mark Word","slug":"mark-word","link":"#mark-word","children":[]},{"level":3,"title":"class pointer","slug":"class-pointer","link":"#class-pointer","children":[]},{"level":3,"title":"array length","slug":"array-length","link":"#array-length","children":[]}]},{"level":2,"title":"打印对象头","slug":"打印对象头","link":"#打印对象头","children":[]}],"git":{"createdTime":1719488402000,"updatedTime":1719488402000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":1}]},"readingTime":{"minutes":5.14,"words":1541},"filePathRelative":"JAVA/打印Java对象头.md","localizedDate":"2021年1月26日","excerpt":"<h2>对象头形式</h2>\\n<p>JVM中对象头的方式有以下两种（以32位JVM为例）</p>\\n<h3>普通对象</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\\">--------------------------------------------------------------</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">                     Object</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> Header</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> (</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">64</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> bits)                  </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\\">------------------------------------</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\\">------------------------</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">-|</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">        Mark</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> Word</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> (</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">32</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> bits)         </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">    Klass</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> Word</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> (</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">32</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> bits) </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\\">------------------------------------</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">|</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#ABB2BF\\">------------------------</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\">-|</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{g as comp,y as data};
