import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as o,d as a,a as n,e as s}from"./app.17aaeba5.js";var e="/assets/1.76a329c5.png";const l={},c=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 <code>nums</code> \u548C\u4E00\u4E2A\u76EE\u6807\u503C <code>target</code>\uFF0C\u8BF7\u4F60\u5728\u8BE5\u6570\u7EC4\u4E2D\u627E\u51FA\u548C\u4E3A\u76EE\u6807\u503C\u7684\u90A3 <strong>\u4E24\u4E2A</strong> \u6574\u6570\uFF0C\u5E76\u8FD4\u56DE\u4ED6\u4EEC\u7684\u6570\u7EC4\u4E0B\u6807\u3002</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE\u6BCF\u79CD\u8F93\u5165\u53EA\u4F1A\u5BF9\u5E94\u4E00\u4E2A\u7B54\u6848\u3002\u4F46\u662F\uFF0C\u6570\u7EC4\u4E2D\u540C\u4E00\u4E2A\u5143\u7D20\u4E0D\u80FD\u4F7F\u7528\u4E24\u904D\u3002</p><p><strong>\u793A\u4F8B:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A nums = [2, 7, 11, 15], target = 9

\u56E0\u4E3A nums[0] + nums[1] = 2 + 7 = 9
\u6240\u4EE5\u8FD4\u56DE [0, 1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u7684\u7B54\u6848\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>i<span class="token punctuation">,</span>j<span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C:</p><p><img src="`+e+`" alt="" loading="lazy"></p><p>\u5F88\u6162 \u56E0\u4E3A\u7528\u4E86\u4E24\u6B21\u6392\u5E8F\uFF0C\u6839\u636E\u9898\u610F\uFF0C\u4E00\u5B9A\u6709\u4E00\u4E2A\u7ED3\u679C\uFF0C\u90A3\u4E48\u628A\u6570\u503C\u548C\u7D22\u5F15\u653E\u5230HashMap\u91CC\uFF0C\u4E00\u6B21\u904D\u5386\u5C31\u53EF\u4EE5\u4E86</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> complement <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span><span class="token punctuation">,</span> i <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;No two sum solution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6790\uFF1A</p><h4 id="\u65B9\u6CD5\u4E00-\u66B4\u529B\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4E00-\u66B4\u529B\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5\u4E00\uFF1A\u66B4\u529B\u6CD5</h4><p>\u66B4\u529B\u6CD5\u5F88\u7B80\u5355\uFF0C\u904D\u5386\u6BCF\u4E2A\u5143\u7D20 x\uFF0C\u5E76\u67E5\u627E\u662F\u5426\u5B58\u5728\u4E00\u4E2A\u503C\u4E0E target\u2212x \u76F8\u7B49\u7684\u76EE\u6807\u5143\u7D20\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> i<span class="token punctuation">,</span> j <span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;No two sum solution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6\u5206\u6790\uFF1A</strong></p>`,15),u=n("ul",null,[n("li",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n^2)")])]),n("br"),s(" \u5BF9\u4E8E\u6BCF\u4E2A\u5143\u7D20\uFF0C\u6211\u4EEC\u8BD5\u56FE\u901A\u8FC7\u904D\u5386\u6570\u7EC4\u7684\u5176\u4F59\u90E8\u5206\u6765\u5BFB\u627E\u5B83\u6240\u5BF9\u5E94\u7684\u76EE\u6807\u5143\u7D20\uFF0C\u8FD9\u5C06\u8017\u8D39 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\u7684\u65F6\u95F4\u3002\u56E0\u6B64\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n^2)")])]),s("\u3002")])]),n("li",null,[n("p",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])]),s("\u3002")])])],-1),i=n("h4",{id:"\u65B9\u6CD5\u4E8C-\u4E24\u904D\u54C8\u5E0C\u8868",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65B9\u6CD5\u4E8C-\u4E24\u904D\u54C8\u5E0C\u8868","aria-hidden":"true"},"#"),s(" \u65B9\u6CD5\u4E8C\uFF1A\u4E24\u904D\u54C8\u5E0C\u8868")],-1),k=n("p",null,"\u4E3A\u4E86\u5BF9\u8FD0\u884C\u65F6\u95F4\u590D\u6742\u5EA6\u8FDB\u884C\u4F18\u5316\uFF0C\u6211\u4EEC\u9700\u8981\u4E00\u79CD\u66F4\u6709\u6548\u7684\u65B9\u6CD5\u6765\u68C0\u67E5\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u76EE\u6807\u5143\u7D20\u3002\u5982\u679C\u5B58\u5728\uFF0C\u6211\u4EEC\u9700\u8981\u627E\u51FA\u5B83\u7684\u7D22\u5F15\u3002\u4FDD\u6301\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u4E0E\u5176\u7D22\u5F15\u76F8\u4E92\u5BF9\u5E94\u7684\u6700\u597D\u65B9\u6CD5\u662F\u4EC0\u4E48\uFF1F\u54C8\u5E0C\u8868\u3002",-1),r=n("p",null,[s("\u901A\u8FC7\u4EE5\u7A7A\u95F4\u6362\u53D6\u901F\u5EA6\u7684\u65B9\u5F0F\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u67E5\u627E\u65F6\u95F4\u4ECE "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\u964D\u4F4E\u5230 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])]),s("\u3002\u54C8\u5E0C\u8868\u6B63\u662F\u4E3A\u6B64\u76EE\u7684\u800C\u6784\u5EFA\u7684\uFF0C\u5B83\u652F\u6301\u4EE5 "),n("em",null,"\u8FD1\u4F3C"),s(" \u6052\u5B9A\u7684\u65F6\u95F4\u8FDB\u884C\u5FEB\u901F\u67E5\u627E\u3002\u6211\u7528\u201C\u8FD1\u4F3C\u201D\u6765\u63CF\u8FF0\uFF0C\u662F\u56E0\u4E3A\u4E00\u65E6\u51FA\u73B0\u51B2\u7A81\uFF0C\u67E5\u627E\u7528\u65F6\u53EF\u80FD\u4F1A\u9000\u5316\u5230 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\u3002\u4F46\u53EA\u8981\u4F60\u4ED4\u7EC6\u5730\u6311\u9009\u54C8\u5E0C\u51FD\u6570\uFF0C\u5728\u54C8\u5E0C\u8868\u4E2D\u8FDB\u884C\u67E5\u627E\u7684\u7528\u65F6\u5E94\u5F53\u88AB\u644A\u9500\u4E3A "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])]),s("\u3002")],-1),m=n("p",null,[s("\u4E00\u4E2A\u7B80\u5355\u7684\u5B9E\u73B0\u4F7F\u7528\u4E86\u4E24\u6B21\u8FED\u4EE3\u3002\u5728\u7B2C\u4E00\u6B21\u8FED\u4EE3\u4E2D\uFF0C\u6211\u4EEC\u5C06\u6BCF\u4E2A\u5143\u7D20\u7684\u503C\u548C\u5B83\u7684\u7D22\u5F15\u6DFB\u52A0\u5230\u8868\u4E2D\u3002\u7136\u540E\uFF0C\u5728\u7B2C\u4E8C\u6B21\u8FED\u4EE3\u4E2D\uFF0C\u6211\u4EEC\u5C06\u68C0\u67E5\u6BCF\u4E2A\u5143\u7D20\u6240\u5BF9\u5E94\u7684\u76EE\u6807\u5143\u7D20\uFF08"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2212"),n("mi",null,"n"),n("mi",null,"u"),n("mi",null,"m"),n("mi",null,"s"),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"target - nums[i]")])]),s("\uFF09\u662F\u5426\u5B58\u5728\u4E8E\u8868\u4E2D\u3002\u6CE8\u610F\uFF0C\u8BE5\u76EE\u6807\u5143\u7D20\u4E0D\u80FD\u662F "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mi",null,"u"),n("mi",null,"m"),n("mi",null,"s"),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"nums[i]")])]),s("\u672C\u8EAB\uFF01")],-1),d=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> complement <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> i<span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;No two sum solution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6\u5206\u6790\uFF1A</strong></p>`,2),v=n("ul",null,[n("li",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\uFF0C"),n("br"),s(" \u6211\u4EEC\u628A\u5305\u542B\u6709 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])]),s("n \u4E2A\u5143\u7D20\u7684\u5217\u8868\u904D\u5386\u4E24\u6B21\u3002\u7531\u4E8E\u54C8\u5E0C\u8868\u5C06\u67E5\u627E\u65F6\u95F4\u7F29\u77ED\u5230 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])]),s("\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\u3002")])]),n("li",null,[n("p",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\uFF0C"),n("br"),s(" \u6240\u9700\u7684\u989D\u5916\u7A7A\u95F4\u53D6\u51B3\u4E8E\u54C8\u5E0C\u8868\u4E2D\u5B58\u50A8\u7684\u5143\u7D20\u6570\u91CF\uFF0C\u8BE5\u8868\u4E2D\u5B58\u50A8\u4E86 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])]),s("n \u4E2A\u5143\u7D20\u3002")])])],-1),w=a(`<hr><h4 id="\u65B9\u6CD5\u4E09-\u4E00\u904D\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4E09-\u4E00\u904D\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u65B9\u6CD5\u4E09\uFF1A\u4E00\u904D\u54C8\u5E0C\u8868</h4><p>\u4E8B\u5B9E\u8BC1\u660E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4E00\u6B21\u5B8C\u6210\u3002\u5728\u8FDB\u884C\u8FED\u4EE3\u5E76\u5C06\u5143\u7D20\u63D2\u5165\u5230\u8868\u4E2D\u7684\u540C\u65F6\uFF0C\u6211\u4EEC\u8FD8\u4F1A\u56DE\u8FC7\u5934\u6765\u68C0\u67E5\u8868\u4E2D\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u5F53\u524D\u5143\u7D20\u6240\u5BF9\u5E94\u7684\u76EE\u6807\u5143\u7D20\u3002\u5982\u679C\u5B83\u5B58\u5728\uFF0C\u90A3\u6211\u4EEC\u5DF2\u7ECF\u627E\u5230\u4E86\u5BF9\u5E94\u89E3\uFF0C\u5E76\u7ACB\u5373\u5C06\u5176\u8FD4\u56DE\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> complement <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>complement<span class="token punctuation">)</span><span class="token punctuation">,</span> i <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;No two sum solution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6\u5206\u6790\uFF1A</strong></p>`,5),g=n("ul",null,[n("li",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\uFF0C"),n("br"),s(" \u6211\u4EEC\u53EA\u904D\u5386\u4E86\u5305\u542B\u6709 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])]),s("n \u4E2A\u5143\u7D20\u7684\u5217\u8868\u4E00\u6B21\u3002\u5728\u8868\u4E2D\u8FDB\u884C\u7684\u6BCF\u6B21\u67E5\u627E\u53EA\u82B1\u8D39 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])]),s(" \u7684\u65F6\u95F4\u3002")])]),n("li",null,[n("p",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])]),s("\uFF0C"),n("br"),s(" \u6240\u9700\u7684\u989D\u5916\u7A7A\u95F4\u53D6\u51B3\u4E8E\u54C8\u5E0C\u8868\u4E2D\u5B58\u50A8\u7684\u5143\u7D20\u6570\u91CF\uFF0C\u8BE5\u8868\u6700\u591A\u9700\u8981\u5B58\u50A8 "),n("math",null,[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])]),s(" \u4E2A\u5143\u7D20\u3002")])])],-1),y=[c,u,i,k,r,m,d,v,w,g];function h(b,f){return p(),o("div",null,y)}var O=t(l,[["render",h],["__file","1-\u4E24\u6570\u4E4B\u548C.html.vue"]]);export{O as default};
