import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{d as s}from"./app.5c332ac6.js";const a={},p=s(`<p>\u7ED9\u51FA\u4E24\u4E2A <strong>\u975E\u7A7A</strong> \u7684\u94FE\u8868\u7528\u6765\u8868\u793A\u4E24\u4E2A\u975E\u8D1F\u7684\u6574\u6570\u3002\u5176\u4E2D\uFF0C\u5B83\u4EEC\u5404\u81EA\u7684\u4F4D\u6570\u662F\u6309\u7167 <strong>\u9006\u5E8F</strong> \u7684\u65B9\u5F0F\u5B58\u50A8\u7684\uFF0C\u5E76\u4E14\u5B83\u4EEC\u7684\u6BCF\u4E2A\u8282\u70B9\u53EA\u80FD\u5B58\u50A8 <strong>\u4E00\u4F4D</strong> \u6570\u5B57\u3002</p><p>\u5982\u679C\uFF0C\u6211\u4EEC\u5C06\u8FD9\u4E24\u4E2A\u6570\u76F8\u52A0\u8D77\u6765\uFF0C\u5219\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u94FE\u8868\u6765\u8868\u793A\u5B83\u4EEC\u7684\u548C\u3002</p><p>\u60A8\u53EF\u4EE5\u5047\u8BBE\u9664\u4E86\u6570\u5B57 0 \u4E4B\u5916\uFF0C\u8FD9\u4E24\u4E2A\u6570\u90FD\u4E0D\u4F1A\u4EE5 0 \u5F00\u5934\u3002</p><p><strong>\u793A\u4F8B\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1A(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)
\u8F93\u51FA\uFF1A7 -&gt; 0 -&gt; 8
\u539F\u56E0\uFF1A342 + 465 = 807
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u7684\u7B54\u6848\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Definition for singly-linked list.
 * public class ListNode <span class="token punctuation">{</span>
 *     int val;
 *     ListNode next;
 *     ListNode(int x) <span class="token punctuation">{</span> val = x; <span class="token punctuation">}</span>
 * <span class="token punctuation">}</span>
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> l1<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> l2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> header <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ListNode</span> list <span class="token operator">=</span> header<span class="token punctuation">;</span>
        <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> l1 <span class="token operator">||</span> <span class="token keyword">null</span> <span class="token operator">!=</span> l2<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">ListNode</span> sum <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> l1<span class="token punctuation">)</span><span class="token punctuation">{</span>
                sum <span class="token operator">=</span> l1<span class="token punctuation">;</span>
                x <span class="token operator">=</span> l1<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> l2<span class="token punctuation">)</span><span class="token punctuation">{</span>
                sum <span class="token operator">=</span> l2<span class="token punctuation">;</span>
                y <span class="token operator">=</span> l2<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            sum<span class="token punctuation">.</span>val <span class="token operator">=</span> x<span class="token operator">+</span>y<span class="token operator">+</span>carry<span class="token punctuation">;</span>
            carry <span class="token operator">=</span> sum<span class="token punctuation">.</span>val<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>
            sum<span class="token punctuation">.</span>val <span class="token operator">=</span> sum<span class="token punctuation">.</span>val<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>
            list<span class="token punctuation">.</span>next <span class="token operator">=</span> sum<span class="token punctuation">;</span>
            list <span class="token operator">=</span> list<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>carry <span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            list<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>carry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> header<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function t(e,o){return p}var i=n(a,[["render",t],["__file","2-\u4E24\u6570\u76F8\u52A0.html.vue"]]);export{i as default};
