import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as n,a as e}from"./app-DPxQZnZ9.js";const a={},l=e('<ol><li>【强制】错误码的制定原则：快速溯源、简单易记、沟通标准化。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>错误码想得过于完美和复杂，就像康熙字典中的生僻字一样，用词似乎精准，但是字典不容易随身携带并且简单易懂。</p></div><div class="hint-container tip"><p class="hint-container-title">正例</p><p>错误码回答的问题是谁的错？错在哪？</p><ul><li>1）错误码必须能够快速知晓错误来源，可快速判断是谁的问题。</li><li>2）错误码易于记忆和比对（代码中容易 equals）。</li><li>3）错误码能够脱离文档和系统平台达到线下轻量化地自由沟通的目的。</li></ul></div><ol start="2"><li>【强制】错误码不体现版本号和错误等级信息。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>错误码以不断追加的方式进行兼容。错误等级由日志和错误码本身的释义来决定。</p></div><ol start="3"><li>【强制】全部正常，但不得不填充错误码时返回五个零：00000。</li><li>【强制】错误码为字符串类型，共 5 位，分成两个部分：错误产生来源+四位数字编号。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>错误产生来源分为 A/B/C，A 表示错误来源于用户，比如参数错误，用户安装版本过低，用户支付超时等问题；B 表示错误来源于当前系统，往往是业务逻辑出错，或程序健壮性差等问题；C 表示错误来源 于第三方服务，比如 CDN 服务出错，消息投递超时等问题；四位数字编号从 0001 到 9999，大类之间的步长间距预留 100，参考文末附表 3。</p></div><ol start="5"><li>【强制】编号不与公司业务架构，更不与组织架构挂钩，一切与平台先到先申请的原则进行，审批生效，编号即被永久固定。</li><li>【强制】错误码使用者避免随意定义新的错误码。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>尽可能在原有错误码附表中找到语义相同或者相近的错误码在代码中使用即可。</p></div><ol start="7"><li>【强制】错误码不能直接输出给用户作为提示信息使用。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>堆栈（stack_trace）、错误信息(error_message)、错误码（error_code）、提示信息（user_tip）是一个有效关联并互相转义的和谐整体，但是请勿互相越俎代庖。</p></div><ol start="8"><li>【推荐】错误码之外的业务独特信息由 error_message 来承载，而不是让错误码本身涵盖过 多具体业务属性。</li><li>【推荐】在获取第三方服务错误码时，向上抛出允许本系统转义，由 C 转为 B，并且在错误信息上带上原有的第三方错误码。 10.【参考】错误码分为一级宏观错误码、二级宏观错误码、三级宏观错误码。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>在无法更加具体确定的错误场景中，可以直接使用一级宏观错误码，分别是：A0001（用户端错误）、B0001（系统执行出错）、C0001（调用第三方服务出错）。</p></div><div class="hint-container tip"><p class="hint-container-title">正例</p><p>调用第三方服务出错是一级，中间件错误是二级，消息服务出错是三级。</p></div><p>11.【参考】错误码的后三位编号与 HTTP 状态码没有任何关系。 12.【参考】错误码尽量有利于不同文化背景的开发者进行交流与代码协作。</p><div class="hint-container warning"><p class="hint-container-title">说明</p><p>英文单词形式的错误码不利于非英语母语国家（如阿拉伯语、希伯来语、俄罗斯语等）之间的开发者互相协作。</p></div><ol start="13"><li>【参考】错误码即人性，感性认知+口口相传，使用纯数字来进行错误码编排不利于感性记忆和分类。</li></ol><div class="hint-container warning"><p class="hint-container-title">说明</p><p>数字是一个整体，每位数字的地位和含义是相同的。 反例：一个五位数字 12345，第 1 位是错误等级，第 2 位是错误来源，345 是编号，人的大脑不会主动地分辨每位数字的不同含义。</p></div>',18),o=[l];function r(c,p){return n(),i("div",null,o)}const h=t(a,[["render",r],["__file","11-错误码.html.vue"]]),m=JSON.parse('{"path":"/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/11-%E9%94%99%E8%AF%AF%E7%A0%81.html","title":"错误码","lang":"zh-CN","frontmatter":{"title":"错误码","date":"2021-02-14T00:00:00.000Z","category":"阿里Java开发手册","order":11,"description":"【强制】错误码的制定原则：快速溯源、简单易记、沟通标准化。 说明 错误码想得过于完美和复杂，就像康熙字典中的生僻字一样，用词似乎精准，但是字典不容易随身携带并且简单易懂。 正例 错误码回答的问题是谁的错？错在哪？ 1）错误码必须能够快速知晓错误来源，可快速判断是谁的问题。 2）错误码易于记忆和比对（代码中容易 equals）。 3）错误码能够脱离文档和...","head":[["meta",{"property":"og:url","content":"https://zhangchengk.github.io/%E9%98%BF%E9%87%8CJava%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/11-%E9%94%99%E8%AF%AF%E7%A0%81.html"}],["meta",{"property":"og:site_name","content":"Panda诚的博客"}],["meta",{"property":"og:title","content":"错误码"}],["meta",{"property":"og:description","content":"【强制】错误码的制定原则：快速溯源、简单易记、沟通标准化。 说明 错误码想得过于完美和复杂，就像康熙字典中的生僻字一样，用词似乎精准，但是字典不容易随身携带并且简单易懂。 正例 错误码回答的问题是谁的错？错在哪？ 1）错误码必须能够快速知晓错误来源，可快速判断是谁的问题。 2）错误码易于记忆和比对（代码中容易 equals）。 3）错误码能够脱离文档和..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-27T13:31:00.000Z"}],["meta",{"property":"article:author","content":"Panda诚"}],["meta",{"property":"article:published_time","content":"2021-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-27T13:31:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"错误码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-27T13:31:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Panda诚\\",\\"url\\":\\"https://zhangchengk.github.io/about/intro.html\\"}]}"]]},"headers":[],"git":{"createdTime":1719488402000,"updatedTime":1719495060000,"contributors":[{"name":"zhangcheng","email":"zhangchengk@yonyou.com","commits":2}]},"readingTime":{"minutes":3.42,"words":1026},"filePathRelative":"阿里Java开发手册/11-错误码.md","localizedDate":"2021年2月14日","excerpt":"<ol>\\n<li>【强制】错误码的制定原则：快速溯源、简单易记、沟通标准化。</li>\\n</ol>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">说明</p>\\n<p>错误码想得过于完美和复杂，就像康熙字典中的生僻字一样，用词似乎精准，但是字典不容易随身携带并且简单易懂。</p>\\n</div>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">正例</p>\\n<p>错误码回答的问题是谁的错？错在哪？</p>\\n<ul>\\n<li>1）错误码必须能够快速知晓错误来源，可快速判断是谁的问题。</li>\\n<li>2）错误码易于记忆和比对（代码中容易 equals）。</li>\\n<li>3）错误码能够脱离文档和系统平台达到线下轻量化地自由沟通的目的。</li>\\n</ul>\\n</div>","autoDesc":true}');export{h as comp,m as data};
