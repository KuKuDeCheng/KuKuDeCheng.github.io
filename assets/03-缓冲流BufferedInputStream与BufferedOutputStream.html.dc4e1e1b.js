import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as c,c as o,a as n,b as t,e as s,d as l}from"./app.b55ac23c.js";const i={},u=s("\u8F6C\u81EA\uFF1A"),r={href:"http://blog.csdn.net/zhaoyanjun6/article/details/54894451",target:"_blank",rel:"noopener noreferrer"},d=s("http://blog.csdn.net/zhaoyanjun6/article/details/54894451"),k=n("br",null,null,-1),m=s(" \u672C\u6587\u51FA\u81EA"),v={href:"http://blog.csdn.net/zhaoyanjun6/",target:"_blank",rel:"noopener noreferrer"},b=s("\u3010\u8D75\u5F66\u519B\u7684\u535A\u5BA2\u3011"),f=l(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>InputStream
|__FilterInputStream
        |__BufferedInputStream
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u9996\u5148\u629B\u51FA\u4E00\u4E2A\u95EE\u9898\uFF0C\u6709\u4E86<code>InputStream</code>\u4E3A\u4EC0\u4E48\u8FD8\u8981\u6709<code>BufferedInputStream</code>?</strong></p><p><code>BufferedInputStream</code>\u548C<code>BufferedOutputStream</code>\u8FD9\u4E24\u4E2A\u7C7B\u5206\u522B\u662F<code>FilterInputStream</code>\u548C<code>FilterOutputStream</code>\u7684\u5B50\u7C7B\uFF0C\u4F5C\u4E3A\u88C5\u9970\u5668\u5B50\u7C7B\uFF0C\u4F7F\u7528\u5B83\u4EEC\u53EF\u4EE5\u9632\u6B62\u6BCF\u6B21\u8BFB\u53D6/\u53D1\u9001\u6570\u636E\u65F6\u8FDB\u884C\u5B9E\u9645\u7684\u5199\u64CD\u4F5C\uFF0C\u4EE3\u8868\u7740\u4F7F\u7528\u7F13\u51B2\u533A\u3002</p><p>\u6211\u4EEC\u6709\u5FC5\u8981\u77E5\u9053\u4E0D\u5E26\u7F13\u51B2\u7684\u64CD\u4F5C\uFF0C\u6BCF\u8BFB\u4E00\u4E2A\u5B57\u8282\u5C31\u8981\u5199\u5165\u4E00\u4E2A\u5B57\u8282\uFF0C\u7531\u4E8E\u6D89\u53CA\u78C1\u76D8\u7684IO\u64CD\u4F5C\u76F8\u6BD4\u5185\u5B58\u7684\u64CD\u4F5C\u8981\u6162\u5F88\u591A\uFF0C\u6240\u4EE5\u4E0D\u5E26\u7F13\u51B2\u7684\u6D41\u6548\u7387\u5F88\u4F4E\u3002\u5E26\u7F13\u51B2\u7684\u6D41\uFF0C\u53EF\u4EE5\u4E00\u6B21\u8BFB\u5F88\u591A\u5B57\u8282\uFF0C\u4F46\u4E0D\u5411\u78C1\u76D8\u4E2D\u5199\u5165\uFF0C\u53EA\u662F\u5148\u653E\u5230\u5185\u5B58\u91CC\u3002\u7B49\u51D1\u591F\u4E86\u7F13\u51B2\u533A\u5927\u5C0F\u7684\u65F6\u5019\u4E00\u6B21\u6027\u5199\u5165\u78C1\u76D8\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u53EF\u4EE5\u51CF\u5C11\u78C1\u76D8\u64CD\u4F5C\u6B21\u6570\uFF0C\u901F\u5EA6\u5C31\u4F1A\u63D0\u9AD8\u5F88\u591A\uFF01</p><p>\u540C\u65F6\u6B63\u56E0\u4E3A\u5B83\u4EEC\u5B9E\u73B0\u4E86\u7F13\u51B2\u529F\u80FD\uFF0C\u6240\u4EE5\u8981\u6CE8\u610F\u5728\u4F7F\u7528<code>BufferedOutputStream</code>\u5199\u5B8C\u6570\u636E\u540E\uFF0C\u8981\u8C03\u7528<code>flush()</code>\u65B9\u6CD5\u6216<code>close()</code>\u65B9\u6CD5\uFF0C\u5F3A\u884C\u5C06\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u5199\u51FA\u3002\u5426\u5219\u53EF\u80FD\u65E0\u6CD5\u5199\u51FA\u6570\u636E\u3002\u4E0E\u4E4B\u76F8\u4F3C\u8FD8<code>BufferedReader</code>\u548C<code>BufferedWriter</code>\u4E24\u4E2A\u7C7B\u3002</p><p>\u73B0\u5728\u5C31\u53EF\u4EE5\u56DE\u7B54\u5728\u672C\u6587\u7684\u5F00\u5934\u63D0\u51FA\u7684\u95EE\u9898\uFF1A</p><p><code>BufferedInputStream</code>\u548C<code>BufferedOutputStream</code>\u7C7B\u5C31\u662F\u5B9E\u73B0\u4E86\u7F13\u51B2\u529F\u80FD\u7684\u8F93\u5165\u6D41/\u8F93\u51FA\u6D41\u3002\u4F7F\u7528\u5E26\u7F13\u51B2\u7684\u8F93\u5165\u8F93\u51FA\u6D41\uFF0C\u6548\u7387\u66F4\u9AD8\uFF0C\u901F\u5EA6\u66F4\u5FEB\u3002</p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3\uFF1A</h3><ul><li><p><code>BufferedInputStream</code> \u662F\u7F13\u51B2\u8F93\u5165\u6D41\u3002\u5B83\u7EE7\u627F\u4E8E<code>FilterInputStream</code>\u3002</p></li><li><p><code>BufferedInputStream</code> \u7684\u4F5C\u7528\u662F\u4E3A\u53E6\u4E00\u4E2A\u8F93\u5165\u6D41\u6DFB\u52A0\u4E00\u4E9B\u529F\u80FD\uFF0C\u4F8B\u5982\uFF0C\u63D0\u4F9B\u201C\u7F13\u51B2\u529F\u80FD\u201D\u4EE5\u53CA\u652F\u6301<code>mark()\u6807\u8BB0</code>\u548C<code>reset()\u91CD\u7F6E\u65B9\u6CD5</code>\u3002</p></li><li><p><code>BufferedInputStream</code> \u672C\u8D28\u4E0A\u662F\u901A\u8FC7\u4E00\u4E2A\u5185\u90E8\u7F13\u51B2\u533A\u6570\u7EC4\u5B9E\u73B0\u7684\u3002\u4F8B\u5982\uFF0C\u5728\u65B0\u5EFA\u67D0\u8F93\u5165\u6D41\u5BF9\u5E94\u7684<code>BufferedInputStream</code>\u540E\uFF0C\u5F53\u6211\u4EEC\u901A\u8FC7<code>read()</code>\u8BFB\u53D6\u8F93\u5165\u6D41\u7684\u6570\u636E\u65F6\uFF0C<code>BufferedInputStream</code>\u4F1A\u5C06\u8BE5\u8F93\u5165\u6D41\u7684\u6570\u636E\u5206\u6279\u7684\u586B\u5165\u5230\u7F13\u51B2\u533A\u4E2D\u3002\u6BCF\u5F53\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u88AB\u8BFB\u5B8C\u4E4B\u540E\uFF0C\u8F93\u5165\u6D41\u4F1A\u518D\u6B21\u586B\u5145\u6570\u636E\u7F13\u51B2\u533A\uFF1B\u5982\u6B64\u53CD\u590D\uFF0C\u76F4\u5230\u6211\u4EEC\u8BFB\u5B8C\u8F93\u5165\u6D41\u6570\u636E\u4F4D\u7F6E\u3002</p></li></ul><h2 id="bufferedinputstream-api\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#bufferedinputstream-api\u7B80\u4ECB" aria-hidden="true">#</a> BufferedInputStream API\u7B80\u4ECB</h2><h3 id="\u6E90\u7801\u5173\u952E\u5B57\u6BB5\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5173\u952E\u5B57\u6BB5\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5173\u952E\u5B57\u6BB5\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> defaultBufferSize <span class="token operator">=</span> <span class="token number">8192</span><span class="token punctuation">;</span><span class="token comment">//\u5185\u7F6E\u7F13\u5B58\u5B57\u8282\u6570\u7EC4\u7684\u5927\u5C0F 8KB</span>

<span class="token keyword">protected</span> <span class="token keyword">volatile</span> <span class="token keyword">byte</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">//\u5185\u7F6E\u7F13\u5B58\u5B57\u8282\u6570\u7EC4</span>

<span class="token keyword">protected</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>	<span class="token comment">//\u5F53\u524Dbuf\u4E2D\u7684\u5B57\u8282\u603B\u6570\u3001\u6CE8\u610F\u4E0D\u662F\u5E95\u5C42\u5B57\u8282\u8F93\u5165\u6D41\u7684\u6E90\u4E2D\u5B57\u8282\u603B\u6570</span>

<span class="token keyword">protected</span> <span class="token keyword">int</span> pos<span class="token punctuation">;</span>		<span class="token comment">//\u5F53\u524Dbuf\u4E2D\u4E0B\u4E00\u4E2A\u88AB\u8BFB\u53D6\u7684\u5B57\u8282\u4E0B\u6807</span>

<span class="token keyword">protected</span> <span class="token keyword">int</span> markpos <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>	<span class="token comment">//\u6700\u540E\u4E00\u6B21\u8C03\u7528mark(int readLimit)\u65B9\u6CD5\u8BB0\u5F55\u7684buf\u4E2D\u4E0B\u4E00\u4E2A\u88AB\u8BFB\u53D6\u7684\u5B57\u8282\u7684\u4F4D\u7F6E</span>

<span class="token keyword">protected</span> <span class="token keyword">int</span> marklimit<span class="token punctuation">;</span>	<span class="token comment">//\u8C03\u7528mark\u540E\u3001\u5728\u540E\u7EED\u8C03\u7528reset()\u65B9\u6CD5\u5931\u8D25\u4E4B\u524D\u4E91\u5BFB\u7684\u4ECEin\u4E2D\u8BFB\u53D6\u7684\u6700\u5927\u6570\u636E\u91CF\u3001\u7528\u4E8E\u9650\u5236\u88AB\u6807\u8BB0\u540Ebuffer\u7684\u6700\u5927\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">)</span> <span class="token comment">//\u4F7F\u7528\u9ED8\u8BA4buf\u5927\u5C0F\u3001\u5E95\u5C42\u5B57\u8282\u8F93\u5165\u6D41\u6784\u5EFAbis </span>

<span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> in<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token comment">//\u4F7F\u7528\u6307\u5B9Abuf\u5927\u5C0F\u3001\u5E95\u5C42\u5B57\u8282\u8F93\u5165\u6D41\u6784\u5EFAbis</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E00\u822C\u65B9\u6CD5\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4E00\u822C\u65B9\u6CD5\u4ECB\u7ECD" aria-hidden="true">#</a> \u4E00\u822C\u65B9\u6CD5\u4ECB\u7ECD</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u8FD4\u56DE\u5E95\u5C42\u6D41\u5BF9\u5E94\u7684\u6E90\u4E2D\u6709\u6548\u53EF\u4F9B\u8BFB\u53D6\u7684\u5B57\u8282\u6570      </span>

<span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u5173\u95ED\u6B64\u6D41\u3001\u91CA\u653E\u4E0E\u6B64\u6D41\u6709\u5173\u7684\u6240\u6709\u8D44\u6E90  </span>

<span class="token keyword">boolean</span> <span class="token function">markSupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u67E5\u770B\u6B64\u6D41\u662F\u5426\u652F\u6301mark</span>

<span class="token keyword">void</span> <span class="token function">mark</span><span class="token punctuation">(</span><span class="token keyword">int</span> readLimit<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6807\u8BB0\u5F53\u524Dbuf\u4E2D\u8BFB\u53D6\u4E0B\u4E00\u4E2A\u5B57\u8282\u7684\u4E0B\u6807  </span>

<span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u8BFB\u53D6buf\u4E2D\u4E0B\u4E00\u4E2A\u5B57\u8282  </span>

<span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u8BFB\u53D6buf\u4E2D\u4E0B\u4E00\u4E2A\u5B57\u8282  </span>

<span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u91CD\u7F6E\u6700\u540E\u4E00\u6B21\u8C03\u7528mark\u6807\u8BB0\u7684buf\u4E2D\u7684\u4F4D\u5B50  </span>

<span class="token keyword">long</span> <span class="token function">skip</span><span class="token punctuation">(</span><span class="token keyword">long</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u8DF3\u8FC7n\u4E2A\u5B57\u8282\u3001 \u4E0D\u4EC5\u4EC5\u662Fbuf\u4E2D\u7684\u6709\u6548\u5B57\u8282\u3001\u4E5F\u5305\u62ECin\u7684\u6E90\u4E2D\u7684\u5B57\u8282</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bufferedoutputstream-api\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#bufferedoutputstream-api\u7B80\u4ECB" aria-hidden="true">#</a> BufferedOutputStream API\u7B80\u4ECB</h2><h3 id="\u5173\u952E\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u5173\u952E\u5B57\u6BB5" aria-hidden="true">#</a> \u5173\u952E\u5B57\u6BB5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf<span class="token punctuation">;</span>   <span class="token comment">//\u5185\u7F6E\u7F13\u5B58\u5B57\u8282\u6570\u7EC4\u3001\u7528\u4E8E\u5B58\u653E\u7A0B\u5E8F\u8981\u5199\u5165out\u7684\u5B57\u8282  </span>

<span class="token keyword">protected</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>   <span class="token comment">//\u5185\u7F6E\u7F13\u5B58\u5B57\u8282\u6570\u7EC4\u4E2D\u73B0\u6709\u5B57\u8282\u603B\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6784\u9020\u51FD\u6570-1" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570-1" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4F7F\u7528\u9ED8\u8BA4\u5927\u5C0F\u3001\u5E95\u5C42\u5B57\u8282\u8F93\u51FA\u6D41\u6784\u9020bos\u3002\u9ED8\u8BA4\u7F13\u51B2\u5927\u5C0F\u662F 8192 \u5B57\u8282( 8KB )</span>

<span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> out<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u4F7F\u7528\u6307\u5B9A\u5927\u5C0F\u3001\u5E95\u5C42\u5B57\u8282\u8F93\u51FA\u6D41\u6784\u9020bos</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6784\u9020\u51FD\u6570\u6E90\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Creates a new buffered output stream to write data to the
  * specified underlying output stream.
  * <span class="token keyword">@param</span>   <span class="token parameter">out</span>   the underlying output stream.
  */</span>
 <span class="token keyword">public</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> out<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">this</span><span class="token punctuation">(</span>out<span class="token punctuation">,</span> <span class="token number">8192</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

 <span class="token doc-comment comment">/**
  * Creates a new buffered output stream to write data to the
  * specified underlying output stream with the specified buffer
  * size.
  *
  * <span class="token keyword">@param</span>   <span class="token parameter">out</span>    the underlying output stream.
  * <span class="token keyword">@param</span>   <span class="token parameter">size</span>   the buffer size.
  * <span class="token keyword">@exception</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if size <span class="token entity named-entity" title="&lt;">&amp;lt;</span>= 0.
  */</span>
 <span class="token keyword">public</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> out<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">super</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Buffer size &lt;= 0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E00\u822C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E00\u822C\u65B9\u6CD5" aria-hidden="true">#</a> \u4E00\u822C\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5728\u8FD9\u91CC\u63D0\u4E00\u53E5,\`BufferedOutputStream\`\u6CA1\u6709\u81EA\u5DF1\u7684\`close\`\u65B9\u6CD5,\u5F53\u4ED6\u8C03\u7528\u7236\u7C7B\`FilterOutputStrem\`\u7684\u65B9\u6CD5\u5173\u95ED\u65F6,\u4F1A\u95F4\u63A5\u8C03\u7528\u81EA\u5DF1\u5B9E\u73B0\u7684\`flush\`\u65B9\u6CD5\u5C06buf\u4E2D\u6B8B\u5B58\u7684\u5B57\u8282flush\u5230out\u4E2D,\u518D\`out.flush()\`\u5230\u76EE\u7684\u5730\u4E2D,DataOutputStream\u4E5F\u662F\u5982\u6B64\u3002 </span>

<span class="token keyword">void</span>  <span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  \u5C06\u5199\u5165bos\u4E2D\u7684\u6570\u636Eflush\u5230out\u6307\u5B9A\u7684\u76EE\u7684\u5730\u4E2D\u3001\u6CE8\u610F\u8FD9\u91CC\u4E0D\u662Fflush\u5230out\u4E2D\u3001\u56E0\u4E3A\u5176\u5185\u90E8\u53C8\u8C03\u7528\u4E86out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  

<span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">byte</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>      \u5C06\u4E00\u4E2A\u5B57\u8282\u5199\u5165\u5230buf\u4E2D  

<span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> off<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>      \u5C06b\u7684\u4E00\u90E8\u5206\u5199\u5165buf\u4E2D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u4EC0\u4E48\u65F6\u5019flush()\u624D\u6709\u6548\u5462\uFF1F<br> \u7B54\u6848\u662F\uFF1A\u5F53OutputStream\u662FBufferedOutputStream\u65F6\u3002</p><p>\u5F53\u5199\u6587\u4EF6\u9700\u8981flush()\u7684\u6548\u679C\u65F6\uFF0C\u9700\u8981<br> FileOutputStream fos = new FileOutputStream(\u201Cc:\\a.txt\u201D);<br> BufferedOutputStream bos = new BufferedOutputStream(fos);<br> \u4E5F\u5C31\u662F\u8BF4\uFF0C\u9700\u8981\u5C06FileOutputStream\u4F5C\u4E3ABufferedOutputStream\u6784\u9020\u51FD\u6570\u7684\u53C2\u6570\u4F20\u5165\uFF0C\u7136\u540E\u5BF9BufferedOutputStream\u8FDB\u884C\u5199\u5165\u64CD\u4F5C\uFF0C\u624D\u80FD\u5229\u7528\u7F13\u51B2\u53CAflush()\u3002</p><p>\u67E5\u770BBufferedOutputStream\u7684\u6E90\u4EE3\u7801\uFF0C\u53D1\u73B0\u6240\u8C13\u7684buffer\u5176\u5B9E\u5C31\u662F\u4E00\u4E2Abyte[]\u3002<br> BufferedOutputStream\u7684\u6BCF\u4E00\u6B21write\u5176\u5B9E\u662F\u5C06\u5185\u5BB9\u5199\u5165byte[]\uFF0C\u5F53buffer\u5BB9\u91CF\u5230\u8FBE\u4E0A\u9650\u65F6\uFF0C\u4F1A\u89E6\u53D1\u771F\u6B63\u7684\u78C1\u76D8\u5199\u5165\u3002<br> \u800C\u53E6\u4E00\u79CD\u89E6\u53D1\u78C1\u76D8\u5199\u5165\u7684\u529E\u6CD5\u5C31\u662F\u8C03\u7528flush()\u4E86\u3002</p><p>1.<code>BufferedOutputStream</code>\u5728<code>close()</code>\u65F6\u4F1A\u81EA\u52A8flush<br> 2.<code>BufferedOutputStream</code>\u5728\u4E0D\u8C03\u7528<code>close()</code>\u7684\u60C5\u51B5\u4E0B\uFF0C\u7F13\u51B2\u533A\u4E0D\u6EE1\uFF0C\u53C8\u9700\u8981\u628A\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u5199\u5165\u5230\u6587\u4EF6\u6216\u901A\u8FC7\u7F51\u7EDC\u53D1\u9001\u5230\u522B\u7684\u673A\u5668\u65F6\uFF0C\u624D\u9700\u8981\u8C03\u7528flush.</p><p>\u5B9E\u6218\u6F14\u7EC31\uFF1A\u590D\u5236\u6587\u4EF6.<br> \u64CD\u4F5C\uFF1A\u4F7F\u7528\u7F13\u5B58\u6D41\u5C06F\u76D8\u6839\u76EE\u5F55\u91CC\u9762\u540D\u5B57\u4E3A\uFF1A123.png \u56FE\u7247\u590D\u5236\u6210 abc.png</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>app</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">A3</span> <span class="token punctuation">{</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

		<span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;F:/123.png&quot;</span> <span class="token punctuation">;</span>
		<span class="token class-name">String</span> filePath2 <span class="token operator">=</span> <span class="token string">&quot;F:/abc.png&quot;</span> <span class="token punctuation">;</span>
		<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token class-name">File</span> file2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span> filePath2 <span class="token punctuation">)</span> <span class="token punctuation">;</span>
		<span class="token function">copyFile</span><span class="token punctuation">(</span> file <span class="token punctuation">,</span> file2 <span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * \u590D\u5236\u6587\u4EF6
	 * <span class="token keyword">@param</span> <span class="token parameter">oldFile</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">newFile</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyFile</span><span class="token punctuation">(</span> <span class="token class-name">File</span> oldFile <span class="token punctuation">,</span> <span class="token class-name">File</span> newFile<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>
		<span class="token class-name">BufferedInputStream</span> bufferedInputStream <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>

		<span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>
		<span class="token class-name">BufferedOutputStream</span> bufferedOutputStream <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>

		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span> oldFile <span class="token punctuation">)</span> <span class="token punctuation">;</span>
			bufferedInputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span> inputStream <span class="token punctuation">)</span> <span class="token punctuation">;</span>

			outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span> newFile <span class="token punctuation">)</span> <span class="token punctuation">;</span>
			bufferedOutputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span> outputStream <span class="token punctuation">)</span> <span class="token punctuation">;</span>

			<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//\u4EE3\u8868\u4E00\u6B21\u6700\u591A\u8BFB\u53D61KB\u7684\u5185\u5BB9</span>

			<span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> <span class="token comment">//\u4EE3\u8868\u5B9E\u9645\u8BFB\u53D6\u7684\u5B57\u8282\u6570</span>
			<span class="token keyword">while</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>length <span class="token operator">=</span> bufferedInputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span> b <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token comment">//length \u4EE3\u8868\u5B9E\u9645\u8BFB\u53D6\u7684\u5B57\u8282\u6570</span>
				bufferedOutputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length <span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
            <span class="token comment">//\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u5199\u5165\u5230\u6587\u4EF6</span>
			bufferedOutputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> bufferedOutputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					bufferedOutputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> bufferedInputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					bufferedInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> inputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span> outputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6548\u679C\u56FE\uFF1A</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTcwMjA2MTYzNjAzOTc2?x-oss-process=image/format,png" alt="\u8FD9\u91CC\u5199\u56FE\u7247\u63CF\u8FF0" loading="lazy"></p><h3 id="\u5982\u4F55\u6B63\u786E\u7684\u5173\u95ED\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u6B63\u786E\u7684\u5173\u95ED\u6D41" aria-hidden="true">#</a> \u5982\u4F55\u6B63\u786E\u7684\u5173\u95ED\u6D41</h3><p>\u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u5173\u95ED\u6D41\u7684\u4EE3\u7801\u662F\u8FD9\u6837\u5199\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">finally</span> <span class="token punctuation">{</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> bufferedOutputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					bufferedOutputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> bufferedInputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					bufferedInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> inputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span> outputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u601D\u8003\uFF1A\u5728\u5904\u7406\u6D41\u5173\u95ED\u5B8C\u6210\u540E\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u5173\u95ED\u8282\u70B9\u6D41\u5417\uFF1F</p><p>\u8BA9\u6211\u4EEC\u5E26\u7740\u95EE\u9898\u53BB\u770B\u6E90\u7801\uFF1A</p><ul><li><code>bufferedOutputStream.close();</code></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * Closes this input stream and releases any system resources
     * associated with the stream.
     * Once the stream has been closed, further read(), available(), reset(),
     * or skip() invocations will throw an IOException.
     * Closing a previously closed stream has no effect.
     *
     * <span class="token keyword">@exception</span>  <span class="token reference"><span class="token class-name">IOException</span></span>  if an I/O error occurs.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>buffer <span class="token operator">=</span> buf<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>bufUpdater<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">InputStream</span> input <span class="token operator">=</span> in<span class="token punctuation">;</span>
                in <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// Else retry in case a new buf was CASed in fill()</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>close\uFF08\uFF09\u65B9\u6CD5\u7684\u4F5C\u7528<br> 1\u3001\u5173\u95ED\u8F93\u5165\u6D41\uFF0C\u5E76\u4E14\u91CA\u653E\u7CFB\u7EDF\u8D44\u6E90<br> 2\u3001BufferedInputStream\u88C5\u9970\u4E00\u4E2A InputStream \u4F7F\u4E4B\u5177\u6709\u7F13\u51B2\u529F\u80FD\uFF0Cis\u8981\u5173\u95ED\u53EA\u9700\u8981\u8C03\u7528\u6700\u7EC8\u88AB\u88C5\u9970\u51FA\u7684\u5BF9\u8C61\u7684 close()\u65B9\u6CD5\u5373\u53EF\uFF0C\u56E0\u4E3A\u5B83\u6700\u7EC8\u4F1A\u8C03\u7528\u771F\u6B63\u6570\u636E\u6E90\u5BF9\u8C61\u7684 close()\u65B9\u6CD5\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u53EA\u8C03\u7528\u5916\u5C42\u6D41\u7684close\u65B9\u6CD5\u5173\u95ED\u5176\u88C5\u9970\u7684\u5185\u5C42\u6D41\u3002</p><p>\u90A3\u4E48\u5982\u679C\u6211\u4EEC\u60F3\u9010\u4E2A\u5173\u95ED\u6D41\uFF0C\u6211\u4EEC\u8BE5\u600E\u4E48\u505A\uFF1F</p><p>\u7B54\u6848\u662F\uFF1A\u5148\u5173\u95ED\u5916\u5C42\u6D41\uFF0C\u518D\u5173\u95ED\u5185\u5C42\u6D41\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\u662F\uFF1A\u5148\u6253\u5F00\u7684\u540E\u5173\u95ED\uFF0C\u540E\u6253\u5F00\u7684\u5148\u5173\u95ED\uFF1B\u53E6\u4E00\u79CD\u60C5\u51B5\uFF1A\u770B\u4F9D\u8D56\u5173\u7CFB\uFF0C\u5982\u679C\u6D41a\u4F9D\u8D56\u6D41b\uFF0C\u5E94\u8BE5\u5148\u5173\u95ED\u6D41a\uFF0C\u518D\u5173\u95ED\u6D41b\u3002\u4F8B\u5982\u5904\u7406\u6D41a\u4F9D\u8D56\u8282\u70B9\u6D41b\uFF0C\u5E94\u8BE5\u5148\u5173\u95ED\u5904\u7406\u6D41a\uFF0C\u518D\u5173\u95ED\u8282\u70B9\u6D41b</p><p>\u770B\u61C2\u4E86\u600E\u4E48\u6B63\u786E\u7684\u5173\u95ED\u6D41\u4E4B\u540E\uFF0C\u90A3\u4E48\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F18\u5316\u4E0A\u9762\u7684\u4EE3\u7801\u4E86\uFF0C\u53EA\u5173\u95ED\u5916\u5C42\u7684\u5904\u7406\u6D41\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">finally</span> <span class="token punctuation">{</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> bufferedOutputStream <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					bufferedOutputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span> bufferedInputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					bufferedInputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45);function y(w,h){const a=p("ExternalLinkIcon");return c(),o("div",null,[n("blockquote",null,[n("p",null,[u,n("a",r,[d,t(a)]),k,m,n("a",v,[b,t(a)])])]),f])}var O=e(i,[["render",y],["__file","03-\u7F13\u51B2\u6D41BufferedInputStream\u4E0EBufferedOutputStream.html.vue"]]);export{O as default};
