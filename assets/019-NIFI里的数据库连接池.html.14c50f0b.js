import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as e}from"./app.b55ac23c.js";var t="/assets/dbcp.42b43d16.png";const o={},p=e(`<p>\u901A\u5E38\u6211\u4EEC\u5728NIFI\u91CC\u6700\u5E38\u89C1\u7684\u4F7F\u7528\u573A\u666F\u5C31\u662F\u8BFB\u5199\u5173\u7CFB\u578B\u6570\u636E\u5E93\uFF0C\u4E00\u4E9B\u7EC4\u4EF6\u6BD4\u5982GenerateTableFetch\u3001ExecuteSQL\u3001PutSQL\u3001ExecuteSQLRecord\u3001PutDatabaseRecord\u7B49\u7B49\uFF0C\u90FD\u4F1A\u6709\u4E00\u4E2A\u5C5E\u6027\u914D\u7F6E\u5927\u6982\u53EB<code>Database Connection Pooling Service</code>\u7684\uFF0C\u5BF9\u5E94\u7684\u63A5\u53E3\u662F<code>DBCPService</code>\uFF0C\u5176\u5B9E\u73B0\u7C7B\u6709\uFF1AHiveConnectionPool DBCPConnectionPool DBCPConnectionPoolLookup\u3002\u6211\u4EEC\u7528\u7684\u6700\u591A\u7684\u5C31\u662FDBCPConnectionPool\u3002\u5177\u4F53\u600E\u4E48\u914D\u7F6E\u8FD9\u91CC\u5C31\u4E0D\u8D58\u8FF0\u4E86\uFF0C\u770B\u5BF9\u5E94\u7684Controller Service\u6587\u6863\u5C31\u53EF\u4EE5\u4E86\u3002</p><h2 id="database-connection-url" tabindex="-1"><a class="header-anchor" href="#database-connection-url" aria-hidden="true">#</a> Database Connection URL</h2><p>\u8FD9\u91CC\u5927\u6982\u7F57\u5217\u51E0\u4E2A\u901A\u7528\u7684URL(ip+port+db)\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Oracle: jdbc:oracle:thin:@{}:{}:{}
  Oracle 12+: jdbc:oracle:thin:@{}:{}:{}
  MySQL: jdbc:mysql://{}:{}/{}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;tinyInt1isBit=false&amp;useSSL=false
  Greenplum: jdbc:pivotal:greenplum://{}:{};DatabaseName={}
  PostgreSQL: jdbc:postgresql://{}:{}/{}
  DB2: jdbc:db2://{}:{}/{}
  MS SQL 2008: jdbc:sqlserver://{}:{};DatabaseName={}
  MS SQL 2012+: jdbc:sqlserver://{}:{};DatabaseName={}
  Cache: jdbc:Cache://{}:{}/{}
  Ignite: jdbc:ignite:thin://{}:{};schema={}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="database-driver-class-name" tabindex="-1"><a class="header-anchor" href="#database-driver-class-name" aria-hidden="true">#</a> Database Driver Class Name</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Oracle: oracle.jdbc.driver.OracleDriver
  Oracle 12+: oracle.jdbc.driver.OracleDriver
  MySQL: com.mysql.jdbc.Driver
  Greenplum: com.pivotal.jdbc.GreenplumDriver
  PostgreSQL: org.postgresql.Driver
  DB2: com.ibm.db2.jcc.DB2Driver
  MS SQL 2008: com.microsoft.sqlserver.jdbc.SQLServerDriver
  MS SQL 2012+: com.microsoft.sqlserver.jdbc.SQLServerDriver
  Cache: com.intersys.jdbc.CacheDriver
  Ignite: org.apache.ignite.IgniteJdbcThinDriver
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="database-driver-location-s" tabindex="-1"><a class="header-anchor" href="#database-driver-location-s" aria-hidden="true">#</a> Database Driver Location(s)</h2><p>\u8FD9\u91CC\u6709\u4E00\u4E2A\u5C0F\u7A8D\u95E8\uFF0C\u6211\u4EEC\u5728\u90E8\u7F72NIFI\u7684\u65F6\u5019\uFF0C\u901A\u5E38\u5E94\u8BE5\u9884\u7F6E\u4E00\u4E9BJDBC\u9A71\u52A8\uFF0C\u6BD4\u5982\u8BF4\u5728NIFI\u76EE\u5F55\u4E0B\u65B0\u5EFA\u4E00\u4E2Ajdbc\u7684\u76EE\u5F55\uFF0C\u91CC\u9762\u662F\u5404\u79CD\u6570\u636E\u5E93\u7684\u9A71\u52A8\u6587\u4EF6\u3002\u7136\u540E\u5728\u6307\u5B9A\u9A71\u52A8\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u4F7F\u7528NIFI\u8868\u8FBE\u5F0F\u8BED\u8A00\${NIFI_HOME}\u6765\u83B7\u53D6NIFI\u7684\u5B89\u88C5\u76EE\u5F55\uFF0C\u8FDB\u800C\u5C31\u53EF\u4EE5\u901A\u7528\u7684\u53BB\u83B7\u53D6\u6307\u5B9A\u7684\u9A71\u52A8\u5305\u4E86\u3002(\u8FD9\u91CC\u662F\u5229\u7528NIFI\u8868\u8FBE\u5F0F\u8BED\u8A00\u8BFB\u53D6\u73AF\u5883\u53D8\u91CF\u7684\u529F\u80FD\uFF0CNIFI_HOME\u662F\u5728\u542F\u52A8\u7684\u65F6\u5019\u8BBE\u7F6E\u7684\u4E34\u65F6\u73AF\u5883\u53D8\u91CF\uFF0C\u5728window10\u4E0B\u53EF\u80FD\u4F1A\u6709\u4E9B\u95EE\u9898\uFF0C\u5982\u679C\u662F\u90E8\u7F72Linux\u4EE5\u5916\u7684\u73AF\u5883\uFF0C\u8FD8\u9700\u8981\u81EA\u5DF1\u6D4B\u8BD5\u4E00\u756A\u3002)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  Oracle: \${NIFI_HOME:append(&#39;/jdbc/oracle-jdbc-11.2.04.jar&#39;)}
  Oracle 12+: \${NIFI_HOME:append(&#39;/jdbc/oracle-jdbc-11.2.04.jar&#39;)}
  LogMiner: \${NIFI_HOME:append(&#39;/jdbc/ojdbc8.jar&#39;)}
  MySQL: \${NIFI_HOME:append(&#39;/jdbc/mysql-connector-java-5.1.46.jar&#39;)}
  Greenplum: \${NIFI_HOME:append(&#39;/jdbc/greenplum-1.0.jar&#39;)}
  PostgreSQL: \${NIFI_HOME:append(&#39;/jdbc/postgresql-9.4.1212.jar&#39;)}
  MS SQL 2008: \${NIFI_HOME:append(&#39;/jdbc/mssql-jdbc-6.5.4.jre8-preview.jar&#39;)}
  MS SQL 2012+: \${NIFI_HOME:append(&#39;/jdbc/mssql-jdbc-6.5.4.jre8-preview.jar&#39;)}
  Cache: \${NIFI_HOME:append(&#39;/jdbc/cache-jdbc-2.0.0.jar&#39;)}
  Ignite: \${NIFI_HOME:append(&#39;/jdbc/ignite-core-2.8.0.jar&#39;)}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E95\u5C42\u8FDE\u63A5\u6C60\u7684\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42\u8FDE\u63A5\u6C60\u7684\u9009\u62E9" aria-hidden="true">#</a> \u5E95\u5C42\u8FDE\u63A5\u6C60\u7684\u9009\u62E9</h2><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>commons-dbcp2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51E0\u4E2A\u7814\u7A76" tabindex="-1"><a class="header-anchor" href="#\u51E0\u4E2A\u7814\u7A76" aria-hidden="true">#</a> \u51E0\u4E2A\u7814\u7A76</h2><p>\u7814\u7A761\uFF1A\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u4F1A\u6709\u4EC0\u4E48\u5F02\u5E38\uFF1F</p><p>\u9996\u5148\u6211\u4EEC\u770B\u4E00\u4E0B\u63A5\u53E3<code>DBCPService.java</code>\uFF0C\u8FD9\u91CC\u6211\u4EEC\u53EA\u770B\u5230\u4E86<code>ProcessException</code>\u5F02\u5E38\uFF0C\u8FD8\u5F97\u770B\u5177\u4F53\u5B9E\u73B0\u7C7B\u3002\u8FD9\u91CC\u989D\u5916\u8BF4\u4E00\u4E0B\uFF0C<code>getConnection(Map&lt;String,String&gt; attributes)</code>\u6700\u7EC8\u662F\u5728<code>DBCPConnectionPoolLookup</code>\u91CC\u5B9E\u73B0\u7684\uFF0C\u4F5C\u7528\u662F\u6839\u636E\u5C5E\u6027<code>database.name</code>\u7684\u503C\u53BB\u67E5\u627E\u5BF9\u5E94\u7684<code>DBCPConnectionPool</code>.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
* Allows a Map of attributes to be passed to the DBCPService for use in configuration, etc.
* An implementation will want to override getConnection() to return getConnection(Collections.emptyMap()),
* and override this method (possibly with its existing getConnection() implementation).
* <span class="token keyword">@param</span> <span class="token parameter">attributes</span> a Map of attributes to be passed to the DBCPService. The use of these
*                   attributes is implementation-specific, and the source of the attributes
*                   is processor-specific
* <span class="token keyword">@return</span> a Connection from the specifed/configured connection pool(s)
* <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ProcessException</span></span> if an error occurs while getting a connection
*/</span>
<span class="token keyword">default</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> attributes<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
    <span class="token comment">// default implementation (for backwards compatibility) is to call getConnection()</span>
    <span class="token comment">// without attributes</span>
    <span class="token keyword">return</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>DBCPConnectionPool</code>\u91CC\uFF0C\u4F7F\u7528\u7684\u662F<code>commons-dbcp2</code>\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\uFF0C\u5F53<code>if a database access error occurs</code>\u6216\u8D85\u65F6\uFF0C\u4F1A\u629B\u51FA<code>SQLException</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Connection</span> con<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>kerberosUser <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">KerberosAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Connection</span><span class="token punctuation">&gt;</span></span> kerberosAction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KerberosAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>kerberosUser<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            con <span class="token operator">=</span> kerberosAction<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            con <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> con<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ProcessException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7814\u7A762\uFF1A\u5728\u67D0\u4E9B\u539F\u56E0\u4E0B(IP ping\u4E0D\u901A\u3001\u6570\u636E\u5E93\u6302\u4E86)\uFF0C\u629B\u51FA\u5F02\u5E38\u4E86\uFF0C\u7EC4\u4EF6\u7684\u6D41\u6587\u4EF6\u600E\u4E48\u529E\uFF1F</p><p>\u8FD9\u91CC\u56E0\u4E3A\u6700\u540E\u629B\u51FA\u7684\u662F<code>ProcessException</code>\u5F02\u5E38\uFF0C\u662F\u4E00\u4E2A<code>RuntimeException</code>\uFF0C\u800C\u83B7\u53D6\u8FDE\u63A5\u8FD9\u4E2A\u52A8\u4F5C\u662F\u5728\u88AB\u8C03\u5EA6\u7684\u65B9\u6CD5<code>onTrigger</code>\u91CC\u7684\u3002\u5148\u770B\u7B80\u5355\u7684\u6BD4\u5982<code>ExecuteSQL</code>\uFF0C\u8FD9\u7C7B\u7EC4\u4EF6\u90FD\u662F\u7EE7\u627F<code>AbstractProcessor</code>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">ProcessSessionFactory</span> sessionFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ProcessSession</span> session <span class="token operator">=</span> sessionFactory<span class="token punctuation">.</span><span class="token function">createSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">onTrigger</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        session<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u4E86<code>session.rollback(true)</code>\u5927\u6982\u6211\u4EEC\u5C31\u6BD4\u8F83\u660E\u6717\u4E86\uFF0C\u83B7\u53D6\u8FDE\u63A5\u5F02\u5E38\uFF0C\u88AB\u6355\u83B7\u7136\u540ENIFI\u4E8B\u52A1\u56DE\u6EDA\u4E86\uFF0C\u6D41\u6587\u4EF6\u662F\u56DE\u5230\u7EC4\u4EF6\u7684\u4E0A\u6E38\u53BB\u4E86\u3002\u800C\u6BD4\u5982<code>GenerateTableFetch</code>\u8FD9\u79CD\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Connection</span> con <span class="token operator">=</span> dbcpService<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>finalFileToProcess <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> finalFileToProcess<span class="token punctuation">.</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Statement</span> st <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ProcessException</span> pe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Log the cause of the ProcessException if it is available</span>
    <span class="token class-name">Throwable</span> t <span class="token operator">=</span> <span class="token punctuation">(</span>pe<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> pe <span class="token operator">:</span> pe<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Error during processing: {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    session<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u7EC8\u4E5F\u4F1A\u5728\u81EA\u5DF1\u7684<code>onTrigger</code>\u91CC<code>session.rollback()</code>\u7684\u3002\u6BD4\u8F83\u9EBB\u70E6\u7684\u662F<code>PutSQL</code>\u8FD9\u4E00\u7C7B\uFF0C\u51FD\u6570\u5F0F\u7F16\u7A0B\u6709\u4E9B\u7ED5\u7684</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token class-name">ProcessSession</span> session<span class="token punctuation">,</span> <span class="token class-name">FC</span> functionContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">// Pass the FlowFiles to initialize a connection</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">C</span> connection <span class="token operator">=</span> initConnection<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> session<span class="token punctuation">,</span> functionContext<span class="token punctuation">,</span> flowFiles<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ProcessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Throw uncaught exception as RuntimeException so that this processor will be yielded.</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to execute due to %s&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u6BB5\u662F\u62BD\u8C61\u51FA\u53BB\u7684\u51FD\u6570\uFF0C\u5728PutSQL\u91CC\u88AB\u8FD9\u6BB5\u4EE3\u7801<code>process.onTrigger(context, session, functionContext)</code>\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTrigger</span><span class="token punctuation">(</span><span class="token class-name">ProcessContext</span> context<span class="token punctuation">,</span> <span class="token class-name">ProcessSessionFactory</span> sessionFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ProcessException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Boolean</span> rollbackOnFailure <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">RollbackOnFailure</span><span class="token punctuation">.</span>ROLLBACK_ON_FAILURE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">FunctionContext</span> functionContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FunctionContext</span><span class="token punctuation">(</span>rollbackOnFailure<span class="token punctuation">)</span><span class="token punctuation">;</span>
    functionContext<span class="token punctuation">.</span>obtainKeys <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>OBTAIN_GENERATED_KEYS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RollbackOnFailure</span><span class="token punctuation">.</span><span class="token function">onTrigger</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sessionFactory<span class="token punctuation">,</span> functionContext<span class="token punctuation">,</span> <span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> session <span class="token operator">-&gt;</span> process<span class="token punctuation">.</span><span class="token function">onTrigger</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> session<span class="token punctuation">,</span> functionContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RollbackOnFailure\u53C8\u4F20\u4E86\u4E00\u6BB5\u51FD\u6570<code>(session, t) -&gt; {}</code> \uFF0C\u6211\u4EEC\u770B\u5230<code>session.rollback(shouldPenalize)</code>\uFF0C\u4E5F\u662FNIFI\u4E8B\u52A1\u56DE\u6EDA\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">PartialFunctions</span><span class="token punctuation">.</span><span class="token function">onTrigger</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sessionFactory<span class="token punctuation">,</span> logger<span class="token punctuation">,</span> onTrigger<span class="token punctuation">,</span> <span class="token punctuation">(</span>session<span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// If RollbackOnFailure is enabled, do not penalize processing FlowFiles when rollback,</span>
    <span class="token comment">// in order to keep those in the incoming relationship to be processed again.</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> shouldPenalize <span class="token operator">=</span> <span class="token operator">!</span>functionContext<span class="token punctuation">.</span><span class="token function">isRollbackOnFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    session<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span>shouldPenalize<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// However, keeping failed FlowFile in the incoming relationship would retry it too often.</span>
    <span class="token comment">// So, administratively yield the process.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>functionContext<span class="token punctuation">.</span><span class="token function">isRollbackOnFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Administratively yielding {} after rolling back due to {}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>context<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">}</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u4F53\u4E0A\u770B\uFF0C\u4E0E\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u76F8\u5173\u7EC4\u4EF6\u5728\u9047\u5230\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u629B\u51FA<code>ProcessException</code>\u65F6\u90FD\u662F\u4F1ANIFI\u56DE\u6EDA\u4E8B\u52A1\u7684\uFF0C\u6D41\u6587\u4EF6\u4F1A\u91CD\u8FD4\u7EC4\u4EF6\u4E0A\u6E38Connection\u3002</p><p>\u8FD9\u4E2A\u7591\u95EE\u518D\u5570\u55E6\u4E00\u53E5\uFF0C\u8FD9\u91CC\u7EA0\u7ED3\u7684\u662F\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u83B7\u5F97\u5F02\u5E38\uFF0C\u629B\u51FA<code>ProcessException</code>\u540E\uFF0C\u6D41\u6587\u4EF6\u4F1A\u56DE\u6EDA\u5230\u4E0A\u6E38\u8FD8\u662F\u4F20\u8F93\u5230\u4E0B\u6E38\u7684\u95EE\u9898\uFF0C\u4E0D\u8981\u4E0E\u6267\u884CSQL\u5F02\u5E38\u6DF7\u6DC6\u4E86(\u6267\u884CSQL\u629B\u51FA\u7684SQLExeception\u5404\u4E2A\u4EE3\u7801\u90FD\u6709\u5904\u7406\uFF0C\u4F46\u6BEB\u65E0\u7591\u95EE\u6D41\u6587\u4EF6\u90FD\u662F\u6D41\u5411\u4E0B\u6E38\u7684)\u3002\u7136\u540E<code>PutSQL</code> <code>PutDatabaseRecord</code>\u4E4B\u7C7B\u7684<code>Rollback On Failure</code>\uFF0C\u8BBE\u7F6E\u4E3Atrue\u7684\u65F6\u5019\uFF0C\u6267\u884CSQL\u62A5\u9519\u629B\u51FA\u7684SQLExeception\u4E5F\u4F1ANIFI\u56DE\u6EDA\u4E8B\u52A1\u3002</p><p>\u7591\u95EE3\uFF1A\u591A\u7EC4\u4EF6\u591A\u7EBF\u7A0B\uFF0C\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u7684\u603B\u7EBF\u7A0B\u6570\u591A\u8FC7\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u91CC\u7684\u8FDE\u63A5\uFF0C\u4F1A\u600E\u4E48\u6837\uFF1F</p><p>\u6211\u4EEC\u76F4\u63A5\u770BDBCP2\u91CC\u7684\u6838\u5FC3\u83B7\u53D6Connection\u7684\u65B9\u6CD5\uFF0C\u6CA1\u6709\u8FDE\u63A5\u4E86\u5C31\u8FD4\u56DENULL</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">C</span> conn <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">borrowObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PoolGuardConnectionWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u8FDE\u63A5\u6C60\u662F\u963B\u585E\u961F\u5217\uFF0C\u5F53\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u90FD\u88AB\u4F7F\u7528\uFF0C\u65E0\u6CD5\u7ACB\u5373\u83B7\u53D6\u5230\u53EF\u7528\u7684\u8FDE\u63A5\uFF0C\u5176\u4E2D\u6570\u636E\u5E93\u8FDE\u63A5\u6C60<code>Max Wait Time</code>\u914D\u7F6E\u4F1A\u5F71\u54CD\u963B\u585E\u7B49\u5F85\u65F6\u95F4(-1\u662F\u65E0\u9650\u963B\u585E)\uFF0C\u963B\u585E\u7B49\u5F85\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4\u8FD8\u6CA1\u6709\u53EF\u7528\u7684\u8FDE\u63A5\uFF0C\u5C31\u4F1A\u629B\u51FA\u5F02\u5E38\u3002\u629B\u51FA\u5F02\u5E38\u540E\uFF0CNIFI\u56DE\u6EDA\u4E8B\u52A1\uFF0C\u6D41\u6587\u4EF6\u8FD8\u662F\u56DE\u5230\u4E0A\u6E38\u3002</p><p><img src="`+t+'" alt="" loading="lazy"></p><p>\u4F46\u662F\uFF0C<code>Max Wait Time</code>\u8BBE\u7F6E\u6210-1\u65E0\u9650\u963B\u585E\u663E\u7136\u662F\u4E0D\u5408\u9002\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u914C\u60C5\u8BBE\u7F6E\u4E00\u4E2A\u65F6\u95F4(\u4F30\u8BA1\u4E00\u4E0B\u4E00\u822C\u4E00\u4E2AConnection\u62FF\u51FA\u6765\uFF0C\u6267\u884CSQL\uFF0C\u8FD8\u56DE\u6C60\u91CC\u9700\u8981\u7684\u4E8B\u4EF6)\u3002\u6700\u597D\u662F\u5EFA\u6D41\u7A0B\u7684\u65F6\u5019\uFF0C\u8861\u91CF\u5904\u7406\u5668\u548C\u7EBF\u7A0B\u7684\u6570\u91CF\u4E0E\u6B64\u8FDE\u63A5\u6C60\u7684\u6700\u5927\u8FDE\u63A5\u6570\uFF0C\u5728\u6570\u636E\u5E93\u8FDE\u63A5\u7684\u65F6\u5019\uFF0C\u8BA9\u5904\u7406\u5668\u5904\u7406\u6570\u636E\u7684\u65F6\u5019\u603B\u662F\u53EF\u4EE5\u83B7\u53D6\u5230\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u6BD5\u7ADF\u963B\u585E\u5728\u90A3\u91CC\uFF0C\u8FD8\u662F\u8017\u670D\u52A1\u5668\u7684\u8D44\u6E90\u7684\u3002</p><h2 id="dbcpconnectionpoollookup" tabindex="-1"><a class="header-anchor" href="#dbcpconnectionpoollookup" aria-hidden="true">#</a> DBCPConnectionPoolLookup</h2><p><code>DBCPConnectionPoolLookup</code>\u8FD9\u4E2AController Service\u5F88\u7B80\u5355\uFF0C\u4E5F\u975E\u5E38\u6709\u7528\uFF0C\u8BF4\u767D\u4E86\uFF0C\u5B83\u5C31\u662F\u4FDD\u5B58\u4E86\u4E00\u4E2A\u6211\u4EEC\u4F7F\u7528\u8005\u5B9A\u4E49\u7684Map\uFF0Ckey\u662F\u6211\u4EEC\u81EA\u5DF1\u547D\u540D\u7684\uFF0Cvalue\u662F\u6211\u4EEC\u9009\u62E9\u7684\u5F53\u524D\u6D41\u7A0B\u53EF\u7528\u7684<code>DBCPConnectionPool</code>,\u7136\u540E\u5728\u6D41\u7A0B\u8FD0\u884C\u8FC7\u7A0B\u4E2D\uFF0C<code>DBCPConnectionPoolLookup</code>\u6839\u636EFlowFile\u4E2D\u4E00\u4E2A\u53EB<code>database.name</code>\u7684\u5C5E\u6027\u53BB\u8FD9\u4E2AMap\u91CC\u67E5\u627E<code>DBCPConnectionPool</code>\u3002\u4F7F\u7528<code>DBCPConnectionPoolLookup</code>\u7684\u6700\u5927\u4F18\u70B9\u662F\u4EC0\u4E48\uFF1F\u7075\u6D3B\u554A\uFF01\u7EC4\u4EF6\u4E0D\u7ED1\u5B9A\u4E8E\u4E00\u4E2A\u6570\u636E\u5E93\uFF0C\u6839\u636E\u6D41\u6587\u4EF6\u4E2D\u7684\u5C5E\u6027\u52A8\u6001\u53BB\u67E5\u627E\u5BF9\u5E94\u7684\u6570\u636E\u5E93\u3002</p>',38),c=[p];function i(l,u){return s(),a("div",null,c)}var k=n(o,[["render",i],["__file","019-NIFI\u91CC\u7684\u6570\u636E\u5E93\u8FDE\u63A5\u6C60.html.vue"]]);export{k as default};
