import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.7e6ca879.js";const t={},o=p(`<p>\u5C06\u4E00\u4E2A\u7ED9\u5B9A\u5B57\u7B26\u4E32\u6839\u636E\u7ED9\u5B9A\u7684\u884C\u6570\uFF0C\u4EE5\u4ECE\u4E0A\u5F80\u4E0B\u3001\u4ECE\u5DE6\u5230\u53F3\u8FDB\u884C Z \u5B57\u5F62\u6392\u5217\u3002</p><p>\u6BD4\u5982\u8F93\u5165\u5B57\u7B26\u4E32\u4E3A <code>&quot;LEETCODEISHIRING&quot;</code> \u884C\u6570\u4E3A 3 \u65F6\uFF0C\u6392\u5217\u5982\u4E0B\uFF1A</p><pre>L   C   I   R
E T O E S I I G
E   D   H   N
</pre><p>\u4E4B\u540E\uFF0C\u4F60\u7684\u8F93\u51FA\u9700\u8981\u4ECE\u5DE6\u5F80\u53F3\u9010\u884C\u8BFB\u53D6\uFF0C\u4EA7\u751F\u51FA\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u6BD4\u5982\uFF1A<code>&quot;LCIRETOESIIGEDHN&quot;</code>\u3002</p><p>\u8BF7\u4F60\u5B9E\u73B0\u8FD9\u4E2A\u5C06\u5B57\u7B26\u4E32\u8FDB\u884C\u6307\u5B9A\u884C\u6570\u53D8\u6362\u7684\u51FD\u6570\uFF1A</p><pre>string convert(string s, int numRows);
</pre><p><strong>\u793A\u4F8B 1:</strong></p><pre>\u8F93\u5165: s = &quot;LEETCODEISHIRING&quot;, numRows = 3
\u8F93\u51FA: &quot;LCIRETOESIIGEDHN&quot;
</pre><p><strong>\u793A\u4F8B 2:</strong></p><pre>\u8F93\u5165: s = &quot;LEETCODEISHIRING&quot;, numRows = 4
\u8F93\u51FA: &quot;LDREOEIIECIHNTSG&quot;
\u89E3\u91CA:

L     D     R
E   O E   I I
E C   I H   N
T     S     G
</pre><p>\u65B9\u6CD5\u4E00\uFF1A\u6309\u884C\u6392\u5E8F \u4F7F\u7528 min(numRows,len(s))\u4E2A\u5217\u8868\u6765\u8868\u793A Z \u5B57\u5F62\u56FE\u6848\u4E2D\u7684\u975E\u7A7A\u884C\u3002\u4ECE\u5DE6\u5230\u53F3\u8FED\u4EE3 ss\uFF0C\u5C06\u6BCF\u4E2A\u5B57\u7B26\u6DFB\u52A0\u5230\u5408\u9002\u7684\u884C\u3002\u53EF\u4EE5\u4F7F\u7528\u5F53\u524D\u884C\u548C\u5F53\u524D\u65B9\u5411\u8FD9\u4E24\u4E2A\u53D8\u91CF\u5BF9\u5408\u9002\u7684\u884C\u8FDB\u884C\u8DDF\u8E2A\u3002\u53EA\u6709\u5F53\u6211\u4EEC\u5411\u4E0A\u79FB\u52A8\u5230\u6700\u4E0A\u9762\u7684\u884C\u6216\u5411\u4E0B\u79FB\u52A8\u5230\u6700\u4E0B\u9762\u7684\u884C\u65F6\uFF0C\u5F53\u524D\u65B9\u5411\u624D\u4F1A\u53D1\u751F\u6539\u53D8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> numRows<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>numRows <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> s<span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StringBuilder</span><span class="token punctuation">&gt;</span></span> rows <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>numRows<span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            rows<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> curRow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> goingDown <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rows<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>curRow<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>curRow <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> curRow <span class="token operator">==</span> numRows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> goingDown <span class="token operator">=</span> <span class="token operator">!</span>goingDown<span class="token punctuation">;</span>
            curRow <span class="token operator">+=</span> goingDown <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">StringBuilder</span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> row <span class="token operator">:</span> rows<span class="token punctuation">)</span> ret<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD5\u4E8C\uFF1A\u6309\u884C\u8BBF\u95EE</p><p>\u6309\u7167\u4E0E\u9010\u884C\u8BFB\u53D6 Z \u5B57\u5F62\u56FE\u6848\u76F8\u540C\u7684\u987A\u5E8F\u8BBF\u95EE\u5B57\u7B26\u4E32\u3002\u9996\u5148\u8BBF\u95EE\u884C0\u4E2D\u7684\u6240\u6709\u5B57\u7B26\uFF0C\u63A5\u7740\u8BBF\u95EE\u884C1\uFF0C\u7136\u540E\u884C2\uFF0C\u4F9D\u6B64\u7C7B\u63A8...</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> numRows<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>numRows <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> s<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> midRows <span class="token operator">=</span> numRows <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//\u4E2D\u95F4\u6709\u51E0\u884C \u51CF2\u662F\u7B2C\u4E00\u884C\u548C\u6700\u540E\u4E00\u884C</span>
        <span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> numRows <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//\u5FFD\u7565z\u5B57\u578B\u7684\u4E2D\u95F4 \u6BCF\u4E24\u4E2A\u7AD6\u884C\u4E4B\u95F4\u7684\u6B65\u957F</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>numRows<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">int</span> step1 <span class="token operator">=</span> numRows <span class="token operator">-</span> i <span class="token operator">+</span> midRows <span class="token operator">-</span> i<span class="token punctuation">;</span><span class="token comment">// z\u5B57\u578B\u4E2D\u95F4\u7684\u884C \u6BCF\u4E00\u4E2A\u7AD6\u884C\u5230\u4E0B\u4E00\u4E2A\u5143\u7D20\u7684\u6B65\u957F</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">!=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i<span class="token operator">!=</span> numRows<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> j<span class="token operator">+</span>step1<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>j<span class="token operator">+</span>step1<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                j <span class="token operator">=</span> j <span class="token operator">+</span> step<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),e=[o];function c(l,u){return s(),a("div",null,e)}var k=n(t,[["render",c],["__file","6-Z\u5B57\u5F62\u53D8\u6362.html.vue"]]);export{k as default};
