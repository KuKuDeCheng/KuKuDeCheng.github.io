import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as e,F as o,d as a,a as n,e as s}from"./app.5c332ac6.js";const c={},l=a(`<h2 id="\u4EC0\u4E48\u662F\u52A8\u6001\u4EE3\u7406-dynamic-proxy" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u52A8\u6001\u4EE3\u7406-dynamic-proxy" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u52A8\u6001\u4EE3\u7406(dynamic proxy)</h2><p>\u52A8\u6001\u4EE3\u7406\uFF08\u4EE5\u4E0B\u79F0\u4EE3\u7406\uFF09\uFF0C\u5229\u7528Java\u7684\u53CD\u5C04\u6280\u672F(Java Reflection)\uFF0C\u5728\u8FD0\u884C\u65F6<strong>\u521B\u5EFA\u4E00\u4E2A\u5B9E\u73B0\u67D0\u4E9B\u7ED9\u5B9A\u63A5\u53E3\u7684\u65B0\u7C7B</strong>\uFF08\u4E5F\u79F0\u201C\u52A8\u6001\u4EE3\u7406\u7C7B\u201D\uFF09\u53CA\u5176\u5B9E\u4F8B\uFF08\u5BF9\u8C61\uFF09(Using Java Reflection to create dynamic implementations of interfaces at runtime)\u3002\u4EE3\u7406\u7684\u662F\u63A5\u53E3(Interfaces)\uFF0C\u4E0D\u662F\u7C7B(Class)\uFF0C\u66F4\u4E0D\u662F\u62BD\u8C61\u7C7B\u3002</p><h2 id="\u52A8\u6001\u4EE3\u7406\u6709\u4EC0\u4E48\u7528" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u4EE3\u7406\u6709\u4EC0\u4E48\u7528" aria-hidden="true">#</a> \u52A8\u6001\u4EE3\u7406\u6709\u4EC0\u4E48\u7528</h2><p>\u89E3\u51B3\u7279\u5B9A\u95EE\u9898\uFF1A\u4E00\u4E2A\u63A5\u53E3\u7684\u5B9E\u73B0\u5728\u7F16\u8BD1\u65F6\u65E0\u6CD5\u77E5\u9053\uFF0C\u9700\u8981\u5728\u8FD0\u884C\u65F6\u624D\u80FD\u5B9E\u73B0</p><p>\u5B9E\u73B0\u67D0\u4E9B\u8BBE\u8BA1\u6A21\u5F0F\uFF1A\u9002\u914D\u5668(Adapter)\u6216\u4FEE\u9970\u5668(Decorator)</p><p>\u9762\u5411\u5207\u9762\u7F16\u7A0B\uFF1A\u5982AOP in Spring</p><h2 id="\u521B\u5EFA\u52A8\u6001\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a> \u521B\u5EFA\u52A8\u6001\u4EE3\u7406</h2><p>\u5229\u7528Java\u7684Proxy\u7C7B\uFF0C\u8C03\u7528Proxy.newProxyInstance()\uFF0C\u521B\u5EFA\u52A8\u6001\u5BF9\u8C61\u5341\u5206\u7B80\u5355\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">InvocationHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyInvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Class</span> proxyClass <span class="token operator">=</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">getProxyClass</span><span class="token punctuation">(</span><span class="token class-name">Foo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token class-name">Foo</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Foo</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Foo</span><span class="token punctuation">)</span> proxyClass<span class="token punctuation">.</span>
         <span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
         <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> handler <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">//\u6216\u66F4\u7B80\u5355</span>
<span class="token class-name">Foo</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Foo</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span><span class="token class-name">Foo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token class-name">Foo</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                                     handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Proxy.newProxyInstance()\u65B9\u6CD5\u6709\u4E09\u4E2A\u53C2\u6570\uFF1A</p><ol><li>\u7C7B\u52A0\u8F7D\u5668(Class Loader)</li><li>\u9700\u8981\u5B9E\u73B0\u7684\u63A5\u53E3\u6570\u7EC4</li><li>InvocationHandler\u63A5\u53E3\u3002\u6240\u6709\u52A8\u6001\u4EE3\u7406\u7C7B\u7684\u65B9\u6CD5\u8C03\u7528\uFF0C\u90FD\u4F1A\u4EA4\u7531InvocationHandler\u63A5\u53E3\u5B9E\u73B0\u7C7B\u91CC\u7684invoke()\u65B9\u6CD5\u53BB\u5904\u7406\u3002\u8FD9\u662F\u52A8\u6001\u4EE3\u7406\u7684\u5173\u952E\u6240\u5728\u3002</li></ol><h2 id="invocationhandler\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#invocationhandler\u63A5\u53E3" aria-hidden="true">#</a> InvocationHandler\u63A5\u53E3</h2><p>\u63A5\u53E3\u91CC\u6709\u4E00\u4E2Ainvoke()\u65B9\u6CD5\u3002\u57FA\u672C\u7684\u505A\u6CD5\u662F\uFF0C\u521B\u5EFA\u4E00\u4E2A\u7C7B\uFF0C\u5B9E\u73B0\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u5229\u7528\u53CD\u5C04\u5728invoke()\u65B9\u6CD5\u91CC\u5B9E\u73B0\u9700\u6C42\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyInvocationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">{</span>

  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token comment">//do something &quot;dynamic&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>invoke()\u65B9\u6CD5\u540C\u6837\u6709\u4E09\u4E2A\u53C2\u6570\uFF1A</p><ol><li>\u52A8\u6001\u4EE3\u7406\u7C7B\u7684\u5F15\u7528\uFF0C\u901A\u5E38\u60C5\u51B5\u4E0B\u4E0D\u9700\u8981\u5B83\u3002\u4F46\u53EF\u4EE5\u4F7F\u7528getClass()\u65B9\u6CD5\uFF0C\u5F97\u5230proxy\u7684Class\u7C7B\u4ECE\u800C\u53D6\u5F97\u5B9E\u4F8B\u7684\u7C7B\u4FE1\u606F\uFF0C\u5982\u65B9\u6CD5\u5217\u8868\uFF0Cannotation\u7B49\u3002</li><li>\u65B9\u6CD5\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u4EE3\u8868\u88AB\u52A8\u6001\u4EE3\u7406\u7C7B\u8C03\u7528\u7684\u65B9\u6CD5\u3002\u4ECE\u4E2D\u53EF\u5F97\u5230\u65B9\u6CD5\u540D\uFF0C\u53C2\u6570\u7C7B\u578B\uFF0C\u8FD4\u56DE\u7C7B\u578B\u7B49\u7B49</li><li>args\u5BF9\u8C61\u6570\u7EC4\uFF0C\u4EE3\u8868\u88AB\u8C03\u7528\u65B9\u6CD5\u7684\u53C2\u6570\u3002\u6CE8\u610F\u57FA\u672C\u7C7B\u578B(int,long)\u4F1A\u88AB\u88C5\u7BB1\u6210\u5BF9\u8C61\u7C7B\u578B(Interger, Long)</li></ol><h2 id="\u52A8\u6001\u4EE3\u7406\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u4EE3\u7406\u4F8B\u5B50" aria-hidden="true">#</a> \u52A8\u6001\u4EE3\u7406\u4F8B\u5B50</h2><h3 id="_1-\u6A21\u62DFaop" tabindex="-1"><a class="header-anchor" href="#_1-\u6A21\u62DFaop" aria-hidden="true">#</a> 1. \u6A21\u62DFAOP</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IVehical</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>

<span class="token comment">//concrete implementation</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">implements</span> <span class="token class-name">IVehical</span><span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Car is running&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment">//proxy class</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VehicalProxy</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">IVehical</span> vehical<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">VehicalProxy</span><span class="token punctuation">(</span><span class="token class-name">IVehical</span> vehical<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>vehical <span class="token operator">=</span> vehical<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">IVehical</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">IVehical</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">VehicalInvacationHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VehicalInvacationHandler</span><span class="token punctuation">(</span>vehical<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">IVehical</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span><span class="token class-name">IVehical</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interfaces<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VehicalInvacationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IVehical</span> vehical<span class="token punctuation">;</span>
        
        <span class="token keyword">public</span> <span class="token class-name">VehicalInvacationHandler</span><span class="token punctuation">(</span><span class="token class-name">IVehical</span> vehical<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>vehical <span class="token operator">=</span> vehical<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--before running...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> ret <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>vehical<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--after running...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">IVehical</span> car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VehicalProxy</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VehicalProxy</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">IVehical</span> proxyObj <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        proxyObj<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
 * output:
 * --before running...
 * Car is running
 * --after running...
 * */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u5BF9IVehical\u63A5\u53E3\u7684\u8C03\u7528\uFF0C\u4F1A\u4EA4\u7531Proxy\u7684invoke\u65B9\u6CD5\u5904\u7406\uFF0C\u5E76\u5728\u4E0D\u6539\u53D8run()\u7684\u6E90\u4EE3\u7801\u4E0B\uFF0C\u65B0\u589E\u4E86\u52A8\u6001\u7684\u903B\u8F91\uFF08before running/after running)\uFF0C\u8FD9\u6B63\u5F0FAOP\u6240\u505A\u7684\u3002</p><p>\u6DF1\u5165\u8BB2\uFF0CProxy.newInstance(ClassLoader loader, Class&lt;?&gt;[] interfaces, InvocationHandler h)\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B.</p>`,21),i=n("ul",null,[n("li",null,[s("(1)\u6839\u636E\u53C2\u6570loader\u548Cinterfaces\u8C03\u7528\u65B9\u6CD5 getProxyClass(loader, interfaces)\u521B\u5EFA\u4EE3\u7406\u7C7B"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"P"),n("mi",null,"r"),n("mi",null,"o"),n("mi",null,"x"),n("mi",null,"y"),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"\u2018")]),n("annotation",{encoding:"application/x-tex"},"Proxy. `")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"P"),n("span",{class:"mord mathnormal"},"ro"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mord"},".\u2018")])])]),s("Proxy0`\u7C7B\u5B9E\u73B0\u4E86interfaces\u7684\u63A5\u53E3,\u5E76\u7EE7\u627F\u4E86Proxy\u7C7B.")]),n("li",null,[s("(2)\u5B9E\u4F8B\u5316"),n("code",null,"$Proxy0"),s("\u5E76\u5728\u6784\u9020\u65B9\u6CD5\u4E2D\u628ABusinessHandler\u4F20\u8FC7\u53BB,\u63A5\u7740"),n("code",null,"$Proxy0"),s("\u8C03\u7528\u7236\u7C7BProxy\u7684\u6784\u9020\u5668,\u4E3Ah\u8D4B\u503C,\u5982\u4E0B:")])],-1),u=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Proxy</span><span class="token punctuation">{</span>
   <span class="token class-name">InvocationHandler</span> h<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token keyword">protected</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token class-name">InvocationHandler</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>h <span class="token operator">=</span> h<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u5982\u679C\u5C06invoke()\u65B9\u6CD5\u4EE3\u7801\u6539\u6210\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--before running...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        Object ret = method.invoke(vehical, args);</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">IVehical</span><span class="token punctuation">)</span>proxy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--after running...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u4F1A\u662F\u56E0\u4E3Arun()\u65B9\u6CD5\u4F1A\u5F15\u53D1invoke()\uFF0C\u800Cinvoke()\u53C8\u6267\u884Crun()\uFF0C\u5982\u6B64\u4E0B\u53BB\u53D8\u6210\u6B7B\u5FAA\u73AF\uFF0C\u6700\u540E\u6808\u6EA2\u51FA</p><p>\u6240\u4EE5invoke \u63A5\u53E3\u4E2D\u7684proxy\u53C2\u6570\u4E0D\u80FD\u7528\u4E8E\u8C03\u7528\u6240\u5B9E\u73B0\u63A5\u53E3\u7684\u67D0\u4E9B\u65B9\u6CD5\uFF08\u89C1\u53C2\u80034\uFF09\u3002</p><h3 id="_2-\u5229\u7528\u52A8\u6001\u4EE3\u7406\u5B9E\u73B0\u8BBE\u8BA1\u6A21\u5F0F-\u4FEE\u9970\u5668\u548C\u9002\u914D\u5668" tabindex="-1"><a class="header-anchor" href="#_2-\u5229\u7528\u52A8\u6001\u4EE3\u7406\u5B9E\u73B0\u8BBE\u8BA1\u6A21\u5F0F-\u4FEE\u9970\u5668\u548C\u9002\u914D\u5668" aria-hidden="true">#</a> 2. \u5229\u7528\u52A8\u6001\u4EE3\u7406\u5B9E\u73B0\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u4FEE\u9970\u5668\u548C\u9002\u914D\u5668</h3><h3 id="_3-\u5728\u9879\u76EE\u4E2D-\u53EF\u4EE5\u4F7F\u7528\u52A8\u6001\u4EE3\u7406-\u83B7\u53D6\u914D\u7F6E\u6587\u4EF6-\u975E\u5E38\u65B9\u4FBF\u4E14\u6709\u4F18\u52BF" tabindex="-1"><a class="header-anchor" href="#_3-\u5728\u9879\u76EE\u4E2D-\u53EF\u4EE5\u4F7F\u7528\u52A8\u6001\u4EE3\u7406-\u83B7\u53D6\u914D\u7F6E\u6587\u4EF6-\u975E\u5E38\u65B9\u4FBF\u4E14\u6709\u4F18\u52BF" aria-hidden="true">#</a> 3. \u5728\u9879\u76EE\u4E2D\uFF0C\u53EF\u4EE5\u4F7F\u7528\u52A8\u6001\u4EE3\u7406\uFF0C\u83B7\u53D6\u914D\u7F6E\u6587\u4EF6\uFF0C\u975E\u5E38\u65B9\u4FBF\u4E14\u6709\u4F18\u52BF</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Value</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * The actual value expression: e.g. &quot;#<span class="token punctuation">{</span>systemProperties.myProp<span class="token punctuation">}</span>&quot;.
     */</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * config interfaces, map the config properties file:
 * db.url = 
 * db.validation = true
 * db.pool.size = 100
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IConfig</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;db.url&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">dbUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;db.validation&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">boolean</span> <span class="token function">isValidated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;db.pool.size&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">int</span> <span class="token function">poolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>

<span class="token comment">//proxy class</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ConfigFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ConfigFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IConfig</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">InputStream</span> is<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
    
        <span class="token keyword">final</span> <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">IConfig</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span><span class="token class-name">IConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token class-name">IConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PropertyMapper</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">PropertyMapper</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Properties</span> properties<span class="token punctuation">;</span>
    
        <span class="token keyword">public</span> <span class="token class-name">PropertyMapper</span><span class="token punctuation">(</span><span class="token class-name">Properties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> properties<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
        <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    
            <span class="token keyword">final</span> <span class="token class-name">Value</span> value <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Value</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
            <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
              
              <span class="token class-name">String</span> property <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              
              <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> returns <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>returns<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>returns<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>returns<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>returns<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>returns<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>returns<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            
            <span class="token keyword">return</span> property<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">FileNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">IConfig</span> config <span class="token operator">=</span> <span class="token class-name">ConfigFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;config/config.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> dbUrl <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">dbUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isLoginValidated <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">isValidated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> dbPoolSize <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">poolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528\u52A8\u6001\u4EE3\u7406\u8F7D\u5165\u914D\u7F6E\u6587\u4EF6\uFF0C\u5E76\u5C06\u6BCF\u4E00\u4E2A\u914D\u7F6E\u6620\u5C04\u6210\u65B9\u6CD5\uFF0C\u65B9\u4FBF\u6211\u4EEC\u4F7F\u7528\u8FFD\u8E2A\u3002</p>`,9);function k(r,d){return t(),e(o,null,[l,i,u],64)}var b=p(c,[["render",k],["__file","Java\u52A8\u6001\u4EE3\u7406.html.vue"]]);export{b as default};
